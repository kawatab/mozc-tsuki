# Copyright 2010-2021, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

load(
    "//:build_defs.bzl",
    "cc_library_mozc",
    "cc_test_mozc",
)

package_group(
    name = "self_and_friends",
    includes = [
    ],
    packages = [
        "//...",
    ],
)

cc_library_mozc(
    name = "jsoncpp",
    hdrs = ["jsoncpp.h"],
    tags = ["manual"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//third_party/jsoncpp:json",
    ],
)

cc_library_mozc(
    name = "jsonpath",
    srcs = ["jsonpath.cc"],
    hdrs = ["jsonpath.h"],
    tags = ["manual"],
    visibility = [":self_and_friends"],
    deps = [
        ":jsoncpp",
        "//base",
        "//base:logging",
        "//base:number_util",
        "//base:port",
        "@com_google_absl//absl/strings",
    ],
)

cc_test_mozc(
    name = "jsonpath_test",
    srcs = ["jsonpath_test.cc"],
    requires_full_emulation = False,
    tags = ["manual"],
    deps = [
        ":jsonpath",
        "//testing:gunit_main",
    ],
)

cc_library_mozc(
    name = "json_util",
    srcs = ["json_util.cc"],
    hdrs = ["json_util.h"],
    tags = ["manual"],
    visibility = ["//:__subpackages__"],
    deps = [
        ":jsoncpp",
        "//base",
        "//base:logging",
        "//base:number_util",
        "//base:port",
        "//base/protobuf",
        "//base/protobuf:descriptor",
        "//base/protobuf:message",
    ],
)

cc_proto_library(
    name = "json_util_test_cc_proto",
    testonly = 1,
    visibility = ["//visibility:private"],
    deps = [":json_util_test_proto"],
)

proto_library(
    name = "json_util_test_proto",
    testonly = 1,
    srcs = ["json_util_test.proto"],
    visibility = ["//visibility:private"],
)

cc_proto_library(
    name = "json_util_test_proto_cc_proto",
    testonly = 1,
    visibility = ["//visibility:private"],
    deps = [":json_util_test_proto"],
)

cc_test_mozc(
    name = "json_util_test",
    srcs = ["json_util_test.cc"],
    requires_full_emulation = False,
    tags = ["manual"],
    deps = [
        ":json_util",
        ":json_util_test_cc_proto",
        ":jsoncpp",
        "//base:logging",
        "//base:port",
        "//base:util",
        "//testing:gunit_main",
        "//testing:testing_util",
    ],
)
