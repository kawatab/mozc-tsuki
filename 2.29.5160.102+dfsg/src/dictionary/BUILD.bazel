# Copyright 2010-2021, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Description:
#   The implementation of dictionaries used in Mozc.

load(
    "//:build_defs.bzl",
    "mozc_cc_binary",
    "mozc_cc_library",
    "mozc_cc_test",
    "mozc_py_binary",
    "mozc_py_library",
    "mozc_select",
)
load("@bazel_skylib//rules:run_binary.bzl", "run_binary")

mozc_cc_library(
    name = "dictionary_interface",
    hdrs = ["dictionary_interface.h"],
    visibility = [
        # For //converter:converter_impl.
        "//converter:__pkg__",
        # For //dictionary/system:system_dictionary.
        "//dictionary/system:__pkg__",
        # For //engine:small_immutable_converter.
        "//engine:__pkg__",
        # For //prediction:dictionary_predictor.
        "//prediction:__pkg__",
        # For //rewriter:language_aware_rewriter.
        "//rewriter:__pkg__",
    ],
    deps = [
        ":dictionary_token",
        "//base:port",
        "//request:conversion_request",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_test(
    name = "dictionary_impl_test",
    size = "small",
    srcs = ["dictionary_impl_test.cc"],
    requires_full_emulation = False,
    deps = [
        ":dictionary_impl",
        ":dictionary_interface",
        ":dictionary_token",
        ":pos_matcher",
        ":suppression_dictionary",
        ":user_dictionary_stub",
        "//base:port",
        "//base:system_util",
        "//base:util",
        "//config:config_handler",
        "//converter:node_allocator",
        "//data_manager/testing:mock_data_manager",
        "//dictionary/system:system_dictionary",
        "//dictionary/system:value_dictionary",
        "//protocol:config_cc_proto",
        "//request:conversion_request",
        "//testing:gunit_main",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_library(
    name = "dictionary_impl",
    srcs = [
        "dictionary_impl.cc",
    ],
    hdrs = [
        "dictionary_impl.h",
    ],
    visibility = ["//:__subpackages__"],
    deps = [
        ":dictionary_interface",
        ":dictionary_token",
        ":pos_matcher",
        ":suppression_dictionary",
        "//base:logging",
        "//base:util",
        "//protocol:config_cc_proto",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_library(
    name = "suffix_dictionary",
    srcs = ["suffix_dictionary.cc"],
    hdrs = ["suffix_dictionary.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        ":dictionary_interface",
        ":dictionary_token",
        "//base:logging",
        "//base/container:serialized_string_array",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_library(
    name = "user_dictionary",
    srcs = [
        "user_dictionary.cc",
    ],
    hdrs = [
        "user_dictionary.h",
    ],
    visibility = ["//:__subpackages__"],
    deps = [
        ":dictionary_interface",
        ":dictionary_token",
        ":pos_matcher",
        ":suppression_dictionary",
        ":user_dictionary_storage",
        ":user_dictionary_util",
        ":user_pos",
        ":user_pos_interface",
        "//base:file_util",
        "//base:hash",
        "//base:japanese_util",
        "//base:logging",
        "//base:singleton",
        "//base:thread",
        "//base:util",
        "//base/strings:assign",
        "//protocol:config_cc_proto",
        "//protocol:user_dictionary_storage_cc_proto",
        "//request:conversion_request",
        "//usage_stats",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
    ],
)

mozc_cc_test(
    name = "user_dictionary_test",
    size = "small",
    srcs = [
        "user_dictionary_test.cc",
    ],
    requires_full_emulation = False,
    deps = [
        ":dictionary_test_util",
        ":dictionary_token",
        ":pos_matcher",
        ":suppression_dictionary",
        ":user_dictionary",
        ":user_dictionary_storage",
        ":user_pos",
        ":user_pos_interface",
        "//base:file_util",
        "//base:logging",
        "//base:port",
        "//base:random",
        "//base:singleton",
        "//config:config_handler",
        "//data_manager/testing:mock_data_manager",
        "//protocol:config_cc_proto",
        "//request:conversion_request",
        "//testing:gunit_main",
        "//testing:mozctest",
        "//usage_stats",
        "//usage_stats:usage_stats_testing_util",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_library(
    name = "user_dictionary_stub",
    hdrs = ["user_dictionary_stub.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        ":dictionary_interface",
        "@com_google_absl//absl/strings",
    ],
)

# TODO(team): move this rule into dictionary/system.
mozc_cc_library(
    name = "dictionary_token",
    hdrs = ["dictionary_token.h"],
    visibility = [
        "//converter:__subpackages__",
        "//dictionary/system:__subpackages__",
        # For //prediction:dictionary_predictor.
        "//prediction:__pkg__",
        # For //rewriter:date_rewriter
        "//rewriter:__pkg__",
    ],
    deps = ["@com_google_absl//absl/strings"],
)

mozc_py_binary(
    name = "gen_aux_dictionary",
    srcs = ["gen_aux_dictionary.py"],
    visibility = [
        "//:__subpackages__",
    ],
)

mozc_py_binary(
    name = "gen_filtered_dictionary",
    srcs = ["gen_filtered_dictionary.py"],
    visibility = [
        "//:__subpackages__",
    ],
)

mozc_cc_library(
    name = "pos_group",
    hdrs = ["pos_group.h"],
    visibility = ["//:__subpackages__"],
    deps = ["@com_google_absl//absl/base:core_headers"],
)

mozc_py_binary(
    name = "gen_pos_map",
    srcs = ["gen_pos_map.py"],
    deps = [
        "//build_tools:code_generator_util",
    ],
)

run_binary(
    name = "pos_map",
    srcs = [
        "//data/rules:third_party_pos_map.def",
        "//data/rules:user_pos.def",
    ],
    outs = ["pos_map.inc"],
    args = [
        "--user_pos_file=$(location //data/rules:user_pos.def)",
        "--third_party_pos_map_file=$(location //data/rules:third_party_pos_map.def)",
        "--output=$(location pos_map.inc)",
    ],
    tool = ":gen_pos_map",
)

mozc_cc_library(
    name = "user_dictionary_session",
    srcs = ["user_dictionary_session.cc"],
    hdrs = ["user_dictionary_session.h"],
    visibility = ["//gui:__subpackages__"],
    deps = [
        ":user_dictionary_importer",
        ":user_dictionary_storage",
        ":user_dictionary_util",
        "//base:logging",
        "//base:port",
        "//base/protobuf",
        "//base/protobuf:repeated_field",
        "//base/strings:assign",
        "//protocol:user_dictionary_storage_cc_proto",
        "@com_google_absl//absl/container:fixed_array",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_test(
    name = "user_dictionary_session_test",
    size = "medium",
    srcs = ["user_dictionary_session_test.cc"],
    requires_full_emulation = False,
    deps = [
        ":user_dictionary_session",
        ":user_dictionary_storage",
        "//base:file_util",
        "//base:system_util",
        "//protocol:user_dictionary_storage_cc_proto",
        "//testing:gunit_main",
        "//testing:mozctest",
        "//testing:testing_util",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_library(
    name = "user_dictionary_session_handler",
    srcs = ["user_dictionary_session_handler.cc"],
    hdrs = ["user_dictionary_session_handler.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        ":user_dictionary_session",
        ":user_dictionary_util",
        "//base:logging",
        "//base:port",
        "//base/protobuf:repeated_field",
        "//base/strings:assign",
        "//protocol:user_dictionary_storage_cc_proto",
        "@com_google_absl//absl/random",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_test(
    name = "user_dictionary_session_handler_test",
    size = "small",
    srcs = ["user_dictionary_session_handler_test.cc"],
    requires_full_emulation = True,
    deps = [
        ":user_dictionary_session_handler",
        "//base:file_util",
        "//base:system_util",
        "//base/protobuf",
        "//base/protobuf:repeated_field",
        "//protocol:user_dictionary_storage_cc_proto",
        "//testing:gunit_main",
        "//testing:mozctest",
        "//testing:testing_util",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_library(
    name = "user_dictionary_storage",
    srcs = ["user_dictionary_storage.cc"],
    hdrs = ["user_dictionary_storage.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        ":user_dictionary_util",
        "//base:file_stream",
        "//base:file_util",
        "//base:logging",
        "//base:process_mutex",
        "//base/protobuf:zero_copy_stream_impl",
        "//protocol:user_dictionary_storage_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/synchronization",
    ],
)

mozc_cc_test(
    name = "user_dictionary_storage_test",
    size = "small",
    srcs = ["user_dictionary_storage_test.cc"],
    requires_full_emulation = False,
    deps = [
        ":user_dictionary_importer",
        ":user_dictionary_storage",
        "//base:file_stream",
        "//base:file_util",
        "//base:logging",
        "//base:mmap",
        "//base:random",
        "//base:system_util",
        "//base/file:temp_dir",
        "//protocol:user_dictionary_storage_cc_proto",
        "//testing:gunit_main",
        "//testing:mozctest",
        "@com_google_absl//absl/random",
        "@com_google_absl//absl/strings:str_format",
    ],
)

mozc_cc_library(
    name = "user_dictionary_util",
    srcs = ["user_dictionary_util.cc"],
    hdrs = ["user_dictionary_util.h"],
    visibility = [
        "//:__subpackages__",
    ],
    deps = [
        ":user_pos_interface",
        "//base:config_file_stream",
        "//base:japanese_util",
        "//base:logging",
        "//base:port",
        "//base:util",
        "//base/protobuf:repeated_field",
        "//protocol:user_dictionary_storage_cc_proto",
        "@com_google_absl//absl/random",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_test(
    name = "user_dictionary_util_test",
    size = "small",
    srcs = ["user_dictionary_util_test.cc"],
    requires_full_emulation = False,
    deps = [
        ":user_dictionary_util",
        "//base:util",
        "//testing:gunit_main",
        "//testing:testing_util",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_library(
    name = "user_dictionary_importer",
    srcs = [
        "user_dictionary_importer.cc",
        ":pos_map",
    ],
    hdrs = ["user_dictionary_importer.h"],
    visibility = ["//gui:__subpackages__"],
    deps = [
        ":user_dictionary_util",
        "//base:hash",
        "//base:japanese_util",
        "//base:logging",
        "//base:mmap",
        "//base:number_util",
        "//base:util",
        "//protocol:user_dictionary_storage_cc_proto",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_test(
    name = "user_dictionary_importer_test",
    size = "small",
    srcs = ["user_dictionary_importer_test.cc"],
    requires_full_emulation = False,
    deps = [
        ":user_dictionary_importer",
        ":user_dictionary_storage",
        ":user_dictionary_util",
        "//base:util",
        "//testing:gunit_main",
    ],
)

# TODO(team): move this rule into dictionary/system.
mozc_cc_library(
    name = "text_dictionary_loader",
    srcs = [
        "text_dictionary_loader.cc",
    ],
    hdrs = [
        "text_dictionary_loader.h",
    ],
    visibility = [
        "//:__subpackages__",
    ],
    deps = [
        ":dictionary_token",
        ":pos_matcher",
        "//base:japanese_util",
        "//base:logging",
        "//base:multifile",
        "//base:port",
        "//base:util",
        "//testing:gunit_prod",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_test(
    name = "text_dictionary_loader_test",
    size = "small",
    srcs = [
        "text_dictionary_loader_test.cc",
    ],
    requires_full_emulation = False,
    deps = [
        ":dictionary_token",
        ":pos_matcher",
        ":text_dictionary_loader",
        "//base:file_util",
        "//base:util",
        "//data_manager/testing:mock_data_manager",
        "//testing:gunit_main",
        "@com_google_absl//absl/flags:flag",
    ],
)

mozc_cc_library(
    name = "user_pos",
    srcs = ["user_pos.cc"],
    hdrs = ["user_pos.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        ":user_pos_interface",
        "//base:logging",
        "//base/container:serialized_string_array",
        "//base/strings:assign",
        "//data_manager:data_manager_interface",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_test(
    name = "user_pos_test",
    size = "small",
    srcs = ["user_pos_test.cc"],
    requires_full_emulation = False,
    deps = [
        ":user_pos",
        ":user_pos_interface",
        "//base:logging",
        "//base:util",
        "//data_manager/testing:mock_data_manager",
        "//testing:gunit_main",
        "@com_google_absl//absl/strings",
    ],
)

mozc_py_library(
    name = "pos_util",
    srcs = ["pos_util.py"],
    visibility = ["//visibility:private"],
    deps = [
        "//build_tools:code_generator_util",
    ],
)

mozc_py_binary(
    name = "gen_user_pos_data",
    srcs = ["gen_user_pos_data.py"],
    visibility = ["//:__subpackages__"],
    deps = [
        ":pos_util",
        "//build_tools:serialized_string_array_builder",
    ],
)

mozc_py_binary(
    name = "gen_pos_matcher_code",
    srcs = ["gen_pos_matcher_code.py"],
    visibility = ["//:__subpackages__"],
    deps = [":pos_util"],
)

run_binary(
    name = "pos_matcher_impl",
    srcs = ["//data/rules:pos_matcher_rule.def"],
    outs = ["pos_matcher_impl.inc"],
    args = [
        "--pos_matcher_rule_file=$(location //data/rules:pos_matcher_rule.def)",
        "--output_pos_matcher_h=$(location pos_matcher_impl.inc)",
    ],
    tool = ":gen_pos_matcher_code",
    visibility = [
        "//visibility:private",
    ],
)

mozc_cc_library(
    name = "pos_matcher",
    hdrs = ["pos_matcher.h"],
    textual_hdrs = [":pos_matcher_impl"],
    visibility = [
        "//:__subpackages__",
    ],
    deps = ["@com_google_absl//absl/base:core_headers"],
)

mozc_py_binary(
    name = "gen_pos_rewrite_rule",
    srcs = ["gen_pos_rewrite_rule.py"],
    visibility = ["//:__subpackages__"],
)

mozc_cc_binary(
    name = "gen_system_dictionary_data_main",
    srcs = ["gen_system_dictionary_data_main.cc"],
    visibility = ["//:__subpackages__"],
    deps = [
        ":pos_matcher",
        ":text_dictionary_loader",
        "//base:file_stream",
        "//base:init_mozc_buildtool",
        "//base:logging",
        "//data_manager",
        "//dictionary/system:system_dictionary_builder",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_library(
    name = "suppression_dictionary",
    srcs = ["suppression_dictionary.cc"],
    hdrs = ["suppression_dictionary.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//base:logging",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/hash",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
    ],
)

mozc_cc_test(
    name = "suppression_dictionary_test",
    size = "small",
    srcs = ["suppression_dictionary_test.cc"],
    requires_full_emulation = False,
    deps = [
        ":suppression_dictionary",
        "//base:thread2",
        "//testing:gunit_main",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
    ],
)

mozc_cc_library(
    name = "dictionary_mock",
    testonly = True,
    hdrs = ["dictionary_mock.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        ":dictionary_interface",
        "//testing:gunit",
    ],
)

mozc_py_binary(
    name = "gen_suffix_data",
    srcs = ["gen_suffix_data.py"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//build_tools:serialized_string_array_builder",
    ],
)

mozc_cc_test(
    name = "suffix_dictionary_test",
    size = "small",
    srcs = ["suffix_dictionary_test.cc"],
    requires_full_emulation = False,
    deps = [
        ":dictionary_interface",
        ":dictionary_test_util",
        ":suffix_dictionary",
        "//base:util",
        "//data_manager/testing:mock_data_manager",
        "//request:conversion_request",
        "//testing:gunit_main",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_library(
    name = "dictionary_test_util",
    testonly = True,
    srcs = ["dictionary_test_util.cc"],
    hdrs = ["dictionary_test_util.h"],
    visibility = [
        "//:__subpackages__",
    ],
    deps = [
        ":dictionary_interface",
        ":dictionary_token",
        "//base:util",
        "//testing",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
    ],
)

mozc_cc_library(
    name = "user_pos_interface",
    hdrs = ["user_pos_interface.h"],
    visibility = [
        "//data_manager:__subpackages__",
        "//engine:__subpackages__",
        "//rewriter:__subpackages__",
    ],
    deps = ["@com_google_absl//absl/strings"],
)

mozc_cc_library(
    name = "single_kanji_dictionary",
    srcs = ["single_kanji_dictionary.cc"],
    hdrs = ["single_kanji_dictionary.h"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//base:port",
        "//base:text_normalizer",
        "//base:util",
        "//base/container:serialized_string_array",
        "//data_manager:data_manager_interface",
        "//data_manager:serialized_dictionary",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_test(
    name = "single_kanji_dictionary_test",
    size = "small",
    srcs = ["single_kanji_dictionary_test.cc"],
    requires_full_emulation = False,
    deps = [
        ":single_kanji_dictionary",
        "//data_manager/testing:mock_data_manager",
        "//testing:gunit_main",
        "//testing:mozctest",
    ],
)

mozc_py_binary(
    name = "gen_zip_code_seed",
    srcs = [
        "gen_zip_code_seed.py",
        "zip_code_util.py",
    ],
    visibility = ["//train/zip_code:__subpackages__"],
)

run_binary(
    name = "zip_code_data",
    srcs = mozc_select(
        default = [],
        oss = [
            "@zip_code_ken_all//:KEN_ALL.CSV",
            "@zip_code_jigyosyo//:JIGYOSYO.CSV",
        ],
    ),
    outs = ["zip_code.tsv"],
    args = [
        "--output",
        "$(location zip_code.tsv)",
    ] + mozc_select(
        oss = [
            "--zip_code",
            "$(location @zip_code_ken_all//:KEN_ALL.CSV)",
            "--jigyosyo",
            "$(location @zip_code_jigyosyo//:JIGYOSYO.CSV)",
        ],
    ),
    tool = ":gen_zip_code_seed",
    visibility = [
        "//:__subpackages__",
    ],
)
