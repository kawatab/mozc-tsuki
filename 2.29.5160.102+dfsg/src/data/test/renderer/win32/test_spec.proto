// Copyright 2010-2021, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto2";

package mozc.test.renderer.win32;

message TestSpec {
  enum TailDirection {
    UNSPECIFIED = 0;
    TOP = 1;
    RIGHT = 2;
    BOTTOM = 3;
    LEFT = 4;
  }

  message Input {
    optional double blur_alpha = 1;
    optional uint32 blur_color = 2;
    optional int32 blur_offset_x = 3;
    optional int32 blur_offset_y = 4;
    optional double blur_sigma = 5;
    optional double corner_radius = 6;
    optional uint32 frame_color = 7;
    optional double frame_thickness = 8;
    optional uint32 inside_color = 9;
    optional string label = 10;
    optional uint32 label_color = 11;
    optional string label_font = 12;
    optional int32 label_size = 13;
    optional double rect_height = 14;
    optional double rect_width = 15;
    optional TailDirection tail_direction = 16;
    optional double tail_height = 17;
    optional double tail_width = 18;
  }

  message Output {
    optional int32 tail_offset_x = 1;
    optional int32 tail_offset_y = 2;
  }

  optional Input input = 1;
  optional Output output = 2;
}