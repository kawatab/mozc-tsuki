# Copyright 2010-2021, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

load("//converter:evaluation.bzl", "evaluation")

package(default_visibility = [
    "//:__subpackages__",
])

exports_files([
    "collocation.txt",
    "collocation_suppression.txt",
    "connection_single_column.txt",
    "dictionary00.txt",
    "dictionary01.txt",
    "dictionary02.txt",
    "dictionary03.txt",
    "dictionary04.txt",
    "dictionary05.txt",
    "dictionary06.txt",
    "dictionary07.txt",
    "dictionary08.txt",
    "dictionary09.txt",
    "id.def",
    "reading_correction.tsv",
    "regression_test_result.tsv",
    "suffix.txt",
    "suggestion_filter.txt",
])

filegroup(
    name = "base_dictionary_data",
    srcs = [
        ":dictionary00.txt",
        ":dictionary01.txt",
        ":dictionary02.txt",
        ":dictionary03.txt",
        ":dictionary04.txt",
        ":dictionary05.txt",
        ":dictionary06.txt",
        ":dictionary07.txt",
        ":dictionary08.txt",
        ":dictionary09.txt",
        "//dictionary:zip_code_data",
    ],
)

filegroup(
    name = "dictionary_data",
    srcs = [
        ":aux_dictionary",
        ":filtered_dictionary",
    ],
)

filegroup(
    name = "dictionary",
    srcs = [
        ":connection_single_column.txt",
        ":dictionary00.txt",
        ":dictionary01.txt",
        ":dictionary02.txt",
        ":dictionary03.txt",
        ":dictionary04.txt",
        ":dictionary05.txt",
        ":dictionary06.txt",
        ":dictionary07.txt",
        ":dictionary08.txt",
        ":dictionary09.txt",
        ":suffix.txt",
    ],
)

genrule(
    name = "aux_dictionary",
    srcs = [
        ":base_dictionary_data",
        "//data/oss:aux_dictionary.tsv",
    ],
    outs = ["aux_dictionary.txt"],
    cmd = ("$(location //dictionary:gen_aux_dictionary) " +
           "--strict --output $@ " +
           "--aux_tsv $(location //data/oss:aux_dictionary.tsv) " +
           "--dictionary_txts $(locations :base_dictionary_data)"),
    tools = ["//dictionary:gen_aux_dictionary"],
)

genrule(
    name = "filtered_dictionary",
    srcs = [
        ":base_dictionary_data",
        "//data/oss:dictionary_filter.tsv",
    ],
    outs = ["dictionary.txt"],
    cmd = ("$(location //dictionary:gen_filtered_dictionary) --output $@ " +
           "--filter_tsv $(location //data/oss:dictionary_filter.tsv) " +
           "--dictionary_txts $(locations :base_dictionary_data)"),
    tools = ["//dictionary:gen_filtered_dictionary"],
)

evaluation(
    name = "evaluation",
    outs = ["evaluation_updated.tsv"],
    base_file = "evaluation.tsv",
    data_file = "//data_manager/oss:mozc_dataset_for_oss",
    data_type = "oss",
    engine_type = "desktop",
    test_files = [
        "//data/test/quality_regression_test:oss.tsv",
        "//data/test/quality_regression_test:regression.tsv",
    ],
)
