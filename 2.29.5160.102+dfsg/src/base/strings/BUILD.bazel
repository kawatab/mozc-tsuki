# Copyright 2010-2021, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# String manipulation and character classification libraries.

load(
    "//:build_defs.bzl",
    "mozc_cc_library",
    "mozc_cc_test",
    "mozc_select",
)

package(
    default_visibility = [
        "//:__subpackages__",
    ],
)

mozc_cc_library(
    name = "assign",
    hdrs = ["assign.h"],
    deps = ["@com_google_absl//absl/strings"],
)

mozc_cc_test(
    name = "assign_test",
    srcs = ["assign_test.cc"],
    deps = [
        ":assign",
        "//testing:gunit_main",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_library(
    name = "pfchar",
    hdrs = ["pfchar.h"],
    deps = [
        "@com_google_absl//absl/strings",
    ] + mozc_select(
        windows = ["//base/win32:wide_char"],
    ),
)

mozc_cc_test(
    name = "pfchar_test",
    size = "small",
    srcs = ["pfchar_test.cc"],
    deps = [
        ":pfchar",
        "//testing:gunit_main",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_library(
    name = "zstring_view",
    hdrs = ["zstring_view.h"],
    deps = [
        ":pfchar",
        "//base:logging",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_test(
    name = "zstring_view_test",
    size = "small",
    srcs = ["zstring_view_test.cc"],
    deps = [
        ":pfchar",
        ":zstring_view",
        "//testing:gunit_main",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/hash:hash_testing",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
    ],
)

mozc_cc_library(
    name = "japanese",
    srcs = [
        "japanese.cc",
    ],
    hdrs = ["japanese.h"],
    visibility = [
        "//:__subpackages__",
    ],
    deps = [
        "//base/strings/internal:double_array",
        "//base/strings/internal:japanese_rules",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_test(
    name = "japanese_test",
    size = "small",
    srcs = [
        "japanese_test.cc",
    ],
    requires_full_emulation = False,
    deps = [
        ":japanese",
        "//testing:gunit_main",
    ],
)

mozc_cc_library(
    name = "unicode",
    srcs = ["unicode.cc"],
    hdrs = ["unicode.h"],
    deps = [
        "//base/strings/internal:utf8_internal",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/strings",
    ],
)

mozc_cc_test(
    name = "unicode_test",
    size = "small",
    srcs = ["unicode_test.cc"],
    deps = [
        ":unicode",
        "//testing:gunit_main",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/strings",
    ],
)
