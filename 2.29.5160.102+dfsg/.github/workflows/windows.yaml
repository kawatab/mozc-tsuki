name: CI for Windows
# https://github.com/google/mozc/blob/master/docs/build_mozc_in_windows.md

# Run on push.
on: push

# Prevent previous workflows from running.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2022-Readme.md
    runs-on: windows-2022
    timeout-minutes: 90

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up pip
        shell: cmd
        working-directory: .\src
        run: |
          python -m pip install six requests

      # See https://github.com/google/mozc/commit/c34fd2962edd53a245d961be6526d8ea62d368c9
      # about why we need this step.
      - name: Install Ninja 1.11.0
        shell: cmd
        working-directory: .\src
        run: |
          choco install ninja --version 1.11.0 -y --no-progress

      - name: Try to restore update_deps cache
        uses: actions/cache@v3
        with:
          path: src/third_party_cache
          key: update_deps-${{ runner.os }}-${{ hashFiles('src/build_tools/update_deps.py') }}

      - name: Install Dependencies
        shell: cmd
        working-directory: .\src
        # This command uses src/third_party_cache as the download cache.
        run: |
          python build_tools/update_deps.py

      - name: Biuld Qt
        shell: cmd
        working-directory: .\src
        run: |
          python build_tools/build_qt.py --release --confirm_license

      - name: gyp
        shell: cmd
        working-directory: .\src
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsamd64_x86.bat"
          python build_mozc.py gyp

      - name: build package
        shell: cmd
        working-directory: .\src
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsamd64_x86.bat"
          python build_mozc.py build -c Release package

      - name: upload Mozc64.msi
        uses: actions/upload-artifact@v3
        with:
          name: Mozc64.msi
          path: src/out_win/Release/Mozc64.msi
          if-no-files-found: warn

  test:
    # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2022-Readme.md
    runs-on: windows-2022
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up pip
        shell: cmd
        working-directory: .\src
        run: |
          python -m pip install six requests

      # See comment above about why we need this step.
      - name: Install Ninja 1.11.0
        shell: cmd
        working-directory: .\src
        run: |
          choco install ninja --version 1.11.0 -y --no-progress

      - name: Try to restore update_deps cache
        uses: actions/cache@v3
        with:
          path: src/third_party_cache
          key: update_deps-${{ runner.os }}-${{ hashFiles('src/build_tools/update_deps.py') }}

      - name: Install Dependencies
        shell: cmd
        working-directory: .\src
        # This command uses src/third_party_cache as the download cache.
        run: |
          python build_tools/update_deps.py

      - name: gyp
        shell: cmd
        working-directory: .\src
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsamd64_x86.bat"
          python build_mozc.py gyp --noqt --msvs_version=2022

      - name: runtests
        shell: cmd
        working-directory: .\src
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsamd64_x86.bat"
          python build_mozc.py runtests -c Debug

  # actions/cache works without this job, but having this would increase the likelihood of cache hit
  # in other jobs. Another approach would be to use "needs:".
  # https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow
  cache_deps:
    # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2022-Readme.md
    runs-on: windows-2022
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up pip
        shell: cmd
        working-directory: .\src
        run: |
          python -m pip install requests

      - name: Try to restore update_deps cache
        uses: actions/cache@v3
        with:
          path: src/third_party_cache
          key: update_deps-${{ runner.os }}-${{ hashFiles('src/build_tools/update_deps.py') }}

      - name: Install Dependencies
        shell: cmd
        working-directory: .\src
        # This command uses src/third_party_cache as the download cache.
        run: |
          python build_tools/update_deps.py --cache_only
