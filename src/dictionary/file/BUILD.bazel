# Copyright 2010-2021, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Visibility:  please choose a more appropriate default for the package,
# and update any rules that should be different.

load(
    "//:build_defs.bzl",
    "cc_library_mozc",
    "cc_test_mozc",
)

package(default_visibility = [
    "//:__subpackages__",
])

cc_library_mozc(
    name = "dictionary_file",
    srcs = ["dictionary_file.cc"],
    hdrs = ["dictionary_file.h"],
    deps = [
        ":codec_interface",
        ":section",
        "//base",
        "//base:logging",
        "//base:mmap",
        "//base:port",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library_mozc(
    name = "dictionary_file_builder",
    srcs = ["dictionary_file_builder.cc"],
    hdrs = ["dictionary_file_builder.h"],
    deps = [
        ":codec",
        ":codec_interface",
        ":section",
        "//base",
        "//base:file_stream",
        "//base:logging",
        "//base:port",
    ],
)

cc_test_mozc(
    name = "dictionary_file_test",
    size = "small",
    srcs = ["dictionary_file_test.cc"],
    requires_full_emulation = False,
    deps = [
        ":codec_factory",
        ":dictionary_file",
        ":dictionary_file_builder",
        "//base",
        "//base:file_util",
        "//base:logging",
        "//testing:gunit_main",
        "@com_google_absl//absl/flags:flag",
    ],
)

cc_library_mozc(
    name = "codec_interface",
    hdrs = ["codec_interface.h"],
    deps = [
        ":section",
        "//base:port",
        "@com_google_absl//absl/status",
    ],
)

cc_library_mozc(
    name = "codec_util",
    srcs = ["codec_util.cc"],
    hdrs = ["codec_util.h"],
    deps = [
        "//base",
        "//base:logging",
        "//base:port",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library_mozc(
    name = "codec",
    srcs = ["codec.cc"],
    hdrs = ["codec.h"],
    deps = [
        ":codec_interface",
        ":codec_util",
        ":section",
        "//base",
        "//base:hash",
        "//base:logging",
        "//base:port",
        "//base:util",
        "@com_google_absl//absl/status",
    ],
)

cc_library_mozc(
    name = "codec_factory",
    srcs = ["codec_factory.cc"],
    hdrs = [
        "codec_factory.h",
    ],
    deps = [
        ":codec",
        ":codec_interface",
        ":codec_util",
        ":section",
        "//base",
        "//base:port",
        "//base:singleton",
    ],
)

cc_library_mozc(
    name = "section",
    hdrs = ["section.h"],
    visibility = ["//visibility:private"],
)

cc_test_mozc(
    name = "codec_test",
    size = "small",
    srcs = ["codec_test.cc"],
    requires_full_emulation = False,
    deps = [
        ":codec",
        ":codec_factory",
        ":codec_interface",
        ":section",
        "//base",
        "//base:file_stream",
        "//base:file_util",
        "//base:logging",
        "//base:util",
        "//testing:gunit_main",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/status",
    ],
)
