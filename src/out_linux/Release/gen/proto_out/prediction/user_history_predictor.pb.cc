// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prediction/user_history_predictor.proto

#include "prediction/user_history_predictor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserHistory_NextEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserHistory_Entry;
}  // namespace protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto
namespace mozc {
namespace user_history_predictor {
class UserHistory_NextEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserHistory_NextEntry>
      _instance;
} _UserHistory_NextEntry_default_instance_;
class UserHistory_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserHistory_Entry>
      _instance;
} _UserHistory_Entry_default_instance_;
class UserHistoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserHistory>
      _instance;
} _UserHistory_default_instance_;
}  // namespace user_history_predictor
}  // namespace mozc
namespace protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto {
static void InitDefaultsUserHistory_NextEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::user_history_predictor::_UserHistory_NextEntry_default_instance_;
    new (ptr) ::mozc::user_history_predictor::UserHistory_NextEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::user_history_predictor::UserHistory_NextEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserHistory_NextEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserHistory_NextEntry}, {}};

static void InitDefaultsUserHistory_Entry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::user_history_predictor::_UserHistory_Entry_default_instance_;
    new (ptr) ::mozc::user_history_predictor::UserHistory_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::user_history_predictor::UserHistory_Entry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserHistory_Entry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserHistory_Entry}, {
      &protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::scc_info_UserHistory_NextEntry.base,}};

static void InitDefaultsUserHistory() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::user_history_predictor::_UserHistory_default_instance_;
    new (ptr) ::mozc::user_history_predictor::UserHistory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::user_history_predictor::UserHistory::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserHistory =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserHistory}, {
      &protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::scc_info_UserHistory_Entry.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UserHistory_NextEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserHistory_Entry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserHistory.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_NextEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_NextEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_NextEntry, entry_fp_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_Entry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_Entry, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_Entry, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_Entry, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_Entry, suggestion_freq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_Entry, conversion_freq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_Entry, last_access_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_Entry, next_entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_Entry, bigram_boost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_Entry, spelling_correction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_Entry, removed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory_Entry, entry_type_),
  0,
  1,
  2,
  4,
  5,
  3,
  ~0u,
  7,
  8,
  9,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::user_history_predictor::UserHistory, entries_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::mozc::user_history_predictor::UserHistory_NextEntry)},
  { 7, 23, sizeof(::mozc::user_history_predictor::UserHistory_Entry)},
  { 34, 40, sizeof(::mozc::user_history_predictor::UserHistory)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozc::user_history_predictor::_UserHistory_NextEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozc::user_history_predictor::_UserHistory_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozc::user_history_predictor::_UserHistory_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "prediction/user_history_predictor.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\'prediction/user_history_predictor.prot"
      "o\022\033mozc.user_history_predictor\"\323\004\n\013UserH"
      "istory\022\?\n\007entries\030\006 \003(\0132..mozc.user_hist"
      "ory_predictor.UserHistory.Entry\032 \n\tNextE"
      "ntry\022\023\n\010entry_fp\030\001 \001(\r:\0010\032\340\003\n\005Entry\022\r\n\003k"
      "ey\030\001 \001(\t:\000\022\017\n\005value\030\002 \001(\t:\000\022\025\n\013descripti"
      "on\030\006 \001(\t:\000\022\032\n\017suggestion_freq\030\003 \001(\r:\0010\022\032"
      "\n\017conversion_freq\030\005 \001(\r:\0010\022\033\n\020last_acces"
      "s_time\030\004 \001(\004:\0010\022H\n\014next_entries\030\007 \003(\01322."
      "mozc.user_history_predictor.UserHistory."
      "NextEntry\022\033\n\014bigram_boost\030\024 \001(\010:\005false\022\""
      "\n\023spelling_correction\030\025 \001(\010:\005false\022\026\n\007re"
      "moved\030\010 \001(\010:\005false\022[\n\nentry_type\030\t \001(\01628"
      ".mozc.user_history_predictor.UserHistory"
      ".Entry.EntryType:\rDEFAULT_ENTRY\"K\n\tEntry"
      "Type\022\021\n\rDEFAULT_ENTRY\020\000\022\023\n\017CLEAN_ALL_EVE"
      "NT\020\001\022\026\n\022CLEAN_UNUSED_EVENT\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 668);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "prediction/user_history_predictor.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto
namespace mozc {
namespace user_history_predictor {
const ::google::protobuf::EnumDescriptor* UserHistory_Entry_EntryType_descriptor() {
  protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::file_level_enum_descriptors[0];
}
bool UserHistory_Entry_EntryType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserHistory_Entry_EntryType UserHistory_Entry::DEFAULT_ENTRY;
const UserHistory_Entry_EntryType UserHistory_Entry::CLEAN_ALL_EVENT;
const UserHistory_Entry_EntryType UserHistory_Entry::CLEAN_UNUSED_EVENT;
const UserHistory_Entry_EntryType UserHistory_Entry::EntryType_MIN;
const UserHistory_Entry_EntryType UserHistory_Entry::EntryType_MAX;
const int UserHistory_Entry::EntryType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void UserHistory_NextEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserHistory_NextEntry::kEntryFpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserHistory_NextEntry::UserHistory_NextEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::scc_info_UserHistory_NextEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.user_history_predictor.UserHistory.NextEntry)
}
UserHistory_NextEntry::UserHistory_NextEntry(const UserHistory_NextEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entry_fp_ = from.entry_fp_;
  // @@protoc_insertion_point(copy_constructor:mozc.user_history_predictor.UserHistory.NextEntry)
}

void UserHistory_NextEntry::SharedCtor() {
  entry_fp_ = 0u;
}

UserHistory_NextEntry::~UserHistory_NextEntry() {
  // @@protoc_insertion_point(destructor:mozc.user_history_predictor.UserHistory.NextEntry)
  SharedDtor();
}

void UserHistory_NextEntry::SharedDtor() {
}

void UserHistory_NextEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserHistory_NextEntry::descriptor() {
  ::protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserHistory_NextEntry& UserHistory_NextEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::scc_info_UserHistory_NextEntry.base);
  return *internal_default_instance();
}


void UserHistory_NextEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.user_history_predictor.UserHistory.NextEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entry_fp_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserHistory_NextEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.user_history_predictor.UserHistory.NextEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 entry_fp = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_entry_fp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entry_fp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.user_history_predictor.UserHistory.NextEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.user_history_predictor.UserHistory.NextEntry)
  return false;
#undef DO_
}

void UserHistory_NextEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.user_history_predictor.UserHistory.NextEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 entry_fp = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entry_fp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.user_history_predictor.UserHistory.NextEntry)
}

::google::protobuf::uint8* UserHistory_NextEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.user_history_predictor.UserHistory.NextEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 entry_fp = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entry_fp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.user_history_predictor.UserHistory.NextEntry)
  return target;
}

size_t UserHistory_NextEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.user_history_predictor.UserHistory.NextEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 entry_fp = 1 [default = 0];
  if (has_entry_fp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entry_fp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserHistory_NextEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.user_history_predictor.UserHistory.NextEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const UserHistory_NextEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserHistory_NextEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.user_history_predictor.UserHistory.NextEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.user_history_predictor.UserHistory.NextEntry)
    MergeFrom(*source);
  }
}

void UserHistory_NextEntry::MergeFrom(const UserHistory_NextEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.user_history_predictor.UserHistory.NextEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entry_fp()) {
    set_entry_fp(from.entry_fp());
  }
}

void UserHistory_NextEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.user_history_predictor.UserHistory.NextEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserHistory_NextEntry::CopyFrom(const UserHistory_NextEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.user_history_predictor.UserHistory.NextEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserHistory_NextEntry::IsInitialized() const {
  return true;
}

void UserHistory_NextEntry::Swap(UserHistory_NextEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserHistory_NextEntry::InternalSwap(UserHistory_NextEntry* other) {
  using std::swap;
  swap(entry_fp_, other->entry_fp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserHistory_NextEntry::GetMetadata() const {
  protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserHistory_Entry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserHistory_Entry::kKeyFieldNumber;
const int UserHistory_Entry::kValueFieldNumber;
const int UserHistory_Entry::kDescriptionFieldNumber;
const int UserHistory_Entry::kSuggestionFreqFieldNumber;
const int UserHistory_Entry::kConversionFreqFieldNumber;
const int UserHistory_Entry::kLastAccessTimeFieldNumber;
const int UserHistory_Entry::kNextEntriesFieldNumber;
const int UserHistory_Entry::kBigramBoostFieldNumber;
const int UserHistory_Entry::kSpellingCorrectionFieldNumber;
const int UserHistory_Entry::kRemovedFieldNumber;
const int UserHistory_Entry::kEntryTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserHistory_Entry::UserHistory_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::scc_info_UserHistory_Entry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.user_history_predictor.UserHistory.Entry)
}
UserHistory_Entry::UserHistory_Entry(const UserHistory_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      next_entries_(from.next_entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&last_access_time_, &from.last_access_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&removed_) -
    reinterpret_cast<char*>(&last_access_time_)) + sizeof(removed_));
  // @@protoc_insertion_point(copy_constructor:mozc.user_history_predictor.UserHistory.Entry)
}

void UserHistory_Entry::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&last_access_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&removed_) -
      reinterpret_cast<char*>(&last_access_time_)) + sizeof(removed_));
}

UserHistory_Entry::~UserHistory_Entry() {
  // @@protoc_insertion_point(destructor:mozc.user_history_predictor.UserHistory.Entry)
  SharedDtor();
}

void UserHistory_Entry::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserHistory_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserHistory_Entry::descriptor() {
  ::protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserHistory_Entry& UserHistory_Entry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::scc_info_UserHistory_Entry.base);
  return *internal_default_instance();
}


void UserHistory_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.user_history_predictor.UserHistory.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  next_entries_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      description_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&last_access_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bigram_boost_) -
        reinterpret_cast<char*>(&last_access_time_)) + sizeof(bigram_boost_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&spelling_correction_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&removed_) -
        reinterpret_cast<char*>(&spelling_correction_)) + sizeof(removed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserHistory_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.user_history_predictor.UserHistory.Entry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1 [default = ""];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mozc.user_history_predictor.UserHistory.Entry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2 [default = ""];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mozc.user_history_predictor.UserHistory.Entry.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 suggestion_freq = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_suggestion_freq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &suggestion_freq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 last_access_time = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_last_access_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_access_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 conversion_freq = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_conversion_freq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &conversion_freq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 6 [default = ""];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mozc.user_history_predictor.UserHistory.Entry.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .mozc.user_history_predictor.UserHistory.NextEntry next_entries = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_next_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool removed = 8 [default = false];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_removed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &removed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.user_history_predictor.UserHistory.Entry.EntryType entry_type = 9 [default = DEFAULT_ENTRY];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mozc::user_history_predictor::UserHistory_Entry_EntryType_IsValid(value)) {
            set_entry_type(static_cast< ::mozc::user_history_predictor::UserHistory_Entry_EntryType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                9, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bigram_boost = 20 [default = false];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_bigram_boost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bigram_boost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool spelling_correction = 21 [default = false];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_spelling_correction();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &spelling_correction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.user_history_predictor.UserHistory.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.user_history_predictor.UserHistory.Entry)
  return false;
#undef DO_
}

void UserHistory_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.user_history_predictor.UserHistory.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.user_history_predictor.UserHistory.Entry.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.user_history_predictor.UserHistory.Entry.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // optional uint32 suggestion_freq = 3 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->suggestion_freq(), output);
  }

  // optional uint64 last_access_time = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->last_access_time(), output);
  }

  // optional uint32 conversion_freq = 5 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->conversion_freq(), output);
  }

  // optional string description = 6 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.user_history_predictor.UserHistory.Entry.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  // repeated .mozc.user_history_predictor.UserHistory.NextEntry next_entries = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->next_entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->next_entries(static_cast<int>(i)),
      output);
  }

  // optional bool removed = 8 [default = false];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->removed(), output);
  }

  // optional .mozc.user_history_predictor.UserHistory.Entry.EntryType entry_type = 9 [default = DEFAULT_ENTRY];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->entry_type(), output);
  }

  // optional bool bigram_boost = 20 [default = false];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->bigram_boost(), output);
  }

  // optional bool spelling_correction = 21 [default = false];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->spelling_correction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.user_history_predictor.UserHistory.Entry)
}

::google::protobuf::uint8* UserHistory_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.user_history_predictor.UserHistory.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.user_history_predictor.UserHistory.Entry.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.user_history_predictor.UserHistory.Entry.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // optional uint32 suggestion_freq = 3 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->suggestion_freq(), target);
  }

  // optional uint64 last_access_time = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->last_access_time(), target);
  }

  // optional uint32 conversion_freq = 5 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->conversion_freq(), target);
  }

  // optional string description = 6 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.user_history_predictor.UserHistory.Entry.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // repeated .mozc.user_history_predictor.UserHistory.NextEntry next_entries = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->next_entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->next_entries(static_cast<int>(i)), deterministic, target);
  }

  // optional bool removed = 8 [default = false];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->removed(), target);
  }

  // optional .mozc.user_history_predictor.UserHistory.Entry.EntryType entry_type = 9 [default = DEFAULT_ENTRY];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->entry_type(), target);
  }

  // optional bool bigram_boost = 20 [default = false];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->bigram_boost(), target);
  }

  // optional bool spelling_correction = 21 [default = false];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->spelling_correction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.user_history_predictor.UserHistory.Entry)
  return target;
}

size_t UserHistory_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.user_history_predictor.UserHistory.Entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .mozc.user_history_predictor.UserHistory.NextEntry next_entries = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->next_entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->next_entries(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string key = 1 [default = ""];
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2 [default = ""];
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // optional string description = 6 [default = ""];
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional uint64 last_access_time = 4 [default = 0];
    if (has_last_access_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->last_access_time());
    }

    // optional uint32 suggestion_freq = 3 [default = 0];
    if (has_suggestion_freq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->suggestion_freq());
    }

    // optional uint32 conversion_freq = 5 [default = 0];
    if (has_conversion_freq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->conversion_freq());
    }

    // optional .mozc.user_history_predictor.UserHistory.Entry.EntryType entry_type = 9 [default = DEFAULT_ENTRY];
    if (has_entry_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->entry_type());
    }

    // optional bool bigram_boost = 20 [default = false];
    if (has_bigram_boost()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional bool spelling_correction = 21 [default = false];
    if (has_spelling_correction()) {
      total_size += 2 + 1;
    }

    // optional bool removed = 8 [default = false];
    if (has_removed()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserHistory_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.user_history_predictor.UserHistory.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const UserHistory_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserHistory_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.user_history_predictor.UserHistory.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.user_history_predictor.UserHistory.Entry)
    MergeFrom(*source);
  }
}

void UserHistory_Entry::MergeFrom(const UserHistory_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.user_history_predictor.UserHistory.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  next_entries_.MergeFrom(from.next_entries_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000008u) {
      last_access_time_ = from.last_access_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      suggestion_freq_ = from.suggestion_freq_;
    }
    if (cached_has_bits & 0x00000020u) {
      conversion_freq_ = from.conversion_freq_;
    }
    if (cached_has_bits & 0x00000040u) {
      entry_type_ = from.entry_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      bigram_boost_ = from.bigram_boost_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      spelling_correction_ = from.spelling_correction_;
    }
    if (cached_has_bits & 0x00000200u) {
      removed_ = from.removed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserHistory_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.user_history_predictor.UserHistory.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserHistory_Entry::CopyFrom(const UserHistory_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.user_history_predictor.UserHistory.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserHistory_Entry::IsInitialized() const {
  return true;
}

void UserHistory_Entry::Swap(UserHistory_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserHistory_Entry::InternalSwap(UserHistory_Entry* other) {
  using std::swap;
  CastToBase(&next_entries_)->InternalSwap(CastToBase(&other->next_entries_));
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(last_access_time_, other->last_access_time_);
  swap(suggestion_freq_, other->suggestion_freq_);
  swap(conversion_freq_, other->conversion_freq_);
  swap(entry_type_, other->entry_type_);
  swap(bigram_boost_, other->bigram_boost_);
  swap(spelling_correction_, other->spelling_correction_);
  swap(removed_, other->removed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserHistory_Entry::GetMetadata() const {
  protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserHistory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserHistory::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserHistory::UserHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::scc_info_UserHistory.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.user_history_predictor.UserHistory)
}
UserHistory::UserHistory(const UserHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mozc.user_history_predictor.UserHistory)
}

void UserHistory::SharedCtor() {
}

UserHistory::~UserHistory() {
  // @@protoc_insertion_point(destructor:mozc.user_history_predictor.UserHistory)
  SharedDtor();
}

void UserHistory::SharedDtor() {
}

void UserHistory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserHistory::descriptor() {
  ::protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserHistory& UserHistory::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::scc_info_UserHistory.base);
  return *internal_default_instance();
}


void UserHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.user_history_predictor.UserHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserHistory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.user_history_predictor.UserHistory)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mozc.user_history_predictor.UserHistory.Entry entries = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.user_history_predictor.UserHistory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.user_history_predictor.UserHistory)
  return false;
#undef DO_
}

void UserHistory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.user_history_predictor.UserHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mozc.user_history_predictor.UserHistory.Entry entries = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->entries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.user_history_predictor.UserHistory)
}

::google::protobuf::uint8* UserHistory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.user_history_predictor.UserHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mozc.user_history_predictor.UserHistory.Entry entries = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.user_history_predictor.UserHistory)
  return target;
}

size_t UserHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.user_history_predictor.UserHistory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .mozc.user_history_predictor.UserHistory.Entry entries = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserHistory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.user_history_predictor.UserHistory)
  GOOGLE_DCHECK_NE(&from, this);
  const UserHistory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserHistory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.user_history_predictor.UserHistory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.user_history_predictor.UserHistory)
    MergeFrom(*source);
  }
}

void UserHistory::MergeFrom(const UserHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.user_history_predictor.UserHistory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void UserHistory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.user_history_predictor.UserHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserHistory::CopyFrom(const UserHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.user_history_predictor.UserHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserHistory::IsInitialized() const {
  return true;
}

void UserHistory::Swap(UserHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserHistory::InternalSwap(UserHistory* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserHistory::GetMetadata() const {
  protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace user_history_predictor
}  // namespace mozc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozc::user_history_predictor::UserHistory_NextEntry* Arena::CreateMaybeMessage< ::mozc::user_history_predictor::UserHistory_NextEntry >(Arena* arena) {
  return Arena::CreateInternal< ::mozc::user_history_predictor::UserHistory_NextEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozc::user_history_predictor::UserHistory_Entry* Arena::CreateMaybeMessage< ::mozc::user_history_predictor::UserHistory_Entry >(Arena* arena) {
  return Arena::CreateInternal< ::mozc::user_history_predictor::UserHistory_Entry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozc::user_history_predictor::UserHistory* Arena::CreateMaybeMessage< ::mozc::user_history_predictor::UserHistory >(Arena* arena) {
  return Arena::CreateInternal< ::mozc::user_history_predictor::UserHistory >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
