// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prediction/user_history_predictor.proto

#ifndef PROTOBUF_INCLUDED_prediction_2fuser_5fhistory_5fpredictor_2eproto
#define PROTOBUF_INCLUDED_prediction_2fuser_5fhistory_5fpredictor_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto 

namespace protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto
namespace mozc {
namespace user_history_predictor {
class UserHistory;
class UserHistoryDefaultTypeInternal;
extern UserHistoryDefaultTypeInternal _UserHistory_default_instance_;
class UserHistory_Entry;
class UserHistory_EntryDefaultTypeInternal;
extern UserHistory_EntryDefaultTypeInternal _UserHistory_Entry_default_instance_;
class UserHistory_NextEntry;
class UserHistory_NextEntryDefaultTypeInternal;
extern UserHistory_NextEntryDefaultTypeInternal _UserHistory_NextEntry_default_instance_;
}  // namespace user_history_predictor
}  // namespace mozc
namespace google {
namespace protobuf {
template<> ::mozc::user_history_predictor::UserHistory* Arena::CreateMaybeMessage<::mozc::user_history_predictor::UserHistory>(Arena*);
template<> ::mozc::user_history_predictor::UserHistory_Entry* Arena::CreateMaybeMessage<::mozc::user_history_predictor::UserHistory_Entry>(Arena*);
template<> ::mozc::user_history_predictor::UserHistory_NextEntry* Arena::CreateMaybeMessage<::mozc::user_history_predictor::UserHistory_NextEntry>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace mozc {
namespace user_history_predictor {

enum UserHistory_Entry_EntryType {
  UserHistory_Entry_EntryType_DEFAULT_ENTRY = 0,
  UserHistory_Entry_EntryType_CLEAN_ALL_EVENT = 1,
  UserHistory_Entry_EntryType_CLEAN_UNUSED_EVENT = 2
};
bool UserHistory_Entry_EntryType_IsValid(int value);
const UserHistory_Entry_EntryType UserHistory_Entry_EntryType_EntryType_MIN = UserHistory_Entry_EntryType_DEFAULT_ENTRY;
const UserHistory_Entry_EntryType UserHistory_Entry_EntryType_EntryType_MAX = UserHistory_Entry_EntryType_CLEAN_UNUSED_EVENT;
const int UserHistory_Entry_EntryType_EntryType_ARRAYSIZE = UserHistory_Entry_EntryType_EntryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserHistory_Entry_EntryType_descriptor();
inline const ::std::string& UserHistory_Entry_EntryType_Name(UserHistory_Entry_EntryType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserHistory_Entry_EntryType_descriptor(), value);
}
inline bool UserHistory_Entry_EntryType_Parse(
    const ::std::string& name, UserHistory_Entry_EntryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserHistory_Entry_EntryType>(
    UserHistory_Entry_EntryType_descriptor(), name, value);
}
// ===================================================================

class UserHistory_NextEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.user_history_predictor.UserHistory.NextEntry) */ {
 public:
  UserHistory_NextEntry();
  virtual ~UserHistory_NextEntry();

  UserHistory_NextEntry(const UserHistory_NextEntry& from);

  inline UserHistory_NextEntry& operator=(const UserHistory_NextEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserHistory_NextEntry(UserHistory_NextEntry&& from) noexcept
    : UserHistory_NextEntry() {
    *this = ::std::move(from);
  }

  inline UserHistory_NextEntry& operator=(UserHistory_NextEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserHistory_NextEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserHistory_NextEntry* internal_default_instance() {
    return reinterpret_cast<const UserHistory_NextEntry*>(
               &_UserHistory_NextEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(UserHistory_NextEntry* other);
  friend void swap(UserHistory_NextEntry& a, UserHistory_NextEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserHistory_NextEntry* New() const final {
    return CreateMaybeMessage<UserHistory_NextEntry>(NULL);
  }

  UserHistory_NextEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserHistory_NextEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserHistory_NextEntry& from);
  void MergeFrom(const UserHistory_NextEntry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserHistory_NextEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 entry_fp = 1 [default = 0];
  bool has_entry_fp() const;
  void clear_entry_fp();
  static const int kEntryFpFieldNumber = 1;
  ::google::protobuf::uint32 entry_fp() const;
  void set_entry_fp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mozc.user_history_predictor.UserHistory.NextEntry)
 private:
  void set_has_entry_fp();
  void clear_has_entry_fp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 entry_fp_;
  friend struct ::protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserHistory_Entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.user_history_predictor.UserHistory.Entry) */ {
 public:
  UserHistory_Entry();
  virtual ~UserHistory_Entry();

  UserHistory_Entry(const UserHistory_Entry& from);

  inline UserHistory_Entry& operator=(const UserHistory_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserHistory_Entry(UserHistory_Entry&& from) noexcept
    : UserHistory_Entry() {
    *this = ::std::move(from);
  }

  inline UserHistory_Entry& operator=(UserHistory_Entry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserHistory_Entry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserHistory_Entry* internal_default_instance() {
    return reinterpret_cast<const UserHistory_Entry*>(
               &_UserHistory_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(UserHistory_Entry* other);
  friend void swap(UserHistory_Entry& a, UserHistory_Entry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserHistory_Entry* New() const final {
    return CreateMaybeMessage<UserHistory_Entry>(NULL);
  }

  UserHistory_Entry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserHistory_Entry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserHistory_Entry& from);
  void MergeFrom(const UserHistory_Entry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserHistory_Entry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UserHistory_Entry_EntryType EntryType;
  static const EntryType DEFAULT_ENTRY =
    UserHistory_Entry_EntryType_DEFAULT_ENTRY;
  static const EntryType CLEAN_ALL_EVENT =
    UserHistory_Entry_EntryType_CLEAN_ALL_EVENT;
  static const EntryType CLEAN_UNUSED_EVENT =
    UserHistory_Entry_EntryType_CLEAN_UNUSED_EVENT;
  static inline bool EntryType_IsValid(int value) {
    return UserHistory_Entry_EntryType_IsValid(value);
  }
  static const EntryType EntryType_MIN =
    UserHistory_Entry_EntryType_EntryType_MIN;
  static const EntryType EntryType_MAX =
    UserHistory_Entry_EntryType_EntryType_MAX;
  static const int EntryType_ARRAYSIZE =
    UserHistory_Entry_EntryType_EntryType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EntryType_descriptor() {
    return UserHistory_Entry_EntryType_descriptor();
  }
  static inline const ::std::string& EntryType_Name(EntryType value) {
    return UserHistory_Entry_EntryType_Name(value);
  }
  static inline bool EntryType_Parse(const ::std::string& name,
      EntryType* value) {
    return UserHistory_Entry_EntryType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .mozc.user_history_predictor.UserHistory.NextEntry next_entries = 7;
  int next_entries_size() const;
  void clear_next_entries();
  static const int kNextEntriesFieldNumber = 7;
  ::mozc::user_history_predictor::UserHistory_NextEntry* mutable_next_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::mozc::user_history_predictor::UserHistory_NextEntry >*
      mutable_next_entries();
  const ::mozc::user_history_predictor::UserHistory_NextEntry& next_entries(int index) const;
  ::mozc::user_history_predictor::UserHistory_NextEntry* add_next_entries();
  const ::google::protobuf::RepeatedPtrField< ::mozc::user_history_predictor::UserHistory_NextEntry >&
      next_entries() const;

  // optional string key = 1 [default = ""];
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2 [default = ""];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional string description = 6 [default = ""];
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 6;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional uint64 last_access_time = 4 [default = 0];
  bool has_last_access_time() const;
  void clear_last_access_time();
  static const int kLastAccessTimeFieldNumber = 4;
  ::google::protobuf::uint64 last_access_time() const;
  void set_last_access_time(::google::protobuf::uint64 value);

  // optional uint32 suggestion_freq = 3 [default = 0];
  bool has_suggestion_freq() const;
  void clear_suggestion_freq();
  static const int kSuggestionFreqFieldNumber = 3;
  ::google::protobuf::uint32 suggestion_freq() const;
  void set_suggestion_freq(::google::protobuf::uint32 value);

  // optional uint32 conversion_freq = 5 [default = 0];
  bool has_conversion_freq() const;
  void clear_conversion_freq();
  static const int kConversionFreqFieldNumber = 5;
  ::google::protobuf::uint32 conversion_freq() const;
  void set_conversion_freq(::google::protobuf::uint32 value);

  // optional .mozc.user_history_predictor.UserHistory.Entry.EntryType entry_type = 9 [default = DEFAULT_ENTRY];
  bool has_entry_type() const;
  void clear_entry_type();
  static const int kEntryTypeFieldNumber = 9;
  ::mozc::user_history_predictor::UserHistory_Entry_EntryType entry_type() const;
  void set_entry_type(::mozc::user_history_predictor::UserHistory_Entry_EntryType value);

  // optional bool bigram_boost = 20 [default = false];
  bool has_bigram_boost() const;
  void clear_bigram_boost();
  static const int kBigramBoostFieldNumber = 20;
  bool bigram_boost() const;
  void set_bigram_boost(bool value);

  // optional bool spelling_correction = 21 [default = false];
  bool has_spelling_correction() const;
  void clear_spelling_correction();
  static const int kSpellingCorrectionFieldNumber = 21;
  bool spelling_correction() const;
  void set_spelling_correction(bool value);

  // optional bool removed = 8 [default = false];
  bool has_removed() const;
  void clear_removed();
  static const int kRemovedFieldNumber = 8;
  bool removed() const;
  void set_removed(bool value);

  // @@protoc_insertion_point(class_scope:mozc.user_history_predictor.UserHistory.Entry)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();
  void set_has_description();
  void clear_has_description();
  void set_has_suggestion_freq();
  void clear_has_suggestion_freq();
  void set_has_conversion_freq();
  void clear_has_conversion_freq();
  void set_has_last_access_time();
  void clear_has_last_access_time();
  void set_has_bigram_boost();
  void clear_has_bigram_boost();
  void set_has_spelling_correction();
  void clear_has_spelling_correction();
  void set_has_removed();
  void clear_has_removed();
  void set_has_entry_type();
  void clear_has_entry_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mozc::user_history_predictor::UserHistory_NextEntry > next_entries_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::uint64 last_access_time_;
  ::google::protobuf::uint32 suggestion_freq_;
  ::google::protobuf::uint32 conversion_freq_;
  int entry_type_;
  bool bigram_boost_;
  bool spelling_correction_;
  bool removed_;
  friend struct ::protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.user_history_predictor.UserHistory) */ {
 public:
  UserHistory();
  virtual ~UserHistory();

  UserHistory(const UserHistory& from);

  inline UserHistory& operator=(const UserHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserHistory(UserHistory&& from) noexcept
    : UserHistory() {
    *this = ::std::move(from);
  }

  inline UserHistory& operator=(UserHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserHistory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserHistory* internal_default_instance() {
    return reinterpret_cast<const UserHistory*>(
               &_UserHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(UserHistory* other);
  friend void swap(UserHistory& a, UserHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserHistory* New() const final {
    return CreateMaybeMessage<UserHistory>(NULL);
  }

  UserHistory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserHistory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserHistory& from);
  void MergeFrom(const UserHistory& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UserHistory_NextEntry NextEntry;
  typedef UserHistory_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .mozc.user_history_predictor.UserHistory.Entry entries = 6;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 6;
  ::mozc::user_history_predictor::UserHistory_Entry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::mozc::user_history_predictor::UserHistory_Entry >*
      mutable_entries();
  const ::mozc::user_history_predictor::UserHistory_Entry& entries(int index) const;
  ::mozc::user_history_predictor::UserHistory_Entry* add_entries();
  const ::google::protobuf::RepeatedPtrField< ::mozc::user_history_predictor::UserHistory_Entry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:mozc.user_history_predictor.UserHistory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mozc::user_history_predictor::UserHistory_Entry > entries_;
  friend struct ::protobuf_prediction_2fuser_5fhistory_5fpredictor_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserHistory_NextEntry

// optional uint32 entry_fp = 1 [default = 0];
inline bool UserHistory_NextEntry::has_entry_fp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserHistory_NextEntry::set_has_entry_fp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserHistory_NextEntry::clear_has_entry_fp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserHistory_NextEntry::clear_entry_fp() {
  entry_fp_ = 0u;
  clear_has_entry_fp();
}
inline ::google::protobuf::uint32 UserHistory_NextEntry::entry_fp() const {
  // @@protoc_insertion_point(field_get:mozc.user_history_predictor.UserHistory.NextEntry.entry_fp)
  return entry_fp_;
}
inline void UserHistory_NextEntry::set_entry_fp(::google::protobuf::uint32 value) {
  set_has_entry_fp();
  entry_fp_ = value;
  // @@protoc_insertion_point(field_set:mozc.user_history_predictor.UserHistory.NextEntry.entry_fp)
}

// -------------------------------------------------------------------

// UserHistory_Entry

// optional string key = 1 [default = ""];
inline bool UserHistory_Entry::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserHistory_Entry::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserHistory_Entry::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserHistory_Entry::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& UserHistory_Entry::key() const {
  // @@protoc_insertion_point(field_get:mozc.user_history_predictor.UserHistory.Entry.key)
  return key_.GetNoArena();
}
inline void UserHistory_Entry::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mozc.user_history_predictor.UserHistory.Entry.key)
}
#if LANG_CXX11
inline void UserHistory_Entry::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mozc.user_history_predictor.UserHistory.Entry.key)
}
#endif
inline void UserHistory_Entry::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mozc.user_history_predictor.UserHistory.Entry.key)
}
inline void UserHistory_Entry::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mozc.user_history_predictor.UserHistory.Entry.key)
}
inline ::std::string* UserHistory_Entry::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:mozc.user_history_predictor.UserHistory.Entry.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserHistory_Entry::release_key() {
  // @@protoc_insertion_point(field_release:mozc.user_history_predictor.UserHistory.Entry.key)
  if (!has_key()) {
    return NULL;
  }
  clear_has_key();
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserHistory_Entry::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:mozc.user_history_predictor.UserHistory.Entry.key)
}

// optional string value = 2 [default = ""];
inline bool UserHistory_Entry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserHistory_Entry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserHistory_Entry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserHistory_Entry::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& UserHistory_Entry::value() const {
  // @@protoc_insertion_point(field_get:mozc.user_history_predictor.UserHistory.Entry.value)
  return value_.GetNoArena();
}
inline void UserHistory_Entry::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mozc.user_history_predictor.UserHistory.Entry.value)
}
#if LANG_CXX11
inline void UserHistory_Entry::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mozc.user_history_predictor.UserHistory.Entry.value)
}
#endif
inline void UserHistory_Entry::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mozc.user_history_predictor.UserHistory.Entry.value)
}
inline void UserHistory_Entry::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mozc.user_history_predictor.UserHistory.Entry.value)
}
inline ::std::string* UserHistory_Entry::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:mozc.user_history_predictor.UserHistory.Entry.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserHistory_Entry::release_value() {
  // @@protoc_insertion_point(field_release:mozc.user_history_predictor.UserHistory.Entry.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserHistory_Entry::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:mozc.user_history_predictor.UserHistory.Entry.value)
}

// optional string description = 6 [default = ""];
inline bool UserHistory_Entry::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserHistory_Entry::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserHistory_Entry::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserHistory_Entry::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& UserHistory_Entry::description() const {
  // @@protoc_insertion_point(field_get:mozc.user_history_predictor.UserHistory.Entry.description)
  return description_.GetNoArena();
}
inline void UserHistory_Entry::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mozc.user_history_predictor.UserHistory.Entry.description)
}
#if LANG_CXX11
inline void UserHistory_Entry::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mozc.user_history_predictor.UserHistory.Entry.description)
}
#endif
inline void UserHistory_Entry::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mozc.user_history_predictor.UserHistory.Entry.description)
}
inline void UserHistory_Entry::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mozc.user_history_predictor.UserHistory.Entry.description)
}
inline ::std::string* UserHistory_Entry::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:mozc.user_history_predictor.UserHistory.Entry.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserHistory_Entry::release_description() {
  // @@protoc_insertion_point(field_release:mozc.user_history_predictor.UserHistory.Entry.description)
  if (!has_description()) {
    return NULL;
  }
  clear_has_description();
  return description_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserHistory_Entry::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:mozc.user_history_predictor.UserHistory.Entry.description)
}

// optional uint32 suggestion_freq = 3 [default = 0];
inline bool UserHistory_Entry::has_suggestion_freq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserHistory_Entry::set_has_suggestion_freq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserHistory_Entry::clear_has_suggestion_freq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserHistory_Entry::clear_suggestion_freq() {
  suggestion_freq_ = 0u;
  clear_has_suggestion_freq();
}
inline ::google::protobuf::uint32 UserHistory_Entry::suggestion_freq() const {
  // @@protoc_insertion_point(field_get:mozc.user_history_predictor.UserHistory.Entry.suggestion_freq)
  return suggestion_freq_;
}
inline void UserHistory_Entry::set_suggestion_freq(::google::protobuf::uint32 value) {
  set_has_suggestion_freq();
  suggestion_freq_ = value;
  // @@protoc_insertion_point(field_set:mozc.user_history_predictor.UserHistory.Entry.suggestion_freq)
}

// optional uint32 conversion_freq = 5 [default = 0];
inline bool UserHistory_Entry::has_conversion_freq() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserHistory_Entry::set_has_conversion_freq() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserHistory_Entry::clear_has_conversion_freq() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserHistory_Entry::clear_conversion_freq() {
  conversion_freq_ = 0u;
  clear_has_conversion_freq();
}
inline ::google::protobuf::uint32 UserHistory_Entry::conversion_freq() const {
  // @@protoc_insertion_point(field_get:mozc.user_history_predictor.UserHistory.Entry.conversion_freq)
  return conversion_freq_;
}
inline void UserHistory_Entry::set_conversion_freq(::google::protobuf::uint32 value) {
  set_has_conversion_freq();
  conversion_freq_ = value;
  // @@protoc_insertion_point(field_set:mozc.user_history_predictor.UserHistory.Entry.conversion_freq)
}

// optional uint64 last_access_time = 4 [default = 0];
inline bool UserHistory_Entry::has_last_access_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserHistory_Entry::set_has_last_access_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserHistory_Entry::clear_has_last_access_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserHistory_Entry::clear_last_access_time() {
  last_access_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_access_time();
}
inline ::google::protobuf::uint64 UserHistory_Entry::last_access_time() const {
  // @@protoc_insertion_point(field_get:mozc.user_history_predictor.UserHistory.Entry.last_access_time)
  return last_access_time_;
}
inline void UserHistory_Entry::set_last_access_time(::google::protobuf::uint64 value) {
  set_has_last_access_time();
  last_access_time_ = value;
  // @@protoc_insertion_point(field_set:mozc.user_history_predictor.UserHistory.Entry.last_access_time)
}

// repeated .mozc.user_history_predictor.UserHistory.NextEntry next_entries = 7;
inline int UserHistory_Entry::next_entries_size() const {
  return next_entries_.size();
}
inline void UserHistory_Entry::clear_next_entries() {
  next_entries_.Clear();
}
inline ::mozc::user_history_predictor::UserHistory_NextEntry* UserHistory_Entry::mutable_next_entries(int index) {
  // @@protoc_insertion_point(field_mutable:mozc.user_history_predictor.UserHistory.Entry.next_entries)
  return next_entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::mozc::user_history_predictor::UserHistory_NextEntry >*
UserHistory_Entry::mutable_next_entries() {
  // @@protoc_insertion_point(field_mutable_list:mozc.user_history_predictor.UserHistory.Entry.next_entries)
  return &next_entries_;
}
inline const ::mozc::user_history_predictor::UserHistory_NextEntry& UserHistory_Entry::next_entries(int index) const {
  // @@protoc_insertion_point(field_get:mozc.user_history_predictor.UserHistory.Entry.next_entries)
  return next_entries_.Get(index);
}
inline ::mozc::user_history_predictor::UserHistory_NextEntry* UserHistory_Entry::add_next_entries() {
  // @@protoc_insertion_point(field_add:mozc.user_history_predictor.UserHistory.Entry.next_entries)
  return next_entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mozc::user_history_predictor::UserHistory_NextEntry >&
UserHistory_Entry::next_entries() const {
  // @@protoc_insertion_point(field_list:mozc.user_history_predictor.UserHistory.Entry.next_entries)
  return next_entries_;
}

// optional bool bigram_boost = 20 [default = false];
inline bool UserHistory_Entry::has_bigram_boost() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserHistory_Entry::set_has_bigram_boost() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserHistory_Entry::clear_has_bigram_boost() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserHistory_Entry::clear_bigram_boost() {
  bigram_boost_ = false;
  clear_has_bigram_boost();
}
inline bool UserHistory_Entry::bigram_boost() const {
  // @@protoc_insertion_point(field_get:mozc.user_history_predictor.UserHistory.Entry.bigram_boost)
  return bigram_boost_;
}
inline void UserHistory_Entry::set_bigram_boost(bool value) {
  set_has_bigram_boost();
  bigram_boost_ = value;
  // @@protoc_insertion_point(field_set:mozc.user_history_predictor.UserHistory.Entry.bigram_boost)
}

// optional bool spelling_correction = 21 [default = false];
inline bool UserHistory_Entry::has_spelling_correction() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserHistory_Entry::set_has_spelling_correction() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserHistory_Entry::clear_has_spelling_correction() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserHistory_Entry::clear_spelling_correction() {
  spelling_correction_ = false;
  clear_has_spelling_correction();
}
inline bool UserHistory_Entry::spelling_correction() const {
  // @@protoc_insertion_point(field_get:mozc.user_history_predictor.UserHistory.Entry.spelling_correction)
  return spelling_correction_;
}
inline void UserHistory_Entry::set_spelling_correction(bool value) {
  set_has_spelling_correction();
  spelling_correction_ = value;
  // @@protoc_insertion_point(field_set:mozc.user_history_predictor.UserHistory.Entry.spelling_correction)
}

// optional bool removed = 8 [default = false];
inline bool UserHistory_Entry::has_removed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserHistory_Entry::set_has_removed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserHistory_Entry::clear_has_removed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserHistory_Entry::clear_removed() {
  removed_ = false;
  clear_has_removed();
}
inline bool UserHistory_Entry::removed() const {
  // @@protoc_insertion_point(field_get:mozc.user_history_predictor.UserHistory.Entry.removed)
  return removed_;
}
inline void UserHistory_Entry::set_removed(bool value) {
  set_has_removed();
  removed_ = value;
  // @@protoc_insertion_point(field_set:mozc.user_history_predictor.UserHistory.Entry.removed)
}

// optional .mozc.user_history_predictor.UserHistory.Entry.EntryType entry_type = 9 [default = DEFAULT_ENTRY];
inline bool UserHistory_Entry::has_entry_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserHistory_Entry::set_has_entry_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserHistory_Entry::clear_has_entry_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserHistory_Entry::clear_entry_type() {
  entry_type_ = 0;
  clear_has_entry_type();
}
inline ::mozc::user_history_predictor::UserHistory_Entry_EntryType UserHistory_Entry::entry_type() const {
  // @@protoc_insertion_point(field_get:mozc.user_history_predictor.UserHistory.Entry.entry_type)
  return static_cast< ::mozc::user_history_predictor::UserHistory_Entry_EntryType >(entry_type_);
}
inline void UserHistory_Entry::set_entry_type(::mozc::user_history_predictor::UserHistory_Entry_EntryType value) {
  assert(::mozc::user_history_predictor::UserHistory_Entry_EntryType_IsValid(value));
  set_has_entry_type();
  entry_type_ = value;
  // @@protoc_insertion_point(field_set:mozc.user_history_predictor.UserHistory.Entry.entry_type)
}

// -------------------------------------------------------------------

// UserHistory

// repeated .mozc.user_history_predictor.UserHistory.Entry entries = 6;
inline int UserHistory::entries_size() const {
  return entries_.size();
}
inline void UserHistory::clear_entries() {
  entries_.Clear();
}
inline ::mozc::user_history_predictor::UserHistory_Entry* UserHistory::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:mozc.user_history_predictor.UserHistory.entries)
  return entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::mozc::user_history_predictor::UserHistory_Entry >*
UserHistory::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:mozc.user_history_predictor.UserHistory.entries)
  return &entries_;
}
inline const ::mozc::user_history_predictor::UserHistory_Entry& UserHistory::entries(int index) const {
  // @@protoc_insertion_point(field_get:mozc.user_history_predictor.UserHistory.entries)
  return entries_.Get(index);
}
inline ::mozc::user_history_predictor::UserHistory_Entry* UserHistory::add_entries() {
  // @@protoc_insertion_point(field_add:mozc.user_history_predictor.UserHistory.entries)
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mozc::user_history_predictor::UserHistory_Entry >&
UserHistory::entries() const {
  // @@protoc_insertion_point(field_list:mozc.user_history_predictor.UserHistory.entries)
  return entries_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace user_history_predictor
}  // namespace mozc

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::mozc::user_history_predictor::UserHistory_Entry_EntryType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mozc::user_history_predictor::UserHistory_Entry_EntryType>() {
  return ::mozc::user_history_predictor::UserHistory_Entry_EntryType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_prediction_2fuser_5fhistory_5fpredictor_2eproto
