// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: usage_stats/usage_stats.proto

#ifndef PROTOBUF_INCLUDED_usage_5fstats_2fusage_5fstats_2eproto
#define PROTOBUF_INCLUDED_usage_5fstats_2fusage_5fstats_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_usage_5fstats_2fusage_5fstats_2eproto 

namespace protobuf_usage_5fstats_2fusage_5fstats_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_usage_5fstats_2fusage_5fstats_2eproto
namespace mozc {
namespace usage_stats {
class Stats;
class StatsDefaultTypeInternal;
extern StatsDefaultTypeInternal _Stats_default_instance_;
class Stats_DoubleValueStats;
class Stats_DoubleValueStatsDefaultTypeInternal;
extern Stats_DoubleValueStatsDefaultTypeInternal _Stats_DoubleValueStats_default_instance_;
class Stats_TouchEventStats;
class Stats_TouchEventStatsDefaultTypeInternal;
extern Stats_TouchEventStatsDefaultTypeInternal _Stats_TouchEventStats_default_instance_;
class Stats_VirtualKeyboardStats;
class Stats_VirtualKeyboardStatsDefaultTypeInternal;
extern Stats_VirtualKeyboardStatsDefaultTypeInternal _Stats_VirtualKeyboardStats_default_instance_;
}  // namespace usage_stats
}  // namespace mozc
namespace google {
namespace protobuf {
template<> ::mozc::usage_stats::Stats* Arena::CreateMaybeMessage<::mozc::usage_stats::Stats>(Arena*);
template<> ::mozc::usage_stats::Stats_DoubleValueStats* Arena::CreateMaybeMessage<::mozc::usage_stats::Stats_DoubleValueStats>(Arena*);
template<> ::mozc::usage_stats::Stats_TouchEventStats* Arena::CreateMaybeMessage<::mozc::usage_stats::Stats_TouchEventStats>(Arena*);
template<> ::mozc::usage_stats::Stats_VirtualKeyboardStats* Arena::CreateMaybeMessage<::mozc::usage_stats::Stats_VirtualKeyboardStats>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace mozc {
namespace usage_stats {

enum Stats_Type {
  Stats_Type_COUNT = 0,
  Stats_Type_TIMING = 1,
  Stats_Type_INTEGER = 2,
  Stats_Type_BOOLEAN = 3,
  Stats_Type_VIRTUAL_KEYBOARD = 4
};
bool Stats_Type_IsValid(int value);
const Stats_Type Stats_Type_Type_MIN = Stats_Type_COUNT;
const Stats_Type Stats_Type_Type_MAX = Stats_Type_VIRTUAL_KEYBOARD;
const int Stats_Type_Type_ARRAYSIZE = Stats_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Stats_Type_descriptor();
inline const ::std::string& Stats_Type_Name(Stats_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Stats_Type_descriptor(), value);
}
inline bool Stats_Type_Parse(
    const ::std::string& name, Stats_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Stats_Type>(
    Stats_Type_descriptor(), name, value);
}
// ===================================================================

class Stats_DoubleValueStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.usage_stats.Stats.DoubleValueStats) */ {
 public:
  Stats_DoubleValueStats();
  virtual ~Stats_DoubleValueStats();

  Stats_DoubleValueStats(const Stats_DoubleValueStats& from);

  inline Stats_DoubleValueStats& operator=(const Stats_DoubleValueStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stats_DoubleValueStats(Stats_DoubleValueStats&& from) noexcept
    : Stats_DoubleValueStats() {
    *this = ::std::move(from);
  }

  inline Stats_DoubleValueStats& operator=(Stats_DoubleValueStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stats_DoubleValueStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stats_DoubleValueStats* internal_default_instance() {
    return reinterpret_cast<const Stats_DoubleValueStats*>(
               &_Stats_DoubleValueStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Stats_DoubleValueStats* other);
  friend void swap(Stats_DoubleValueStats& a, Stats_DoubleValueStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stats_DoubleValueStats* New() const final {
    return CreateMaybeMessage<Stats_DoubleValueStats>(NULL);
  }

  Stats_DoubleValueStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Stats_DoubleValueStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Stats_DoubleValueStats& from);
  void MergeFrom(const Stats_DoubleValueStats& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Stats_DoubleValueStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  double total() const;
  void set_total(double value);

  // optional double square_total = 3;
  bool has_square_total() const;
  void clear_square_total();
  static const int kSquareTotalFieldNumber = 3;
  double square_total() const;
  void set_square_total(double value);

  // optional uint32 num = 1;
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 1;
  ::google::protobuf::uint32 num() const;
  void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mozc.usage_stats.Stats.DoubleValueStats)
 private:
  void set_has_num();
  void clear_has_num();
  void set_has_total();
  void clear_has_total();
  void set_has_square_total();
  void clear_has_square_total();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double total_;
  double square_total_;
  ::google::protobuf::uint32 num_;
  friend struct ::protobuf_usage_5fstats_2fusage_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Stats_TouchEventStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.usage_stats.Stats.TouchEventStats) */ {
 public:
  Stats_TouchEventStats();
  virtual ~Stats_TouchEventStats();

  Stats_TouchEventStats(const Stats_TouchEventStats& from);

  inline Stats_TouchEventStats& operator=(const Stats_TouchEventStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stats_TouchEventStats(Stats_TouchEventStats&& from) noexcept
    : Stats_TouchEventStats() {
    *this = ::std::move(from);
  }

  inline Stats_TouchEventStats& operator=(Stats_TouchEventStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stats_TouchEventStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stats_TouchEventStats* internal_default_instance() {
    return reinterpret_cast<const Stats_TouchEventStats*>(
               &_Stats_TouchEventStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Stats_TouchEventStats* other);
  friend void swap(Stats_TouchEventStats& a, Stats_TouchEventStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stats_TouchEventStats* New() const final {
    return CreateMaybeMessage<Stats_TouchEventStats>(NULL);
  }

  Stats_TouchEventStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Stats_TouchEventStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Stats_TouchEventStats& from);
  void MergeFrom(const Stats_TouchEventStats& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Stats_TouchEventStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .mozc.usage_stats.Stats.DoubleValueStats start_x_stats = 2;
  bool has_start_x_stats() const;
  void clear_start_x_stats();
  static const int kStartXStatsFieldNumber = 2;
  private:
  const ::mozc::usage_stats::Stats_DoubleValueStats& _internal_start_x_stats() const;
  public:
  const ::mozc::usage_stats::Stats_DoubleValueStats& start_x_stats() const;
  ::mozc::usage_stats::Stats_DoubleValueStats* release_start_x_stats();
  ::mozc::usage_stats::Stats_DoubleValueStats* mutable_start_x_stats();
  void set_allocated_start_x_stats(::mozc::usage_stats::Stats_DoubleValueStats* start_x_stats);

  // optional .mozc.usage_stats.Stats.DoubleValueStats start_y_stats = 3;
  bool has_start_y_stats() const;
  void clear_start_y_stats();
  static const int kStartYStatsFieldNumber = 3;
  private:
  const ::mozc::usage_stats::Stats_DoubleValueStats& _internal_start_y_stats() const;
  public:
  const ::mozc::usage_stats::Stats_DoubleValueStats& start_y_stats() const;
  ::mozc::usage_stats::Stats_DoubleValueStats* release_start_y_stats();
  ::mozc::usage_stats::Stats_DoubleValueStats* mutable_start_y_stats();
  void set_allocated_start_y_stats(::mozc::usage_stats::Stats_DoubleValueStats* start_y_stats);

  // optional .mozc.usage_stats.Stats.DoubleValueStats direction_x_stats = 4;
  bool has_direction_x_stats() const;
  void clear_direction_x_stats();
  static const int kDirectionXStatsFieldNumber = 4;
  private:
  const ::mozc::usage_stats::Stats_DoubleValueStats& _internal_direction_x_stats() const;
  public:
  const ::mozc::usage_stats::Stats_DoubleValueStats& direction_x_stats() const;
  ::mozc::usage_stats::Stats_DoubleValueStats* release_direction_x_stats();
  ::mozc::usage_stats::Stats_DoubleValueStats* mutable_direction_x_stats();
  void set_allocated_direction_x_stats(::mozc::usage_stats::Stats_DoubleValueStats* direction_x_stats);

  // optional .mozc.usage_stats.Stats.DoubleValueStats direction_y_stats = 5;
  bool has_direction_y_stats() const;
  void clear_direction_y_stats();
  static const int kDirectionYStatsFieldNumber = 5;
  private:
  const ::mozc::usage_stats::Stats_DoubleValueStats& _internal_direction_y_stats() const;
  public:
  const ::mozc::usage_stats::Stats_DoubleValueStats& direction_y_stats() const;
  ::mozc::usage_stats::Stats_DoubleValueStats* release_direction_y_stats();
  ::mozc::usage_stats::Stats_DoubleValueStats* mutable_direction_y_stats();
  void set_allocated_direction_y_stats(::mozc::usage_stats::Stats_DoubleValueStats* direction_y_stats);

  // optional .mozc.usage_stats.Stats.DoubleValueStats time_length_stats = 6;
  bool has_time_length_stats() const;
  void clear_time_length_stats();
  static const int kTimeLengthStatsFieldNumber = 6;
  private:
  const ::mozc::usage_stats::Stats_DoubleValueStats& _internal_time_length_stats() const;
  public:
  const ::mozc::usage_stats::Stats_DoubleValueStats& time_length_stats() const;
  ::mozc::usage_stats::Stats_DoubleValueStats* release_time_length_stats();
  ::mozc::usage_stats::Stats_DoubleValueStats* mutable_time_length_stats();
  void set_allocated_time_length_stats(::mozc::usage_stats::Stats_DoubleValueStats* time_length_stats);

  // optional uint32 source_id = 1;
  bool has_source_id() const;
  void clear_source_id();
  static const int kSourceIdFieldNumber = 1;
  ::google::protobuf::uint32 source_id() const;
  void set_source_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mozc.usage_stats.Stats.TouchEventStats)
 private:
  void set_has_source_id();
  void clear_has_source_id();
  void set_has_start_x_stats();
  void clear_has_start_x_stats();
  void set_has_start_y_stats();
  void clear_has_start_y_stats();
  void set_has_direction_x_stats();
  void clear_has_direction_x_stats();
  void set_has_direction_y_stats();
  void clear_has_direction_y_stats();
  void set_has_time_length_stats();
  void clear_has_time_length_stats();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::mozc::usage_stats::Stats_DoubleValueStats* start_x_stats_;
  ::mozc::usage_stats::Stats_DoubleValueStats* start_y_stats_;
  ::mozc::usage_stats::Stats_DoubleValueStats* direction_x_stats_;
  ::mozc::usage_stats::Stats_DoubleValueStats* direction_y_stats_;
  ::mozc::usage_stats::Stats_DoubleValueStats* time_length_stats_;
  ::google::protobuf::uint32 source_id_;
  friend struct ::protobuf_usage_5fstats_2fusage_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Stats_VirtualKeyboardStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.usage_stats.Stats.VirtualKeyboardStats) */ {
 public:
  Stats_VirtualKeyboardStats();
  virtual ~Stats_VirtualKeyboardStats();

  Stats_VirtualKeyboardStats(const Stats_VirtualKeyboardStats& from);

  inline Stats_VirtualKeyboardStats& operator=(const Stats_VirtualKeyboardStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stats_VirtualKeyboardStats(Stats_VirtualKeyboardStats&& from) noexcept
    : Stats_VirtualKeyboardStats() {
    *this = ::std::move(from);
  }

  inline Stats_VirtualKeyboardStats& operator=(Stats_VirtualKeyboardStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stats_VirtualKeyboardStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stats_VirtualKeyboardStats* internal_default_instance() {
    return reinterpret_cast<const Stats_VirtualKeyboardStats*>(
               &_Stats_VirtualKeyboardStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Stats_VirtualKeyboardStats* other);
  friend void swap(Stats_VirtualKeyboardStats& a, Stats_VirtualKeyboardStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stats_VirtualKeyboardStats* New() const final {
    return CreateMaybeMessage<Stats_VirtualKeyboardStats>(NULL);
  }

  Stats_VirtualKeyboardStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Stats_VirtualKeyboardStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Stats_VirtualKeyboardStats& from);
  void MergeFrom(const Stats_VirtualKeyboardStats& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Stats_VirtualKeyboardStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mozc.usage_stats.Stats.TouchEventStats touch_event_stats = 2;
  int touch_event_stats_size() const;
  void clear_touch_event_stats();
  static const int kTouchEventStatsFieldNumber = 2;
  ::mozc::usage_stats::Stats_TouchEventStats* mutable_touch_event_stats(int index);
  ::google::protobuf::RepeatedPtrField< ::mozc::usage_stats::Stats_TouchEventStats >*
      mutable_touch_event_stats();
  const ::mozc::usage_stats::Stats_TouchEventStats& touch_event_stats(int index) const;
  ::mozc::usage_stats::Stats_TouchEventStats* add_touch_event_stats();
  const ::google::protobuf::RepeatedPtrField< ::mozc::usage_stats::Stats_TouchEventStats >&
      touch_event_stats() const;

  // optional string keyboard_name = 1;
  bool has_keyboard_name() const;
  void clear_keyboard_name();
  static const int kKeyboardNameFieldNumber = 1;
  const ::std::string& keyboard_name() const;
  void set_keyboard_name(const ::std::string& value);
  #if LANG_CXX11
  void set_keyboard_name(::std::string&& value);
  #endif
  void set_keyboard_name(const char* value);
  void set_keyboard_name(const char* value, size_t size);
  ::std::string* mutable_keyboard_name();
  ::std::string* release_keyboard_name();
  void set_allocated_keyboard_name(::std::string* keyboard_name);

  // @@protoc_insertion_point(class_scope:mozc.usage_stats.Stats.VirtualKeyboardStats)
 private:
  void set_has_keyboard_name();
  void clear_has_keyboard_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mozc::usage_stats::Stats_TouchEventStats > touch_event_stats_;
  ::google::protobuf::internal::ArenaStringPtr keyboard_name_;
  friend struct ::protobuf_usage_5fstats_2fusage_5fstats_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Stats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.usage_stats.Stats) */ {
 public:
  Stats();
  virtual ~Stats();

  Stats(const Stats& from);

  inline Stats& operator=(const Stats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stats(Stats&& from) noexcept
    : Stats() {
    *this = ::std::move(from);
  }

  inline Stats& operator=(Stats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stats* internal_default_instance() {
    return reinterpret_cast<const Stats*>(
               &_Stats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Stats* other);
  friend void swap(Stats& a, Stats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stats* New() const final {
    return CreateMaybeMessage<Stats>(NULL);
  }

  Stats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Stats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Stats& from);
  void MergeFrom(const Stats& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Stats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Stats_DoubleValueStats DoubleValueStats;
  typedef Stats_TouchEventStats TouchEventStats;
  typedef Stats_VirtualKeyboardStats VirtualKeyboardStats;

  typedef Stats_Type Type;
  static const Type COUNT =
    Stats_Type_COUNT;
  static const Type TIMING =
    Stats_Type_TIMING;
  static const Type INTEGER =
    Stats_Type_INTEGER;
  static const Type BOOLEAN =
    Stats_Type_BOOLEAN;
  static const Type VIRTUAL_KEYBOARD =
    Stats_Type_VIRTUAL_KEYBOARD;
  static inline bool Type_IsValid(int value) {
    return Stats_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Stats_Type_Type_MIN;
  static const Type Type_MAX =
    Stats_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Stats_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Stats_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Stats_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Stats_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .mozc.usage_stats.Stats.VirtualKeyboardStats virtual_keyboard_stats = 11;
  int virtual_keyboard_stats_size() const;
  void clear_virtual_keyboard_stats();
  static const int kVirtualKeyboardStatsFieldNumber = 11;
  ::mozc::usage_stats::Stats_VirtualKeyboardStats* mutable_virtual_keyboard_stats(int index);
  ::google::protobuf::RepeatedPtrField< ::mozc::usage_stats::Stats_VirtualKeyboardStats >*
      mutable_virtual_keyboard_stats();
  const ::mozc::usage_stats::Stats_VirtualKeyboardStats& virtual_keyboard_stats(int index) const;
  ::mozc::usage_stats::Stats_VirtualKeyboardStats* add_virtual_keyboard_stats();
  const ::google::protobuf::RepeatedPtrField< ::mozc::usage_stats::Stats_VirtualKeyboardStats >&
      virtual_keyboard_stats() const;

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required .mozc.usage_stats.Stats.Type type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::mozc::usage_stats::Stats_Type type() const;
  void set_type(::mozc::usage_stats::Stats_Type value);

  // optional uint32 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // optional uint32 num_timings = 4;
  bool has_num_timings() const;
  void clear_num_timings();
  static const int kNumTimingsFieldNumber = 4;
  ::google::protobuf::uint32 num_timings() const;
  void set_num_timings(::google::protobuf::uint32 value);

  // optional uint32 avg_time = 5;
  bool has_avg_time() const;
  void clear_avg_time();
  static const int kAvgTimeFieldNumber = 5;
  ::google::protobuf::uint32 avg_time() const;
  void set_avg_time(::google::protobuf::uint32 value);

  // optional uint32 min_time = 6;
  bool has_min_time() const;
  void clear_min_time();
  static const int kMinTimeFieldNumber = 6;
  ::google::protobuf::uint32 min_time() const;
  void set_min_time(::google::protobuf::uint32 value);

  // optional uint32 max_time = 7;
  bool has_max_time() const;
  void clear_max_time();
  static const int kMaxTimeFieldNumber = 7;
  ::google::protobuf::uint32 max_time() const;
  void set_max_time(::google::protobuf::uint32 value);

  // optional int32 int_value = 8;
  bool has_int_value() const;
  void clear_int_value();
  static const int kIntValueFieldNumber = 8;
  ::google::protobuf::int32 int_value() const;
  void set_int_value(::google::protobuf::int32 value);

  // optional bool boolean_value = 9;
  bool has_boolean_value() const;
  void clear_boolean_value();
  static const int kBooleanValueFieldNumber = 9;
  bool boolean_value() const;
  void set_boolean_value(bool value);

  // optional uint64 total_time = 10;
  bool has_total_time() const;
  void clear_total_time();
  static const int kTotalTimeFieldNumber = 10;
  ::google::protobuf::uint64 total_time() const;
  void set_total_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:mozc.usage_stats.Stats)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_type();
  void clear_has_type();
  void set_has_count();
  void clear_has_count();
  void set_has_total_time();
  void clear_has_total_time();
  void set_has_num_timings();
  void clear_has_num_timings();
  void set_has_avg_time();
  void clear_has_avg_time();
  void set_has_min_time();
  void clear_has_min_time();
  void set_has_max_time();
  void clear_has_max_time();
  void set_has_int_value();
  void clear_has_int_value();
  void set_has_boolean_value();
  void clear_has_boolean_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mozc::usage_stats::Stats_VirtualKeyboardStats > virtual_keyboard_stats_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int type_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 num_timings_;
  ::google::protobuf::uint32 avg_time_;
  ::google::protobuf::uint32 min_time_;
  ::google::protobuf::uint32 max_time_;
  ::google::protobuf::int32 int_value_;
  bool boolean_value_;
  ::google::protobuf::uint64 total_time_;
  friend struct ::protobuf_usage_5fstats_2fusage_5fstats_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Stats_DoubleValueStats

// optional uint32 num = 1;
inline bool Stats_DoubleValueStats::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Stats_DoubleValueStats::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Stats_DoubleValueStats::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Stats_DoubleValueStats::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 Stats_DoubleValueStats::num() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.DoubleValueStats.num)
  return num_;
}
inline void Stats_DoubleValueStats::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.DoubleValueStats.num)
}

// optional double total = 2;
inline bool Stats_DoubleValueStats::has_total() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Stats_DoubleValueStats::set_has_total() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Stats_DoubleValueStats::clear_has_total() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Stats_DoubleValueStats::clear_total() {
  total_ = 0;
  clear_has_total();
}
inline double Stats_DoubleValueStats::total() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.DoubleValueStats.total)
  return total_;
}
inline void Stats_DoubleValueStats::set_total(double value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.DoubleValueStats.total)
}

// optional double square_total = 3;
inline bool Stats_DoubleValueStats::has_square_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Stats_DoubleValueStats::set_has_square_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Stats_DoubleValueStats::clear_has_square_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Stats_DoubleValueStats::clear_square_total() {
  square_total_ = 0;
  clear_has_square_total();
}
inline double Stats_DoubleValueStats::square_total() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.DoubleValueStats.square_total)
  return square_total_;
}
inline void Stats_DoubleValueStats::set_square_total(double value) {
  set_has_square_total();
  square_total_ = value;
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.DoubleValueStats.square_total)
}

// -------------------------------------------------------------------

// Stats_TouchEventStats

// optional uint32 source_id = 1;
inline bool Stats_TouchEventStats::has_source_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Stats_TouchEventStats::set_has_source_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Stats_TouchEventStats::clear_has_source_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Stats_TouchEventStats::clear_source_id() {
  source_id_ = 0u;
  clear_has_source_id();
}
inline ::google::protobuf::uint32 Stats_TouchEventStats::source_id() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.TouchEventStats.source_id)
  return source_id_;
}
inline void Stats_TouchEventStats::set_source_id(::google::protobuf::uint32 value) {
  set_has_source_id();
  source_id_ = value;
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.TouchEventStats.source_id)
}

// optional .mozc.usage_stats.Stats.DoubleValueStats start_x_stats = 2;
inline bool Stats_TouchEventStats::has_start_x_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Stats_TouchEventStats::set_has_start_x_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Stats_TouchEventStats::clear_has_start_x_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Stats_TouchEventStats::clear_start_x_stats() {
  if (start_x_stats_ != NULL) start_x_stats_->Clear();
  clear_has_start_x_stats();
}
inline const ::mozc::usage_stats::Stats_DoubleValueStats& Stats_TouchEventStats::_internal_start_x_stats() const {
  return *start_x_stats_;
}
inline const ::mozc::usage_stats::Stats_DoubleValueStats& Stats_TouchEventStats::start_x_stats() const {
  const ::mozc::usage_stats::Stats_DoubleValueStats* p = start_x_stats_;
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.TouchEventStats.start_x_stats)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::usage_stats::Stats_DoubleValueStats*>(
      &::mozc::usage_stats::_Stats_DoubleValueStats_default_instance_);
}
inline ::mozc::usage_stats::Stats_DoubleValueStats* Stats_TouchEventStats::release_start_x_stats() {
  // @@protoc_insertion_point(field_release:mozc.usage_stats.Stats.TouchEventStats.start_x_stats)
  clear_has_start_x_stats();
  ::mozc::usage_stats::Stats_DoubleValueStats* temp = start_x_stats_;
  start_x_stats_ = NULL;
  return temp;
}
inline ::mozc::usage_stats::Stats_DoubleValueStats* Stats_TouchEventStats::mutable_start_x_stats() {
  set_has_start_x_stats();
  if (start_x_stats_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::usage_stats::Stats_DoubleValueStats>(GetArenaNoVirtual());
    start_x_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.usage_stats.Stats.TouchEventStats.start_x_stats)
  return start_x_stats_;
}
inline void Stats_TouchEventStats::set_allocated_start_x_stats(::mozc::usage_stats::Stats_DoubleValueStats* start_x_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_x_stats_;
  }
  if (start_x_stats) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_x_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_x_stats, submessage_arena);
    }
    set_has_start_x_stats();
  } else {
    clear_has_start_x_stats();
  }
  start_x_stats_ = start_x_stats;
  // @@protoc_insertion_point(field_set_allocated:mozc.usage_stats.Stats.TouchEventStats.start_x_stats)
}

// optional .mozc.usage_stats.Stats.DoubleValueStats start_y_stats = 3;
inline bool Stats_TouchEventStats::has_start_y_stats() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Stats_TouchEventStats::set_has_start_y_stats() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Stats_TouchEventStats::clear_has_start_y_stats() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Stats_TouchEventStats::clear_start_y_stats() {
  if (start_y_stats_ != NULL) start_y_stats_->Clear();
  clear_has_start_y_stats();
}
inline const ::mozc::usage_stats::Stats_DoubleValueStats& Stats_TouchEventStats::_internal_start_y_stats() const {
  return *start_y_stats_;
}
inline const ::mozc::usage_stats::Stats_DoubleValueStats& Stats_TouchEventStats::start_y_stats() const {
  const ::mozc::usage_stats::Stats_DoubleValueStats* p = start_y_stats_;
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.TouchEventStats.start_y_stats)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::usage_stats::Stats_DoubleValueStats*>(
      &::mozc::usage_stats::_Stats_DoubleValueStats_default_instance_);
}
inline ::mozc::usage_stats::Stats_DoubleValueStats* Stats_TouchEventStats::release_start_y_stats() {
  // @@protoc_insertion_point(field_release:mozc.usage_stats.Stats.TouchEventStats.start_y_stats)
  clear_has_start_y_stats();
  ::mozc::usage_stats::Stats_DoubleValueStats* temp = start_y_stats_;
  start_y_stats_ = NULL;
  return temp;
}
inline ::mozc::usage_stats::Stats_DoubleValueStats* Stats_TouchEventStats::mutable_start_y_stats() {
  set_has_start_y_stats();
  if (start_y_stats_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::usage_stats::Stats_DoubleValueStats>(GetArenaNoVirtual());
    start_y_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.usage_stats.Stats.TouchEventStats.start_y_stats)
  return start_y_stats_;
}
inline void Stats_TouchEventStats::set_allocated_start_y_stats(::mozc::usage_stats::Stats_DoubleValueStats* start_y_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_y_stats_;
  }
  if (start_y_stats) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_y_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_y_stats, submessage_arena);
    }
    set_has_start_y_stats();
  } else {
    clear_has_start_y_stats();
  }
  start_y_stats_ = start_y_stats;
  // @@protoc_insertion_point(field_set_allocated:mozc.usage_stats.Stats.TouchEventStats.start_y_stats)
}

// optional .mozc.usage_stats.Stats.DoubleValueStats direction_x_stats = 4;
inline bool Stats_TouchEventStats::has_direction_x_stats() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Stats_TouchEventStats::set_has_direction_x_stats() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Stats_TouchEventStats::clear_has_direction_x_stats() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Stats_TouchEventStats::clear_direction_x_stats() {
  if (direction_x_stats_ != NULL) direction_x_stats_->Clear();
  clear_has_direction_x_stats();
}
inline const ::mozc::usage_stats::Stats_DoubleValueStats& Stats_TouchEventStats::_internal_direction_x_stats() const {
  return *direction_x_stats_;
}
inline const ::mozc::usage_stats::Stats_DoubleValueStats& Stats_TouchEventStats::direction_x_stats() const {
  const ::mozc::usage_stats::Stats_DoubleValueStats* p = direction_x_stats_;
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.TouchEventStats.direction_x_stats)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::usage_stats::Stats_DoubleValueStats*>(
      &::mozc::usage_stats::_Stats_DoubleValueStats_default_instance_);
}
inline ::mozc::usage_stats::Stats_DoubleValueStats* Stats_TouchEventStats::release_direction_x_stats() {
  // @@protoc_insertion_point(field_release:mozc.usage_stats.Stats.TouchEventStats.direction_x_stats)
  clear_has_direction_x_stats();
  ::mozc::usage_stats::Stats_DoubleValueStats* temp = direction_x_stats_;
  direction_x_stats_ = NULL;
  return temp;
}
inline ::mozc::usage_stats::Stats_DoubleValueStats* Stats_TouchEventStats::mutable_direction_x_stats() {
  set_has_direction_x_stats();
  if (direction_x_stats_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::usage_stats::Stats_DoubleValueStats>(GetArenaNoVirtual());
    direction_x_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.usage_stats.Stats.TouchEventStats.direction_x_stats)
  return direction_x_stats_;
}
inline void Stats_TouchEventStats::set_allocated_direction_x_stats(::mozc::usage_stats::Stats_DoubleValueStats* direction_x_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete direction_x_stats_;
  }
  if (direction_x_stats) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      direction_x_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, direction_x_stats, submessage_arena);
    }
    set_has_direction_x_stats();
  } else {
    clear_has_direction_x_stats();
  }
  direction_x_stats_ = direction_x_stats;
  // @@protoc_insertion_point(field_set_allocated:mozc.usage_stats.Stats.TouchEventStats.direction_x_stats)
}

// optional .mozc.usage_stats.Stats.DoubleValueStats direction_y_stats = 5;
inline bool Stats_TouchEventStats::has_direction_y_stats() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Stats_TouchEventStats::set_has_direction_y_stats() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Stats_TouchEventStats::clear_has_direction_y_stats() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Stats_TouchEventStats::clear_direction_y_stats() {
  if (direction_y_stats_ != NULL) direction_y_stats_->Clear();
  clear_has_direction_y_stats();
}
inline const ::mozc::usage_stats::Stats_DoubleValueStats& Stats_TouchEventStats::_internal_direction_y_stats() const {
  return *direction_y_stats_;
}
inline const ::mozc::usage_stats::Stats_DoubleValueStats& Stats_TouchEventStats::direction_y_stats() const {
  const ::mozc::usage_stats::Stats_DoubleValueStats* p = direction_y_stats_;
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.TouchEventStats.direction_y_stats)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::usage_stats::Stats_DoubleValueStats*>(
      &::mozc::usage_stats::_Stats_DoubleValueStats_default_instance_);
}
inline ::mozc::usage_stats::Stats_DoubleValueStats* Stats_TouchEventStats::release_direction_y_stats() {
  // @@protoc_insertion_point(field_release:mozc.usage_stats.Stats.TouchEventStats.direction_y_stats)
  clear_has_direction_y_stats();
  ::mozc::usage_stats::Stats_DoubleValueStats* temp = direction_y_stats_;
  direction_y_stats_ = NULL;
  return temp;
}
inline ::mozc::usage_stats::Stats_DoubleValueStats* Stats_TouchEventStats::mutable_direction_y_stats() {
  set_has_direction_y_stats();
  if (direction_y_stats_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::usage_stats::Stats_DoubleValueStats>(GetArenaNoVirtual());
    direction_y_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.usage_stats.Stats.TouchEventStats.direction_y_stats)
  return direction_y_stats_;
}
inline void Stats_TouchEventStats::set_allocated_direction_y_stats(::mozc::usage_stats::Stats_DoubleValueStats* direction_y_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete direction_y_stats_;
  }
  if (direction_y_stats) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      direction_y_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, direction_y_stats, submessage_arena);
    }
    set_has_direction_y_stats();
  } else {
    clear_has_direction_y_stats();
  }
  direction_y_stats_ = direction_y_stats;
  // @@protoc_insertion_point(field_set_allocated:mozc.usage_stats.Stats.TouchEventStats.direction_y_stats)
}

// optional .mozc.usage_stats.Stats.DoubleValueStats time_length_stats = 6;
inline bool Stats_TouchEventStats::has_time_length_stats() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Stats_TouchEventStats::set_has_time_length_stats() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Stats_TouchEventStats::clear_has_time_length_stats() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Stats_TouchEventStats::clear_time_length_stats() {
  if (time_length_stats_ != NULL) time_length_stats_->Clear();
  clear_has_time_length_stats();
}
inline const ::mozc::usage_stats::Stats_DoubleValueStats& Stats_TouchEventStats::_internal_time_length_stats() const {
  return *time_length_stats_;
}
inline const ::mozc::usage_stats::Stats_DoubleValueStats& Stats_TouchEventStats::time_length_stats() const {
  const ::mozc::usage_stats::Stats_DoubleValueStats* p = time_length_stats_;
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.TouchEventStats.time_length_stats)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::usage_stats::Stats_DoubleValueStats*>(
      &::mozc::usage_stats::_Stats_DoubleValueStats_default_instance_);
}
inline ::mozc::usage_stats::Stats_DoubleValueStats* Stats_TouchEventStats::release_time_length_stats() {
  // @@protoc_insertion_point(field_release:mozc.usage_stats.Stats.TouchEventStats.time_length_stats)
  clear_has_time_length_stats();
  ::mozc::usage_stats::Stats_DoubleValueStats* temp = time_length_stats_;
  time_length_stats_ = NULL;
  return temp;
}
inline ::mozc::usage_stats::Stats_DoubleValueStats* Stats_TouchEventStats::mutable_time_length_stats() {
  set_has_time_length_stats();
  if (time_length_stats_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::usage_stats::Stats_DoubleValueStats>(GetArenaNoVirtual());
    time_length_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.usage_stats.Stats.TouchEventStats.time_length_stats)
  return time_length_stats_;
}
inline void Stats_TouchEventStats::set_allocated_time_length_stats(::mozc::usage_stats::Stats_DoubleValueStats* time_length_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete time_length_stats_;
  }
  if (time_length_stats) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time_length_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_length_stats, submessage_arena);
    }
    set_has_time_length_stats();
  } else {
    clear_has_time_length_stats();
  }
  time_length_stats_ = time_length_stats;
  // @@protoc_insertion_point(field_set_allocated:mozc.usage_stats.Stats.TouchEventStats.time_length_stats)
}

// -------------------------------------------------------------------

// Stats_VirtualKeyboardStats

// optional string keyboard_name = 1;
inline bool Stats_VirtualKeyboardStats::has_keyboard_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Stats_VirtualKeyboardStats::set_has_keyboard_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Stats_VirtualKeyboardStats::clear_has_keyboard_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Stats_VirtualKeyboardStats::clear_keyboard_name() {
  keyboard_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyboard_name();
}
inline const ::std::string& Stats_VirtualKeyboardStats::keyboard_name() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.VirtualKeyboardStats.keyboard_name)
  return keyboard_name_.GetNoArena();
}
inline void Stats_VirtualKeyboardStats::set_keyboard_name(const ::std::string& value) {
  set_has_keyboard_name();
  keyboard_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.VirtualKeyboardStats.keyboard_name)
}
#if LANG_CXX11
inline void Stats_VirtualKeyboardStats::set_keyboard_name(::std::string&& value) {
  set_has_keyboard_name();
  keyboard_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mozc.usage_stats.Stats.VirtualKeyboardStats.keyboard_name)
}
#endif
inline void Stats_VirtualKeyboardStats::set_keyboard_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keyboard_name();
  keyboard_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mozc.usage_stats.Stats.VirtualKeyboardStats.keyboard_name)
}
inline void Stats_VirtualKeyboardStats::set_keyboard_name(const char* value, size_t size) {
  set_has_keyboard_name();
  keyboard_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mozc.usage_stats.Stats.VirtualKeyboardStats.keyboard_name)
}
inline ::std::string* Stats_VirtualKeyboardStats::mutable_keyboard_name() {
  set_has_keyboard_name();
  // @@protoc_insertion_point(field_mutable:mozc.usage_stats.Stats.VirtualKeyboardStats.keyboard_name)
  return keyboard_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Stats_VirtualKeyboardStats::release_keyboard_name() {
  // @@protoc_insertion_point(field_release:mozc.usage_stats.Stats.VirtualKeyboardStats.keyboard_name)
  if (!has_keyboard_name()) {
    return NULL;
  }
  clear_has_keyboard_name();
  return keyboard_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Stats_VirtualKeyboardStats::set_allocated_keyboard_name(::std::string* keyboard_name) {
  if (keyboard_name != NULL) {
    set_has_keyboard_name();
  } else {
    clear_has_keyboard_name();
  }
  keyboard_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyboard_name);
  // @@protoc_insertion_point(field_set_allocated:mozc.usage_stats.Stats.VirtualKeyboardStats.keyboard_name)
}

// repeated .mozc.usage_stats.Stats.TouchEventStats touch_event_stats = 2;
inline int Stats_VirtualKeyboardStats::touch_event_stats_size() const {
  return touch_event_stats_.size();
}
inline void Stats_VirtualKeyboardStats::clear_touch_event_stats() {
  touch_event_stats_.Clear();
}
inline ::mozc::usage_stats::Stats_TouchEventStats* Stats_VirtualKeyboardStats::mutable_touch_event_stats(int index) {
  // @@protoc_insertion_point(field_mutable:mozc.usage_stats.Stats.VirtualKeyboardStats.touch_event_stats)
  return touch_event_stats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::mozc::usage_stats::Stats_TouchEventStats >*
Stats_VirtualKeyboardStats::mutable_touch_event_stats() {
  // @@protoc_insertion_point(field_mutable_list:mozc.usage_stats.Stats.VirtualKeyboardStats.touch_event_stats)
  return &touch_event_stats_;
}
inline const ::mozc::usage_stats::Stats_TouchEventStats& Stats_VirtualKeyboardStats::touch_event_stats(int index) const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.VirtualKeyboardStats.touch_event_stats)
  return touch_event_stats_.Get(index);
}
inline ::mozc::usage_stats::Stats_TouchEventStats* Stats_VirtualKeyboardStats::add_touch_event_stats() {
  // @@protoc_insertion_point(field_add:mozc.usage_stats.Stats.VirtualKeyboardStats.touch_event_stats)
  return touch_event_stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mozc::usage_stats::Stats_TouchEventStats >&
Stats_VirtualKeyboardStats::touch_event_stats() const {
  // @@protoc_insertion_point(field_list:mozc.usage_stats.Stats.VirtualKeyboardStats.touch_event_stats)
  return touch_event_stats_;
}

// -------------------------------------------------------------------

// Stats

// required string name = 1;
inline bool Stats::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Stats::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Stats::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Stats::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Stats::name() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.name)
  return name_.GetNoArena();
}
inline void Stats::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.name)
}
#if LANG_CXX11
inline void Stats::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mozc.usage_stats.Stats.name)
}
#endif
inline void Stats::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mozc.usage_stats.Stats.name)
}
inline void Stats::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mozc.usage_stats.Stats.name)
}
inline ::std::string* Stats::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:mozc.usage_stats.Stats.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Stats::release_name() {
  // @@protoc_insertion_point(field_release:mozc.usage_stats.Stats.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Stats::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mozc.usage_stats.Stats.name)
}

// required .mozc.usage_stats.Stats.Type type = 2;
inline bool Stats::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Stats::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Stats::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Stats::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::mozc::usage_stats::Stats_Type Stats::type() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.type)
  return static_cast< ::mozc::usage_stats::Stats_Type >(type_);
}
inline void Stats::set_type(::mozc::usage_stats::Stats_Type value) {
  assert(::mozc::usage_stats::Stats_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.type)
}

// optional uint32 count = 3;
inline bool Stats::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Stats::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Stats::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Stats::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 Stats::count() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.count)
  return count_;
}
inline void Stats::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.count)
}

// optional uint64 total_time = 10;
inline bool Stats::has_total_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Stats::set_has_total_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Stats::clear_has_total_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Stats::clear_total_time() {
  total_time_ = GOOGLE_ULONGLONG(0);
  clear_has_total_time();
}
inline ::google::protobuf::uint64 Stats::total_time() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.total_time)
  return total_time_;
}
inline void Stats::set_total_time(::google::protobuf::uint64 value) {
  set_has_total_time();
  total_time_ = value;
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.total_time)
}

// optional uint32 num_timings = 4;
inline bool Stats::has_num_timings() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Stats::set_has_num_timings() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Stats::clear_has_num_timings() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Stats::clear_num_timings() {
  num_timings_ = 0u;
  clear_has_num_timings();
}
inline ::google::protobuf::uint32 Stats::num_timings() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.num_timings)
  return num_timings_;
}
inline void Stats::set_num_timings(::google::protobuf::uint32 value) {
  set_has_num_timings();
  num_timings_ = value;
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.num_timings)
}

// optional uint32 avg_time = 5;
inline bool Stats::has_avg_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Stats::set_has_avg_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Stats::clear_has_avg_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Stats::clear_avg_time() {
  avg_time_ = 0u;
  clear_has_avg_time();
}
inline ::google::protobuf::uint32 Stats::avg_time() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.avg_time)
  return avg_time_;
}
inline void Stats::set_avg_time(::google::protobuf::uint32 value) {
  set_has_avg_time();
  avg_time_ = value;
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.avg_time)
}

// optional uint32 min_time = 6;
inline bool Stats::has_min_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Stats::set_has_min_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Stats::clear_has_min_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Stats::clear_min_time() {
  min_time_ = 0u;
  clear_has_min_time();
}
inline ::google::protobuf::uint32 Stats::min_time() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.min_time)
  return min_time_;
}
inline void Stats::set_min_time(::google::protobuf::uint32 value) {
  set_has_min_time();
  min_time_ = value;
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.min_time)
}

// optional uint32 max_time = 7;
inline bool Stats::has_max_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Stats::set_has_max_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Stats::clear_has_max_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Stats::clear_max_time() {
  max_time_ = 0u;
  clear_has_max_time();
}
inline ::google::protobuf::uint32 Stats::max_time() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.max_time)
  return max_time_;
}
inline void Stats::set_max_time(::google::protobuf::uint32 value) {
  set_has_max_time();
  max_time_ = value;
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.max_time)
}

// optional int32 int_value = 8;
inline bool Stats::has_int_value() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Stats::set_has_int_value() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Stats::clear_has_int_value() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Stats::clear_int_value() {
  int_value_ = 0;
  clear_has_int_value();
}
inline ::google::protobuf::int32 Stats::int_value() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.int_value)
  return int_value_;
}
inline void Stats::set_int_value(::google::protobuf::int32 value) {
  set_has_int_value();
  int_value_ = value;
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.int_value)
}

// optional bool boolean_value = 9;
inline bool Stats::has_boolean_value() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Stats::set_has_boolean_value() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Stats::clear_has_boolean_value() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Stats::clear_boolean_value() {
  boolean_value_ = false;
  clear_has_boolean_value();
}
inline bool Stats::boolean_value() const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.boolean_value)
  return boolean_value_;
}
inline void Stats::set_boolean_value(bool value) {
  set_has_boolean_value();
  boolean_value_ = value;
  // @@protoc_insertion_point(field_set:mozc.usage_stats.Stats.boolean_value)
}

// repeated .mozc.usage_stats.Stats.VirtualKeyboardStats virtual_keyboard_stats = 11;
inline int Stats::virtual_keyboard_stats_size() const {
  return virtual_keyboard_stats_.size();
}
inline void Stats::clear_virtual_keyboard_stats() {
  virtual_keyboard_stats_.Clear();
}
inline ::mozc::usage_stats::Stats_VirtualKeyboardStats* Stats::mutable_virtual_keyboard_stats(int index) {
  // @@protoc_insertion_point(field_mutable:mozc.usage_stats.Stats.virtual_keyboard_stats)
  return virtual_keyboard_stats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::mozc::usage_stats::Stats_VirtualKeyboardStats >*
Stats::mutable_virtual_keyboard_stats() {
  // @@protoc_insertion_point(field_mutable_list:mozc.usage_stats.Stats.virtual_keyboard_stats)
  return &virtual_keyboard_stats_;
}
inline const ::mozc::usage_stats::Stats_VirtualKeyboardStats& Stats::virtual_keyboard_stats(int index) const {
  // @@protoc_insertion_point(field_get:mozc.usage_stats.Stats.virtual_keyboard_stats)
  return virtual_keyboard_stats_.Get(index);
}
inline ::mozc::usage_stats::Stats_VirtualKeyboardStats* Stats::add_virtual_keyboard_stats() {
  // @@protoc_insertion_point(field_add:mozc.usage_stats.Stats.virtual_keyboard_stats)
  return virtual_keyboard_stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mozc::usage_stats::Stats_VirtualKeyboardStats >&
Stats::virtual_keyboard_stats() const {
  // @@protoc_insertion_point(field_list:mozc.usage_stats.Stats.virtual_keyboard_stats)
  return virtual_keyboard_stats_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace usage_stats
}  // namespace mozc

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::mozc::usage_stats::Stats_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mozc::usage_stats::Stats_Type>() {
  return ::mozc::usage_stats::Stats_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_usage_5fstats_2fusage_5fstats_2eproto
