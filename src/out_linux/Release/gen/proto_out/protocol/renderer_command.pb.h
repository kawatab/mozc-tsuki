// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/renderer_command.proto

#ifndef PROTOBUF_INCLUDED_protocol_2frenderer_5fcommand_2eproto
#define PROTOBUF_INCLUDED_protocol_2frenderer_5fcommand_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "protocol/commands.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2frenderer_5fcommand_2eproto 

namespace protobuf_protocol_2frenderer_5fcommand_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protocol_2frenderer_5fcommand_2eproto
namespace mozc {
namespace commands {
class RendererCommand;
class RendererCommandDefaultTypeInternal;
extern RendererCommandDefaultTypeInternal _RendererCommand_default_instance_;
class RendererCommand_ApplicationInfo;
class RendererCommand_ApplicationInfoDefaultTypeInternal;
extern RendererCommand_ApplicationInfoDefaultTypeInternal _RendererCommand_ApplicationInfo_default_instance_;
class RendererCommand_CandidateForm;
class RendererCommand_CandidateFormDefaultTypeInternal;
extern RendererCommand_CandidateFormDefaultTypeInternal _RendererCommand_CandidateForm_default_instance_;
class RendererCommand_CaretInfo;
class RendererCommand_CaretInfoDefaultTypeInternal;
extern RendererCommand_CaretInfoDefaultTypeInternal _RendererCommand_CaretInfo_default_instance_;
class RendererCommand_CharacterPosition;
class RendererCommand_CharacterPositionDefaultTypeInternal;
extern RendererCommand_CharacterPositionDefaultTypeInternal _RendererCommand_CharacterPosition_default_instance_;
class RendererCommand_CompositionForm;
class RendererCommand_CompositionFormDefaultTypeInternal;
extern RendererCommand_CompositionFormDefaultTypeInternal _RendererCommand_CompositionForm_default_instance_;
class RendererCommand_IndicatorInfo;
class RendererCommand_IndicatorInfoDefaultTypeInternal;
extern RendererCommand_IndicatorInfoDefaultTypeInternal _RendererCommand_IndicatorInfo_default_instance_;
class RendererCommand_Point;
class RendererCommand_PointDefaultTypeInternal;
extern RendererCommand_PointDefaultTypeInternal _RendererCommand_Point_default_instance_;
class RendererCommand_Rectangle;
class RendererCommand_RectangleDefaultTypeInternal;
extern RendererCommand_RectangleDefaultTypeInternal _RendererCommand_Rectangle_default_instance_;
class RendererCommand_WinLogFont;
class RendererCommand_WinLogFontDefaultTypeInternal;
extern RendererCommand_WinLogFontDefaultTypeInternal _RendererCommand_WinLogFont_default_instance_;
}  // namespace commands
}  // namespace mozc
namespace google {
namespace protobuf {
template<> ::mozc::commands::RendererCommand* Arena::CreateMaybeMessage<::mozc::commands::RendererCommand>(Arena*);
template<> ::mozc::commands::RendererCommand_ApplicationInfo* Arena::CreateMaybeMessage<::mozc::commands::RendererCommand_ApplicationInfo>(Arena*);
template<> ::mozc::commands::RendererCommand_CandidateForm* Arena::CreateMaybeMessage<::mozc::commands::RendererCommand_CandidateForm>(Arena*);
template<> ::mozc::commands::RendererCommand_CaretInfo* Arena::CreateMaybeMessage<::mozc::commands::RendererCommand_CaretInfo>(Arena*);
template<> ::mozc::commands::RendererCommand_CharacterPosition* Arena::CreateMaybeMessage<::mozc::commands::RendererCommand_CharacterPosition>(Arena*);
template<> ::mozc::commands::RendererCommand_CompositionForm* Arena::CreateMaybeMessage<::mozc::commands::RendererCommand_CompositionForm>(Arena*);
template<> ::mozc::commands::RendererCommand_IndicatorInfo* Arena::CreateMaybeMessage<::mozc::commands::RendererCommand_IndicatorInfo>(Arena*);
template<> ::mozc::commands::RendererCommand_Point* Arena::CreateMaybeMessage<::mozc::commands::RendererCommand_Point>(Arena*);
template<> ::mozc::commands::RendererCommand_Rectangle* Arena::CreateMaybeMessage<::mozc::commands::RendererCommand_Rectangle>(Arena*);
template<> ::mozc::commands::RendererCommand_WinLogFont* Arena::CreateMaybeMessage<::mozc::commands::RendererCommand_WinLogFont>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace mozc {
namespace commands {

enum RendererCommand_CompositionForm_Style {
  RendererCommand_CompositionForm_Style_DEFAULT = 0,
  RendererCommand_CompositionForm_Style_RECT = 1,
  RendererCommand_CompositionForm_Style_POINT = 2,
  RendererCommand_CompositionForm_Style_FORCE_POSITION = 32
};
bool RendererCommand_CompositionForm_Style_IsValid(int value);
const RendererCommand_CompositionForm_Style RendererCommand_CompositionForm_Style_Style_MIN = RendererCommand_CompositionForm_Style_DEFAULT;
const RendererCommand_CompositionForm_Style RendererCommand_CompositionForm_Style_Style_MAX = RendererCommand_CompositionForm_Style_FORCE_POSITION;
const int RendererCommand_CompositionForm_Style_Style_ARRAYSIZE = RendererCommand_CompositionForm_Style_Style_MAX + 1;

const ::google::protobuf::EnumDescriptor* RendererCommand_CompositionForm_Style_descriptor();
inline const ::std::string& RendererCommand_CompositionForm_Style_Name(RendererCommand_CompositionForm_Style value) {
  return ::google::protobuf::internal::NameOfEnum(
    RendererCommand_CompositionForm_Style_descriptor(), value);
}
inline bool RendererCommand_CompositionForm_Style_Parse(
    const ::std::string& name, RendererCommand_CompositionForm_Style* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RendererCommand_CompositionForm_Style>(
    RendererCommand_CompositionForm_Style_descriptor(), name, value);
}
enum RendererCommand_CandidateForm_Style {
  RendererCommand_CandidateForm_Style_DEFAULT = 0,
  RendererCommand_CandidateForm_Style_CANDIDATEPOS = 64,
  RendererCommand_CandidateForm_Style_EXCLUDE = 128
};
bool RendererCommand_CandidateForm_Style_IsValid(int value);
const RendererCommand_CandidateForm_Style RendererCommand_CandidateForm_Style_Style_MIN = RendererCommand_CandidateForm_Style_DEFAULT;
const RendererCommand_CandidateForm_Style RendererCommand_CandidateForm_Style_Style_MAX = RendererCommand_CandidateForm_Style_EXCLUDE;
const int RendererCommand_CandidateForm_Style_Style_ARRAYSIZE = RendererCommand_CandidateForm_Style_Style_MAX + 1;

const ::google::protobuf::EnumDescriptor* RendererCommand_CandidateForm_Style_descriptor();
inline const ::std::string& RendererCommand_CandidateForm_Style_Name(RendererCommand_CandidateForm_Style value) {
  return ::google::protobuf::internal::NameOfEnum(
    RendererCommand_CandidateForm_Style_descriptor(), value);
}
inline bool RendererCommand_CandidateForm_Style_Parse(
    const ::std::string& name, RendererCommand_CandidateForm_Style* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RendererCommand_CandidateForm_Style>(
    RendererCommand_CandidateForm_Style_descriptor(), name, value);
}
enum RendererCommand_ApplicationInfo_InputFrameworkType {
  RendererCommand_ApplicationInfo_InputFrameworkType_UNKNOWN_FRAMEWORK = 0,
  RendererCommand_ApplicationInfo_InputFrameworkType_TSF = 1,
  RendererCommand_ApplicationInfo_InputFrameworkType_IMM32 = 2,
  RendererCommand_ApplicationInfo_InputFrameworkType_IMKit = 3,
  RendererCommand_ApplicationInfo_InputFrameworkType_IBus = 4
};
bool RendererCommand_ApplicationInfo_InputFrameworkType_IsValid(int value);
const RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo_InputFrameworkType_InputFrameworkType_MIN = RendererCommand_ApplicationInfo_InputFrameworkType_UNKNOWN_FRAMEWORK;
const RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo_InputFrameworkType_InputFrameworkType_MAX = RendererCommand_ApplicationInfo_InputFrameworkType_IBus;
const int RendererCommand_ApplicationInfo_InputFrameworkType_InputFrameworkType_ARRAYSIZE = RendererCommand_ApplicationInfo_InputFrameworkType_InputFrameworkType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RendererCommand_ApplicationInfo_InputFrameworkType_descriptor();
inline const ::std::string& RendererCommand_ApplicationInfo_InputFrameworkType_Name(RendererCommand_ApplicationInfo_InputFrameworkType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RendererCommand_ApplicationInfo_InputFrameworkType_descriptor(), value);
}
inline bool RendererCommand_ApplicationInfo_InputFrameworkType_Parse(
    const ::std::string& name, RendererCommand_ApplicationInfo_InputFrameworkType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RendererCommand_ApplicationInfo_InputFrameworkType>(
    RendererCommand_ApplicationInfo_InputFrameworkType_descriptor(), name, value);
}
enum RendererCommand_ApplicationInfo_UIVisibility {
  RendererCommand_ApplicationInfo_UIVisibility_ShowUIDefault = 0,
  RendererCommand_ApplicationInfo_UIVisibility_ShowCompositionWindow = 1,
  RendererCommand_ApplicationInfo_UIVisibility_ShowCandidateWindow = 2,
  RendererCommand_ApplicationInfo_UIVisibility_ShowSuggestWindow = 4
};
bool RendererCommand_ApplicationInfo_UIVisibility_IsValid(int value);
const RendererCommand_ApplicationInfo_UIVisibility RendererCommand_ApplicationInfo_UIVisibility_UIVisibility_MIN = RendererCommand_ApplicationInfo_UIVisibility_ShowUIDefault;
const RendererCommand_ApplicationInfo_UIVisibility RendererCommand_ApplicationInfo_UIVisibility_UIVisibility_MAX = RendererCommand_ApplicationInfo_UIVisibility_ShowSuggestWindow;
const int RendererCommand_ApplicationInfo_UIVisibility_UIVisibility_ARRAYSIZE = RendererCommand_ApplicationInfo_UIVisibility_UIVisibility_MAX + 1;

const ::google::protobuf::EnumDescriptor* RendererCommand_ApplicationInfo_UIVisibility_descriptor();
inline const ::std::string& RendererCommand_ApplicationInfo_UIVisibility_Name(RendererCommand_ApplicationInfo_UIVisibility value) {
  return ::google::protobuf::internal::NameOfEnum(
    RendererCommand_ApplicationInfo_UIVisibility_descriptor(), value);
}
inline bool RendererCommand_ApplicationInfo_UIVisibility_Parse(
    const ::std::string& name, RendererCommand_ApplicationInfo_UIVisibility* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RendererCommand_ApplicationInfo_UIVisibility>(
    RendererCommand_ApplicationInfo_UIVisibility_descriptor(), name, value);
}
enum RendererCommand_CommandType {
  RendererCommand_CommandType_NOOP = 0,
  RendererCommand_CommandType_UPDATE = 1,
  RendererCommand_CommandType_SHUTDOWN = 2
};
bool RendererCommand_CommandType_IsValid(int value);
const RendererCommand_CommandType RendererCommand_CommandType_CommandType_MIN = RendererCommand_CommandType_NOOP;
const RendererCommand_CommandType RendererCommand_CommandType_CommandType_MAX = RendererCommand_CommandType_SHUTDOWN;
const int RendererCommand_CommandType_CommandType_ARRAYSIZE = RendererCommand_CommandType_CommandType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RendererCommand_CommandType_descriptor();
inline const ::std::string& RendererCommand_CommandType_Name(RendererCommand_CommandType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RendererCommand_CommandType_descriptor(), value);
}
inline bool RendererCommand_CommandType_Parse(
    const ::std::string& name, RendererCommand_CommandType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RendererCommand_CommandType>(
    RendererCommand_CommandType_descriptor(), name, value);
}
// ===================================================================

class RendererCommand_Rectangle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.commands.RendererCommand.Rectangle) */ {
 public:
  RendererCommand_Rectangle();
  virtual ~RendererCommand_Rectangle();

  RendererCommand_Rectangle(const RendererCommand_Rectangle& from);

  inline RendererCommand_Rectangle& operator=(const RendererCommand_Rectangle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RendererCommand_Rectangle(RendererCommand_Rectangle&& from) noexcept
    : RendererCommand_Rectangle() {
    *this = ::std::move(from);
  }

  inline RendererCommand_Rectangle& operator=(RendererCommand_Rectangle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RendererCommand_Rectangle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RendererCommand_Rectangle* internal_default_instance() {
    return reinterpret_cast<const RendererCommand_Rectangle*>(
               &_RendererCommand_Rectangle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RendererCommand_Rectangle* other);
  friend void swap(RendererCommand_Rectangle& a, RendererCommand_Rectangle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RendererCommand_Rectangle* New() const final {
    return CreateMaybeMessage<RendererCommand_Rectangle>(NULL);
  }

  RendererCommand_Rectangle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RendererCommand_Rectangle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RendererCommand_Rectangle& from);
  void MergeFrom(const RendererCommand_Rectangle& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RendererCommand_Rectangle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 left = 1;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 1;
  ::google::protobuf::int32 left() const;
  void set_left(::google::protobuf::int32 value);

  // optional int32 top = 2;
  bool has_top() const;
  void clear_top();
  static const int kTopFieldNumber = 2;
  ::google::protobuf::int32 top() const;
  void set_top(::google::protobuf::int32 value);

  // optional int32 right = 3;
  bool has_right() const;
  void clear_right();
  static const int kRightFieldNumber = 3;
  ::google::protobuf::int32 right() const;
  void set_right(::google::protobuf::int32 value);

  // optional int32 bottom = 4;
  bool has_bottom() const;
  void clear_bottom();
  static const int kBottomFieldNumber = 4;
  ::google::protobuf::int32 bottom() const;
  void set_bottom(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mozc.commands.RendererCommand.Rectangle)
 private:
  void set_has_left();
  void clear_has_left();
  void set_has_top();
  void clear_has_top();
  void set_has_right();
  void clear_has_right();
  void set_has_bottom();
  void clear_has_bottom();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 left_;
  ::google::protobuf::int32 top_;
  ::google::protobuf::int32 right_;
  ::google::protobuf::int32 bottom_;
  friend struct ::protobuf_protocol_2frenderer_5fcommand_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RendererCommand_Point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.commands.RendererCommand.Point) */ {
 public:
  RendererCommand_Point();
  virtual ~RendererCommand_Point();

  RendererCommand_Point(const RendererCommand_Point& from);

  inline RendererCommand_Point& operator=(const RendererCommand_Point& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RendererCommand_Point(RendererCommand_Point&& from) noexcept
    : RendererCommand_Point() {
    *this = ::std::move(from);
  }

  inline RendererCommand_Point& operator=(RendererCommand_Point&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RendererCommand_Point& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RendererCommand_Point* internal_default_instance() {
    return reinterpret_cast<const RendererCommand_Point*>(
               &_RendererCommand_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RendererCommand_Point* other);
  friend void swap(RendererCommand_Point& a, RendererCommand_Point& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RendererCommand_Point* New() const final {
    return CreateMaybeMessage<RendererCommand_Point>(NULL);
  }

  RendererCommand_Point* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RendererCommand_Point>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RendererCommand_Point& from);
  void MergeFrom(const RendererCommand_Point& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RendererCommand_Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mozc.commands.RendererCommand.Point)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_protocol_2frenderer_5fcommand_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RendererCommand_WinLogFont : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.commands.RendererCommand.WinLogFont) */ {
 public:
  RendererCommand_WinLogFont();
  virtual ~RendererCommand_WinLogFont();

  RendererCommand_WinLogFont(const RendererCommand_WinLogFont& from);

  inline RendererCommand_WinLogFont& operator=(const RendererCommand_WinLogFont& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RendererCommand_WinLogFont(RendererCommand_WinLogFont&& from) noexcept
    : RendererCommand_WinLogFont() {
    *this = ::std::move(from);
  }

  inline RendererCommand_WinLogFont& operator=(RendererCommand_WinLogFont&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RendererCommand_WinLogFont& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RendererCommand_WinLogFont* internal_default_instance() {
    return reinterpret_cast<const RendererCommand_WinLogFont*>(
               &_RendererCommand_WinLogFont_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(RendererCommand_WinLogFont* other);
  friend void swap(RendererCommand_WinLogFont& a, RendererCommand_WinLogFont& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RendererCommand_WinLogFont* New() const final {
    return CreateMaybeMessage<RendererCommand_WinLogFont>(NULL);
  }

  RendererCommand_WinLogFont* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RendererCommand_WinLogFont>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RendererCommand_WinLogFont& from);
  void MergeFrom(const RendererCommand_WinLogFont& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RendererCommand_WinLogFont* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string face_name = 14;
  bool has_face_name() const;
  void clear_face_name();
  static const int kFaceNameFieldNumber = 14;
  const ::std::string& face_name() const;
  void set_face_name(const ::std::string& value);
  #if LANG_CXX11
  void set_face_name(::std::string&& value);
  #endif
  void set_face_name(const char* value);
  void set_face_name(const char* value, size_t size);
  ::std::string* mutable_face_name();
  ::std::string* release_face_name();
  void set_allocated_face_name(::std::string* face_name);

  // optional int32 height = 1 [default = 0];
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 1;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // optional int32 width = 2 [default = 0];
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // optional int32 escapement = 3 [default = 0];
  bool has_escapement() const;
  void clear_escapement();
  static const int kEscapementFieldNumber = 3;
  ::google::protobuf::int32 escapement() const;
  void set_escapement(::google::protobuf::int32 value);

  // optional int32 orientation = 4 [default = 0];
  bool has_orientation() const;
  void clear_orientation();
  static const int kOrientationFieldNumber = 4;
  ::google::protobuf::int32 orientation() const;
  void set_orientation(::google::protobuf::int32 value);

  // optional int32 weight = 5 [default = 0];
  bool has_weight() const;
  void clear_weight();
  static const int kWeightFieldNumber = 5;
  ::google::protobuf::int32 weight() const;
  void set_weight(::google::protobuf::int32 value);

  // optional bool italic = 6 [default = false];
  bool has_italic() const;
  void clear_italic();
  static const int kItalicFieldNumber = 6;
  bool italic() const;
  void set_italic(bool value);

  // optional bool underline = 7 [default = false];
  bool has_underline() const;
  void clear_underline();
  static const int kUnderlineFieldNumber = 7;
  bool underline() const;
  void set_underline(bool value);

  // optional bool strike_out = 8 [default = false];
  bool has_strike_out() const;
  void clear_strike_out();
  static const int kStrikeOutFieldNumber = 8;
  bool strike_out() const;
  void set_strike_out(bool value);

  // optional int32 out_precision = 10 [default = 0];
  bool has_out_precision() const;
  void clear_out_precision();
  static const int kOutPrecisionFieldNumber = 10;
  ::google::protobuf::int32 out_precision() const;
  void set_out_precision(::google::protobuf::int32 value);

  // optional int32 clip_precision = 11 [default = 0];
  bool has_clip_precision() const;
  void clear_clip_precision();
  static const int kClipPrecisionFieldNumber = 11;
  ::google::protobuf::int32 clip_precision() const;
  void set_clip_precision(::google::protobuf::int32 value);

  // optional int32 quality = 12 [default = 0];
  bool has_quality() const;
  void clear_quality();
  static const int kQualityFieldNumber = 12;
  ::google::protobuf::int32 quality() const;
  void set_quality(::google::protobuf::int32 value);

  // optional int32 pitch_and_family = 13 [default = 0];
  bool has_pitch_and_family() const;
  void clear_pitch_and_family();
  static const int kPitchAndFamilyFieldNumber = 13;
  ::google::protobuf::int32 pitch_and_family() const;
  void set_pitch_and_family(::google::protobuf::int32 value);

  // optional int32 char_set = 9 [default = 1];
  bool has_char_set() const;
  void clear_char_set();
  static const int kCharSetFieldNumber = 9;
  ::google::protobuf::int32 char_set() const;
  void set_char_set(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mozc.commands.RendererCommand.WinLogFont)
 private:
  void set_has_height();
  void clear_has_height();
  void set_has_width();
  void clear_has_width();
  void set_has_escapement();
  void clear_has_escapement();
  void set_has_orientation();
  void clear_has_orientation();
  void set_has_weight();
  void clear_has_weight();
  void set_has_italic();
  void clear_has_italic();
  void set_has_underline();
  void clear_has_underline();
  void set_has_strike_out();
  void clear_has_strike_out();
  void set_has_char_set();
  void clear_has_char_set();
  void set_has_out_precision();
  void clear_has_out_precision();
  void set_has_clip_precision();
  void clear_has_clip_precision();
  void set_has_quality();
  void clear_has_quality();
  void set_has_pitch_and_family();
  void clear_has_pitch_and_family();
  void set_has_face_name();
  void clear_has_face_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr face_name_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 escapement_;
  ::google::protobuf::int32 orientation_;
  ::google::protobuf::int32 weight_;
  bool italic_;
  bool underline_;
  bool strike_out_;
  ::google::protobuf::int32 out_precision_;
  ::google::protobuf::int32 clip_precision_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 pitch_and_family_;
  ::google::protobuf::int32 char_set_;
  friend struct ::protobuf_protocol_2frenderer_5fcommand_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RendererCommand_CompositionForm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.commands.RendererCommand.CompositionForm) */ {
 public:
  RendererCommand_CompositionForm();
  virtual ~RendererCommand_CompositionForm();

  RendererCommand_CompositionForm(const RendererCommand_CompositionForm& from);

  inline RendererCommand_CompositionForm& operator=(const RendererCommand_CompositionForm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RendererCommand_CompositionForm(RendererCommand_CompositionForm&& from) noexcept
    : RendererCommand_CompositionForm() {
    *this = ::std::move(from);
  }

  inline RendererCommand_CompositionForm& operator=(RendererCommand_CompositionForm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RendererCommand_CompositionForm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RendererCommand_CompositionForm* internal_default_instance() {
    return reinterpret_cast<const RendererCommand_CompositionForm*>(
               &_RendererCommand_CompositionForm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RendererCommand_CompositionForm* other);
  friend void swap(RendererCommand_CompositionForm& a, RendererCommand_CompositionForm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RendererCommand_CompositionForm* New() const final {
    return CreateMaybeMessage<RendererCommand_CompositionForm>(NULL);
  }

  RendererCommand_CompositionForm* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RendererCommand_CompositionForm>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RendererCommand_CompositionForm& from);
  void MergeFrom(const RendererCommand_CompositionForm& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RendererCommand_CompositionForm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RendererCommand_CompositionForm_Style Style;
  static const Style DEFAULT =
    RendererCommand_CompositionForm_Style_DEFAULT;
  static const Style RECT =
    RendererCommand_CompositionForm_Style_RECT;
  static const Style POINT =
    RendererCommand_CompositionForm_Style_POINT;
  static const Style FORCE_POSITION =
    RendererCommand_CompositionForm_Style_FORCE_POSITION;
  static inline bool Style_IsValid(int value) {
    return RendererCommand_CompositionForm_Style_IsValid(value);
  }
  static const Style Style_MIN =
    RendererCommand_CompositionForm_Style_Style_MIN;
  static const Style Style_MAX =
    RendererCommand_CompositionForm_Style_Style_MAX;
  static const int Style_ARRAYSIZE =
    RendererCommand_CompositionForm_Style_Style_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Style_descriptor() {
    return RendererCommand_CompositionForm_Style_descriptor();
  }
  static inline const ::std::string& Style_Name(Style value) {
    return RendererCommand_CompositionForm_Style_Name(value);
  }
  static inline bool Style_Parse(const ::std::string& name,
      Style* value) {
    return RendererCommand_CompositionForm_Style_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .mozc.commands.RendererCommand.Point current_position = 2;
  bool has_current_position() const;
  void clear_current_position();
  static const int kCurrentPositionFieldNumber = 2;
  private:
  const ::mozc::commands::RendererCommand_Point& _internal_current_position() const;
  public:
  const ::mozc::commands::RendererCommand_Point& current_position() const;
  ::mozc::commands::RendererCommand_Point* release_current_position();
  ::mozc::commands::RendererCommand_Point* mutable_current_position();
  void set_allocated_current_position(::mozc::commands::RendererCommand_Point* current_position);

  // optional .mozc.commands.RendererCommand.Rectangle area = 3;
  bool has_area() const;
  void clear_area();
  static const int kAreaFieldNumber = 3;
  private:
  const ::mozc::commands::RendererCommand_Rectangle& _internal_area() const;
  public:
  const ::mozc::commands::RendererCommand_Rectangle& area() const;
  ::mozc::commands::RendererCommand_Rectangle* release_area();
  ::mozc::commands::RendererCommand_Rectangle* mutable_area();
  void set_allocated_area(::mozc::commands::RendererCommand_Rectangle* area);

  // optional uint32 style_bits = 4 [default = 0];
  bool has_style_bits() const;
  void clear_style_bits();
  static const int kStyleBitsFieldNumber = 4;
  ::google::protobuf::uint32 style_bits() const;
  void set_style_bits(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mozc.commands.RendererCommand.CompositionForm)
 private:
  void set_has_current_position();
  void clear_has_current_position();
  void set_has_area();
  void clear_has_area();
  void set_has_style_bits();
  void clear_has_style_bits();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::mozc::commands::RendererCommand_Point* current_position_;
  ::mozc::commands::RendererCommand_Rectangle* area_;
  ::google::protobuf::uint32 style_bits_;
  friend struct ::protobuf_protocol_2frenderer_5fcommand_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RendererCommand_CandidateForm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.commands.RendererCommand.CandidateForm) */ {
 public:
  RendererCommand_CandidateForm();
  virtual ~RendererCommand_CandidateForm();

  RendererCommand_CandidateForm(const RendererCommand_CandidateForm& from);

  inline RendererCommand_CandidateForm& operator=(const RendererCommand_CandidateForm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RendererCommand_CandidateForm(RendererCommand_CandidateForm&& from) noexcept
    : RendererCommand_CandidateForm() {
    *this = ::std::move(from);
  }

  inline RendererCommand_CandidateForm& operator=(RendererCommand_CandidateForm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RendererCommand_CandidateForm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RendererCommand_CandidateForm* internal_default_instance() {
    return reinterpret_cast<const RendererCommand_CandidateForm*>(
               &_RendererCommand_CandidateForm_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(RendererCommand_CandidateForm* other);
  friend void swap(RendererCommand_CandidateForm& a, RendererCommand_CandidateForm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RendererCommand_CandidateForm* New() const final {
    return CreateMaybeMessage<RendererCommand_CandidateForm>(NULL);
  }

  RendererCommand_CandidateForm* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RendererCommand_CandidateForm>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RendererCommand_CandidateForm& from);
  void MergeFrom(const RendererCommand_CandidateForm& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RendererCommand_CandidateForm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RendererCommand_CandidateForm_Style Style;
  static const Style DEFAULT =
    RendererCommand_CandidateForm_Style_DEFAULT;
  static const Style CANDIDATEPOS =
    RendererCommand_CandidateForm_Style_CANDIDATEPOS;
  static const Style EXCLUDE =
    RendererCommand_CandidateForm_Style_EXCLUDE;
  static inline bool Style_IsValid(int value) {
    return RendererCommand_CandidateForm_Style_IsValid(value);
  }
  static const Style Style_MIN =
    RendererCommand_CandidateForm_Style_Style_MIN;
  static const Style Style_MAX =
    RendererCommand_CandidateForm_Style_Style_MAX;
  static const int Style_ARRAYSIZE =
    RendererCommand_CandidateForm_Style_Style_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Style_descriptor() {
    return RendererCommand_CandidateForm_Style_descriptor();
  }
  static inline const ::std::string& Style_Name(Style value) {
    return RendererCommand_CandidateForm_Style_Name(value);
  }
  static inline bool Style_Parse(const ::std::string& name,
      Style* value) {
    return RendererCommand_CandidateForm_Style_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .mozc.commands.RendererCommand.Point current_position = 2;
  bool has_current_position() const;
  void clear_current_position();
  static const int kCurrentPositionFieldNumber = 2;
  private:
  const ::mozc::commands::RendererCommand_Point& _internal_current_position() const;
  public:
  const ::mozc::commands::RendererCommand_Point& current_position() const;
  ::mozc::commands::RendererCommand_Point* release_current_position();
  ::mozc::commands::RendererCommand_Point* mutable_current_position();
  void set_allocated_current_position(::mozc::commands::RendererCommand_Point* current_position);

  // optional .mozc.commands.RendererCommand.Rectangle area = 3;
  bool has_area() const;
  void clear_area();
  static const int kAreaFieldNumber = 3;
  private:
  const ::mozc::commands::RendererCommand_Rectangle& _internal_area() const;
  public:
  const ::mozc::commands::RendererCommand_Rectangle& area() const;
  ::mozc::commands::RendererCommand_Rectangle* release_area();
  ::mozc::commands::RendererCommand_Rectangle* mutable_area();
  void set_allocated_area(::mozc::commands::RendererCommand_Rectangle* area);

  // optional uint32 style_bits = 4 [default = 0];
  bool has_style_bits() const;
  void clear_style_bits();
  static const int kStyleBitsFieldNumber = 4;
  ::google::protobuf::uint32 style_bits() const;
  void set_style_bits(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mozc.commands.RendererCommand.CandidateForm)
 private:
  void set_has_current_position();
  void clear_has_current_position();
  void set_has_area();
  void clear_has_area();
  void set_has_style_bits();
  void clear_has_style_bits();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::mozc::commands::RendererCommand_Point* current_position_;
  ::mozc::commands::RendererCommand_Rectangle* area_;
  ::google::protobuf::uint32 style_bits_;
  friend struct ::protobuf_protocol_2frenderer_5fcommand_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RendererCommand_CharacterPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.commands.RendererCommand.CharacterPosition) */ {
 public:
  RendererCommand_CharacterPosition();
  virtual ~RendererCommand_CharacterPosition();

  RendererCommand_CharacterPosition(const RendererCommand_CharacterPosition& from);

  inline RendererCommand_CharacterPosition& operator=(const RendererCommand_CharacterPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RendererCommand_CharacterPosition(RendererCommand_CharacterPosition&& from) noexcept
    : RendererCommand_CharacterPosition() {
    *this = ::std::move(from);
  }

  inline RendererCommand_CharacterPosition& operator=(RendererCommand_CharacterPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RendererCommand_CharacterPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RendererCommand_CharacterPosition* internal_default_instance() {
    return reinterpret_cast<const RendererCommand_CharacterPosition*>(
               &_RendererCommand_CharacterPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(RendererCommand_CharacterPosition* other);
  friend void swap(RendererCommand_CharacterPosition& a, RendererCommand_CharacterPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RendererCommand_CharacterPosition* New() const final {
    return CreateMaybeMessage<RendererCommand_CharacterPosition>(NULL);
  }

  RendererCommand_CharacterPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RendererCommand_CharacterPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RendererCommand_CharacterPosition& from);
  void MergeFrom(const RendererCommand_CharacterPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RendererCommand_CharacterPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .mozc.commands.RendererCommand.Point top_left = 2;
  bool has_top_left() const;
  void clear_top_left();
  static const int kTopLeftFieldNumber = 2;
  private:
  const ::mozc::commands::RendererCommand_Point& _internal_top_left() const;
  public:
  const ::mozc::commands::RendererCommand_Point& top_left() const;
  ::mozc::commands::RendererCommand_Point* release_top_left();
  ::mozc::commands::RendererCommand_Point* mutable_top_left();
  void set_allocated_top_left(::mozc::commands::RendererCommand_Point* top_left);

  // optional .mozc.commands.RendererCommand.Rectangle document_area = 4;
  bool has_document_area() const;
  void clear_document_area();
  static const int kDocumentAreaFieldNumber = 4;
  private:
  const ::mozc::commands::RendererCommand_Rectangle& _internal_document_area() const;
  public:
  const ::mozc::commands::RendererCommand_Rectangle& document_area() const;
  ::mozc::commands::RendererCommand_Rectangle* release_document_area();
  ::mozc::commands::RendererCommand_Rectangle* mutable_document_area();
  void set_allocated_document_area(::mozc::commands::RendererCommand_Rectangle* document_area);

  // optional uint32 position = 1;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  ::google::protobuf::uint32 position() const;
  void set_position(::google::protobuf::uint32 value);

  // optional uint32 line_height = 3;
  bool has_line_height() const;
  void clear_line_height();
  static const int kLineHeightFieldNumber = 3;
  ::google::protobuf::uint32 line_height() const;
  void set_line_height(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mozc.commands.RendererCommand.CharacterPosition)
 private:
  void set_has_position();
  void clear_has_position();
  void set_has_top_left();
  void clear_has_top_left();
  void set_has_line_height();
  void clear_has_line_height();
  void set_has_document_area();
  void clear_has_document_area();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::mozc::commands::RendererCommand_Point* top_left_;
  ::mozc::commands::RendererCommand_Rectangle* document_area_;
  ::google::protobuf::uint32 position_;
  ::google::protobuf::uint32 line_height_;
  friend struct ::protobuf_protocol_2frenderer_5fcommand_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RendererCommand_CaretInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.commands.RendererCommand.CaretInfo) */ {
 public:
  RendererCommand_CaretInfo();
  virtual ~RendererCommand_CaretInfo();

  RendererCommand_CaretInfo(const RendererCommand_CaretInfo& from);

  inline RendererCommand_CaretInfo& operator=(const RendererCommand_CaretInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RendererCommand_CaretInfo(RendererCommand_CaretInfo&& from) noexcept
    : RendererCommand_CaretInfo() {
    *this = ::std::move(from);
  }

  inline RendererCommand_CaretInfo& operator=(RendererCommand_CaretInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RendererCommand_CaretInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RendererCommand_CaretInfo* internal_default_instance() {
    return reinterpret_cast<const RendererCommand_CaretInfo*>(
               &_RendererCommand_CaretInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(RendererCommand_CaretInfo* other);
  friend void swap(RendererCommand_CaretInfo& a, RendererCommand_CaretInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RendererCommand_CaretInfo* New() const final {
    return CreateMaybeMessage<RendererCommand_CaretInfo>(NULL);
  }

  RendererCommand_CaretInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RendererCommand_CaretInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RendererCommand_CaretInfo& from);
  void MergeFrom(const RendererCommand_CaretInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RendererCommand_CaretInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .mozc.commands.RendererCommand.Rectangle caret_rect = 2;
  bool has_caret_rect() const;
  void clear_caret_rect();
  static const int kCaretRectFieldNumber = 2;
  private:
  const ::mozc::commands::RendererCommand_Rectangle& _internal_caret_rect() const;
  public:
  const ::mozc::commands::RendererCommand_Rectangle& caret_rect() const;
  ::mozc::commands::RendererCommand_Rectangle* release_caret_rect();
  ::mozc::commands::RendererCommand_Rectangle* mutable_caret_rect();
  void set_allocated_caret_rect(::mozc::commands::RendererCommand_Rectangle* caret_rect);

  // optional bool blinking = 1 [default = false];
  bool has_blinking() const;
  void clear_blinking();
  static const int kBlinkingFieldNumber = 1;
  bool blinking() const;
  void set_blinking(bool value);

  // optional uint32 target_window_handle = 3;
  bool has_target_window_handle() const;
  void clear_target_window_handle();
  static const int kTargetWindowHandleFieldNumber = 3;
  ::google::protobuf::uint32 target_window_handle() const;
  void set_target_window_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mozc.commands.RendererCommand.CaretInfo)
 private:
  void set_has_blinking();
  void clear_has_blinking();
  void set_has_caret_rect();
  void clear_has_caret_rect();
  void set_has_target_window_handle();
  void clear_has_target_window_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::mozc::commands::RendererCommand_Rectangle* caret_rect_;
  bool blinking_;
  ::google::protobuf::uint32 target_window_handle_;
  friend struct ::protobuf_protocol_2frenderer_5fcommand_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RendererCommand_IndicatorInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.commands.RendererCommand.IndicatorInfo) */ {
 public:
  RendererCommand_IndicatorInfo();
  virtual ~RendererCommand_IndicatorInfo();

  RendererCommand_IndicatorInfo(const RendererCommand_IndicatorInfo& from);

  inline RendererCommand_IndicatorInfo& operator=(const RendererCommand_IndicatorInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RendererCommand_IndicatorInfo(RendererCommand_IndicatorInfo&& from) noexcept
    : RendererCommand_IndicatorInfo() {
    *this = ::std::move(from);
  }

  inline RendererCommand_IndicatorInfo& operator=(RendererCommand_IndicatorInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RendererCommand_IndicatorInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RendererCommand_IndicatorInfo* internal_default_instance() {
    return reinterpret_cast<const RendererCommand_IndicatorInfo*>(
               &_RendererCommand_IndicatorInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(RendererCommand_IndicatorInfo* other);
  friend void swap(RendererCommand_IndicatorInfo& a, RendererCommand_IndicatorInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RendererCommand_IndicatorInfo* New() const final {
    return CreateMaybeMessage<RendererCommand_IndicatorInfo>(NULL);
  }

  RendererCommand_IndicatorInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RendererCommand_IndicatorInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RendererCommand_IndicatorInfo& from);
  void MergeFrom(const RendererCommand_IndicatorInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RendererCommand_IndicatorInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .mozc.commands.Status status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  private:
  const ::mozc::commands::Status& _internal_status() const;
  public:
  const ::mozc::commands::Status& status() const;
  ::mozc::commands::Status* release_status();
  ::mozc::commands::Status* mutable_status();
  void set_allocated_status(::mozc::commands::Status* status);

  // @@protoc_insertion_point(class_scope:mozc.commands.RendererCommand.IndicatorInfo)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::mozc::commands::Status* status_;
  friend struct ::protobuf_protocol_2frenderer_5fcommand_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RendererCommand_ApplicationInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.commands.RendererCommand.ApplicationInfo) */ {
 public:
  RendererCommand_ApplicationInfo();
  virtual ~RendererCommand_ApplicationInfo();

  RendererCommand_ApplicationInfo(const RendererCommand_ApplicationInfo& from);

  inline RendererCommand_ApplicationInfo& operator=(const RendererCommand_ApplicationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RendererCommand_ApplicationInfo(RendererCommand_ApplicationInfo&& from) noexcept
    : RendererCommand_ApplicationInfo() {
    *this = ::std::move(from);
  }

  inline RendererCommand_ApplicationInfo& operator=(RendererCommand_ApplicationInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RendererCommand_ApplicationInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RendererCommand_ApplicationInfo* internal_default_instance() {
    return reinterpret_cast<const RendererCommand_ApplicationInfo*>(
               &_RendererCommand_ApplicationInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(RendererCommand_ApplicationInfo* other);
  friend void swap(RendererCommand_ApplicationInfo& a, RendererCommand_ApplicationInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RendererCommand_ApplicationInfo* New() const final {
    return CreateMaybeMessage<RendererCommand_ApplicationInfo>(NULL);
  }

  RendererCommand_ApplicationInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RendererCommand_ApplicationInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RendererCommand_ApplicationInfo& from);
  void MergeFrom(const RendererCommand_ApplicationInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RendererCommand_ApplicationInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RendererCommand_ApplicationInfo_InputFrameworkType InputFrameworkType;
  static const InputFrameworkType UNKNOWN_FRAMEWORK =
    RendererCommand_ApplicationInfo_InputFrameworkType_UNKNOWN_FRAMEWORK;
  static const InputFrameworkType TSF =
    RendererCommand_ApplicationInfo_InputFrameworkType_TSF;
  static const InputFrameworkType IMM32 =
    RendererCommand_ApplicationInfo_InputFrameworkType_IMM32;
  static const InputFrameworkType IMKit =
    RendererCommand_ApplicationInfo_InputFrameworkType_IMKit;
  static const InputFrameworkType IBus =
    RendererCommand_ApplicationInfo_InputFrameworkType_IBus;
  static inline bool InputFrameworkType_IsValid(int value) {
    return RendererCommand_ApplicationInfo_InputFrameworkType_IsValid(value);
  }
  static const InputFrameworkType InputFrameworkType_MIN =
    RendererCommand_ApplicationInfo_InputFrameworkType_InputFrameworkType_MIN;
  static const InputFrameworkType InputFrameworkType_MAX =
    RendererCommand_ApplicationInfo_InputFrameworkType_InputFrameworkType_MAX;
  static const int InputFrameworkType_ARRAYSIZE =
    RendererCommand_ApplicationInfo_InputFrameworkType_InputFrameworkType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  InputFrameworkType_descriptor() {
    return RendererCommand_ApplicationInfo_InputFrameworkType_descriptor();
  }
  static inline const ::std::string& InputFrameworkType_Name(InputFrameworkType value) {
    return RendererCommand_ApplicationInfo_InputFrameworkType_Name(value);
  }
  static inline bool InputFrameworkType_Parse(const ::std::string& name,
      InputFrameworkType* value) {
    return RendererCommand_ApplicationInfo_InputFrameworkType_Parse(name, value);
  }

  typedef RendererCommand_ApplicationInfo_UIVisibility UIVisibility;
  static const UIVisibility ShowUIDefault =
    RendererCommand_ApplicationInfo_UIVisibility_ShowUIDefault;
  static const UIVisibility ShowCompositionWindow =
    RendererCommand_ApplicationInfo_UIVisibility_ShowCompositionWindow;
  static const UIVisibility ShowCandidateWindow =
    RendererCommand_ApplicationInfo_UIVisibility_ShowCandidateWindow;
  static const UIVisibility ShowSuggestWindow =
    RendererCommand_ApplicationInfo_UIVisibility_ShowSuggestWindow;
  static inline bool UIVisibility_IsValid(int value) {
    return RendererCommand_ApplicationInfo_UIVisibility_IsValid(value);
  }
  static const UIVisibility UIVisibility_MIN =
    RendererCommand_ApplicationInfo_UIVisibility_UIVisibility_MIN;
  static const UIVisibility UIVisibility_MAX =
    RendererCommand_ApplicationInfo_UIVisibility_UIVisibility_MAX;
  static const int UIVisibility_ARRAYSIZE =
    RendererCommand_ApplicationInfo_UIVisibility_UIVisibility_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  UIVisibility_descriptor() {
    return RendererCommand_ApplicationInfo_UIVisibility_descriptor();
  }
  static inline const ::std::string& UIVisibility_Name(UIVisibility value) {
    return RendererCommand_ApplicationInfo_UIVisibility_Name(value);
  }
  static inline bool UIVisibility_Parse(const ::std::string& name,
      UIVisibility* value) {
    return RendererCommand_ApplicationInfo_UIVisibility_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string pango_font_description = 13;
  bool has_pango_font_description() const;
  void clear_pango_font_description();
  static const int kPangoFontDescriptionFieldNumber = 13;
  const ::std::string& pango_font_description() const;
  void set_pango_font_description(const ::std::string& value);
  #if LANG_CXX11
  void set_pango_font_description(::std::string&& value);
  #endif
  void set_pango_font_description(const char* value);
  void set_pango_font_description(const char* value, size_t size);
  ::std::string* mutable_pango_font_description();
  ::std::string* release_pango_font_description();
  void set_allocated_pango_font_description(::std::string* pango_font_description);

  // optional .mozc.commands.RendererCommand.WinLogFont composition_font = 5;
  bool has_composition_font() const;
  void clear_composition_font();
  static const int kCompositionFontFieldNumber = 5;
  private:
  const ::mozc::commands::RendererCommand_WinLogFont& _internal_composition_font() const;
  public:
  const ::mozc::commands::RendererCommand_WinLogFont& composition_font() const;
  ::mozc::commands::RendererCommand_WinLogFont* release_composition_font();
  ::mozc::commands::RendererCommand_WinLogFont* mutable_composition_font();
  void set_allocated_composition_font(::mozc::commands::RendererCommand_WinLogFont* composition_font);

  // optional .mozc.commands.RendererCommand.CompositionForm composition_form = 7;
  bool has_composition_form() const;
  void clear_composition_form();
  static const int kCompositionFormFieldNumber = 7;
  private:
  const ::mozc::commands::RendererCommand_CompositionForm& _internal_composition_form() const;
  public:
  const ::mozc::commands::RendererCommand_CompositionForm& composition_form() const;
  ::mozc::commands::RendererCommand_CompositionForm* release_composition_form();
  ::mozc::commands::RendererCommand_CompositionForm* mutable_composition_form();
  void set_allocated_composition_form(::mozc::commands::RendererCommand_CompositionForm* composition_form);

  // optional .mozc.commands.RendererCommand.CandidateForm candidate_form = 8;
  bool has_candidate_form() const;
  void clear_candidate_form();
  static const int kCandidateFormFieldNumber = 8;
  private:
  const ::mozc::commands::RendererCommand_CandidateForm& _internal_candidate_form() const;
  public:
  const ::mozc::commands::RendererCommand_CandidateForm& candidate_form() const;
  ::mozc::commands::RendererCommand_CandidateForm* release_candidate_form();
  ::mozc::commands::RendererCommand_CandidateForm* mutable_candidate_form();
  void set_allocated_candidate_form(::mozc::commands::RendererCommand_CandidateForm* candidate_form);

  // optional .mozc.commands.RendererCommand.CharacterPosition composition_target = 10;
  bool has_composition_target() const;
  void clear_composition_target();
  static const int kCompositionTargetFieldNumber = 10;
  private:
  const ::mozc::commands::RendererCommand_CharacterPosition& _internal_composition_target() const;
  public:
  const ::mozc::commands::RendererCommand_CharacterPosition& composition_target() const;
  ::mozc::commands::RendererCommand_CharacterPosition* release_composition_target();
  ::mozc::commands::RendererCommand_CharacterPosition* mutable_composition_target();
  void set_allocated_composition_target(::mozc::commands::RendererCommand_CharacterPosition* composition_target);

  // optional .mozc.commands.RendererCommand.CaretInfo caret_info = 11;
  bool has_caret_info() const;
  void clear_caret_info();
  static const int kCaretInfoFieldNumber = 11;
  private:
  const ::mozc::commands::RendererCommand_CaretInfo& _internal_caret_info() const;
  public:
  const ::mozc::commands::RendererCommand_CaretInfo& caret_info() const;
  ::mozc::commands::RendererCommand_CaretInfo* release_caret_info();
  ::mozc::commands::RendererCommand_CaretInfo* mutable_caret_info();
  void set_allocated_caret_info(::mozc::commands::RendererCommand_CaretInfo* caret_info);

  // optional .mozc.commands.RendererCommand.IndicatorInfo indicator_info = 14;
  bool has_indicator_info() const;
  void clear_indicator_info();
  static const int kIndicatorInfoFieldNumber = 14;
  private:
  const ::mozc::commands::RendererCommand_IndicatorInfo& _internal_indicator_info() const;
  public:
  const ::mozc::commands::RendererCommand_IndicatorInfo& indicator_info() const;
  ::mozc::commands::RendererCommand_IndicatorInfo* release_indicator_info();
  ::mozc::commands::RendererCommand_IndicatorInfo* mutable_indicator_info();
  void set_allocated_indicator_info(::mozc::commands::RendererCommand_IndicatorInfo* indicator_info);

  // optional uint32 process_id = 1;
  bool has_process_id() const;
  void clear_process_id();
  static const int kProcessIdFieldNumber = 1;
  ::google::protobuf::uint32 process_id() const;
  void set_process_id(::google::protobuf::uint32 value);

  // optional uint32 thread_id = 2;
  bool has_thread_id() const;
  void clear_thread_id();
  static const int kThreadIdFieldNumber = 2;
  ::google::protobuf::uint32 thread_id() const;
  void set_thread_id(::google::protobuf::uint32 value);

  // optional uint32 receiver_handle = 3;
  bool has_receiver_handle() const;
  void clear_receiver_handle();
  static const int kReceiverHandleFieldNumber = 3;
  ::google::protobuf::uint32 receiver_handle() const;
  void set_receiver_handle(::google::protobuf::uint32 value);

  // optional uint32 target_window_handle = 4;
  bool has_target_window_handle() const;
  void clear_target_window_handle();
  static const int kTargetWindowHandleFieldNumber = 4;
  ::google::protobuf::uint32 target_window_handle() const;
  void set_target_window_handle(::google::protobuf::uint32 value);

  // optional .mozc.commands.RendererCommand.ApplicationInfo.InputFrameworkType input_framework = 6 [default = UNKNOWN_FRAMEWORK];
  bool has_input_framework() const;
  void clear_input_framework();
  static const int kInputFrameworkFieldNumber = 6;
  ::mozc::commands::RendererCommand_ApplicationInfo_InputFrameworkType input_framework() const;
  void set_input_framework(::mozc::commands::RendererCommand_ApplicationInfo_InputFrameworkType value);

  // optional int32 ui_visibilities = 9 [default = 0];
  bool has_ui_visibilities() const;
  void clear_ui_visibilities();
  static const int kUiVisibilitiesFieldNumber = 9;
  ::google::protobuf::int32 ui_visibilities() const;
  void set_ui_visibilities(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mozc.commands.RendererCommand.ApplicationInfo)
 private:
  void set_has_process_id();
  void clear_has_process_id();
  void set_has_thread_id();
  void clear_has_thread_id();
  void set_has_receiver_handle();
  void clear_has_receiver_handle();
  void set_has_target_window_handle();
  void clear_has_target_window_handle();
  void set_has_composition_font();
  void clear_has_composition_font();
  void set_has_input_framework();
  void clear_has_input_framework();
  void set_has_composition_form();
  void clear_has_composition_form();
  void set_has_candidate_form();
  void clear_has_candidate_form();
  void set_has_ui_visibilities();
  void clear_has_ui_visibilities();
  void set_has_composition_target();
  void clear_has_composition_target();
  void set_has_caret_info();
  void clear_has_caret_info();
  void set_has_pango_font_description();
  void clear_has_pango_font_description();
  void set_has_indicator_info();
  void clear_has_indicator_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pango_font_description_;
  ::mozc::commands::RendererCommand_WinLogFont* composition_font_;
  ::mozc::commands::RendererCommand_CompositionForm* composition_form_;
  ::mozc::commands::RendererCommand_CandidateForm* candidate_form_;
  ::mozc::commands::RendererCommand_CharacterPosition* composition_target_;
  ::mozc::commands::RendererCommand_CaretInfo* caret_info_;
  ::mozc::commands::RendererCommand_IndicatorInfo* indicator_info_;
  ::google::protobuf::uint32 process_id_;
  ::google::protobuf::uint32 thread_id_;
  ::google::protobuf::uint32 receiver_handle_;
  ::google::protobuf::uint32 target_window_handle_;
  int input_framework_;
  ::google::protobuf::int32 ui_visibilities_;
  friend struct ::protobuf_protocol_2frenderer_5fcommand_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RendererCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mozc.commands.RendererCommand) */ {
 public:
  RendererCommand();
  virtual ~RendererCommand();

  RendererCommand(const RendererCommand& from);

  inline RendererCommand& operator=(const RendererCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RendererCommand(RendererCommand&& from) noexcept
    : RendererCommand() {
    *this = ::std::move(from);
  }

  inline RendererCommand& operator=(RendererCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RendererCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RendererCommand* internal_default_instance() {
    return reinterpret_cast<const RendererCommand*>(
               &_RendererCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(RendererCommand* other);
  friend void swap(RendererCommand& a, RendererCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RendererCommand* New() const final {
    return CreateMaybeMessage<RendererCommand>(NULL);
  }

  RendererCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RendererCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RendererCommand& from);
  void MergeFrom(const RendererCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RendererCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RendererCommand_Rectangle Rectangle;
  typedef RendererCommand_Point Point;
  typedef RendererCommand_WinLogFont WinLogFont;
  typedef RendererCommand_CompositionForm CompositionForm;
  typedef RendererCommand_CandidateForm CandidateForm;
  typedef RendererCommand_CharacterPosition CharacterPosition;
  typedef RendererCommand_CaretInfo CaretInfo;
  typedef RendererCommand_IndicatorInfo IndicatorInfo;
  typedef RendererCommand_ApplicationInfo ApplicationInfo;

  typedef RendererCommand_CommandType CommandType;
  static const CommandType NOOP =
    RendererCommand_CommandType_NOOP;
  static const CommandType UPDATE =
    RendererCommand_CommandType_UPDATE;
  static const CommandType SHUTDOWN =
    RendererCommand_CommandType_SHUTDOWN;
  static inline bool CommandType_IsValid(int value) {
    return RendererCommand_CommandType_IsValid(value);
  }
  static const CommandType CommandType_MIN =
    RendererCommand_CommandType_CommandType_MIN;
  static const CommandType CommandType_MAX =
    RendererCommand_CommandType_CommandType_MAX;
  static const int CommandType_ARRAYSIZE =
    RendererCommand_CommandType_CommandType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CommandType_descriptor() {
    return RendererCommand_CommandType_descriptor();
  }
  static inline const ::std::string& CommandType_Name(CommandType value) {
    return RendererCommand_CommandType_Name(value);
  }
  static inline bool CommandType_Parse(const ::std::string& name,
      CommandType* value) {
    return RendererCommand_CommandType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .mozc.commands.Output output = 3;
  bool has_output() const;
  void clear_output();
  static const int kOutputFieldNumber = 3;
  private:
  const ::mozc::commands::Output& _internal_output() const;
  public:
  const ::mozc::commands::Output& output() const;
  ::mozc::commands::Output* release_output();
  ::mozc::commands::Output* mutable_output();
  void set_allocated_output(::mozc::commands::Output* output);

  // optional .mozc.commands.RendererCommand.Rectangle preedit_rectangle = 4;
  bool has_preedit_rectangle() const;
  void clear_preedit_rectangle();
  static const int kPreeditRectangleFieldNumber = 4;
  private:
  const ::mozc::commands::RendererCommand_Rectangle& _internal_preedit_rectangle() const;
  public:
  const ::mozc::commands::RendererCommand_Rectangle& preedit_rectangle() const;
  ::mozc::commands::RendererCommand_Rectangle* release_preedit_rectangle();
  ::mozc::commands::RendererCommand_Rectangle* mutable_preedit_rectangle();
  void set_allocated_preedit_rectangle(::mozc::commands::RendererCommand_Rectangle* preedit_rectangle);

  // optional .mozc.commands.RendererCommand.ApplicationInfo application_info = 5;
  bool has_application_info() const;
  void clear_application_info();
  static const int kApplicationInfoFieldNumber = 5;
  private:
  const ::mozc::commands::RendererCommand_ApplicationInfo& _internal_application_info() const;
  public:
  const ::mozc::commands::RendererCommand_ApplicationInfo& application_info() const;
  ::mozc::commands::RendererCommand_ApplicationInfo* release_application_info();
  ::mozc::commands::RendererCommand_ApplicationInfo* mutable_application_info();
  void set_allocated_application_info(::mozc::commands::RendererCommand_ApplicationInfo* application_info);

  // optional .mozc.commands.RendererCommand.CommandType type = 1 [default = NOOP];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::mozc::commands::RendererCommand_CommandType type() const;
  void set_type(::mozc::commands::RendererCommand_CommandType value);

  // optional bool visible = 2 [default = false];
  bool has_visible() const;
  void clear_visible();
  static const int kVisibleFieldNumber = 2;
  bool visible() const;
  void set_visible(bool value);

  // @@protoc_insertion_point(class_scope:mozc.commands.RendererCommand)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_visible();
  void clear_has_visible();
  void set_has_output();
  void clear_has_output();
  void set_has_preedit_rectangle();
  void clear_has_preedit_rectangle();
  void set_has_application_info();
  void clear_has_application_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::mozc::commands::Output* output_;
  ::mozc::commands::RendererCommand_Rectangle* preedit_rectangle_;
  ::mozc::commands::RendererCommand_ApplicationInfo* application_info_;
  int type_;
  bool visible_;
  friend struct ::protobuf_protocol_2frenderer_5fcommand_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RendererCommand_Rectangle

// optional int32 left = 1;
inline bool RendererCommand_Rectangle::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RendererCommand_Rectangle::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RendererCommand_Rectangle::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RendererCommand_Rectangle::clear_left() {
  left_ = 0;
  clear_has_left();
}
inline ::google::protobuf::int32 RendererCommand_Rectangle::left() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.Rectangle.left)
  return left_;
}
inline void RendererCommand_Rectangle::set_left(::google::protobuf::int32 value) {
  set_has_left();
  left_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.Rectangle.left)
}

// optional int32 top = 2;
inline bool RendererCommand_Rectangle::has_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RendererCommand_Rectangle::set_has_top() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RendererCommand_Rectangle::clear_has_top() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RendererCommand_Rectangle::clear_top() {
  top_ = 0;
  clear_has_top();
}
inline ::google::protobuf::int32 RendererCommand_Rectangle::top() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.Rectangle.top)
  return top_;
}
inline void RendererCommand_Rectangle::set_top(::google::protobuf::int32 value) {
  set_has_top();
  top_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.Rectangle.top)
}

// optional int32 right = 3;
inline bool RendererCommand_Rectangle::has_right() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RendererCommand_Rectangle::set_has_right() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RendererCommand_Rectangle::clear_has_right() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RendererCommand_Rectangle::clear_right() {
  right_ = 0;
  clear_has_right();
}
inline ::google::protobuf::int32 RendererCommand_Rectangle::right() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.Rectangle.right)
  return right_;
}
inline void RendererCommand_Rectangle::set_right(::google::protobuf::int32 value) {
  set_has_right();
  right_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.Rectangle.right)
}

// optional int32 bottom = 4;
inline bool RendererCommand_Rectangle::has_bottom() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RendererCommand_Rectangle::set_has_bottom() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RendererCommand_Rectangle::clear_has_bottom() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RendererCommand_Rectangle::clear_bottom() {
  bottom_ = 0;
  clear_has_bottom();
}
inline ::google::protobuf::int32 RendererCommand_Rectangle::bottom() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.Rectangle.bottom)
  return bottom_;
}
inline void RendererCommand_Rectangle::set_bottom(::google::protobuf::int32 value) {
  set_has_bottom();
  bottom_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.Rectangle.bottom)
}

// -------------------------------------------------------------------

// RendererCommand_Point

// optional int32 x = 1;
inline bool RendererCommand_Point::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RendererCommand_Point::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RendererCommand_Point::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RendererCommand_Point::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 RendererCommand_Point::x() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.Point.x)
  return x_;
}
inline void RendererCommand_Point::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.Point.x)
}

// optional int32 y = 2;
inline bool RendererCommand_Point::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RendererCommand_Point::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RendererCommand_Point::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RendererCommand_Point::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 RendererCommand_Point::y() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.Point.y)
  return y_;
}
inline void RendererCommand_Point::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.Point.y)
}

// -------------------------------------------------------------------

// RendererCommand_WinLogFont

// optional int32 height = 1 [default = 0];
inline bool RendererCommand_WinLogFont::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RendererCommand_WinLogFont::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RendererCommand_WinLogFont::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RendererCommand_WinLogFont::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 RendererCommand_WinLogFont::height() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.WinLogFont.height)
  return height_;
}
inline void RendererCommand_WinLogFont::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.WinLogFont.height)
}

// optional int32 width = 2 [default = 0];
inline bool RendererCommand_WinLogFont::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RendererCommand_WinLogFont::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RendererCommand_WinLogFont::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RendererCommand_WinLogFont::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 RendererCommand_WinLogFont::width() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.WinLogFont.width)
  return width_;
}
inline void RendererCommand_WinLogFont::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.WinLogFont.width)
}

// optional int32 escapement = 3 [default = 0];
inline bool RendererCommand_WinLogFont::has_escapement() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RendererCommand_WinLogFont::set_has_escapement() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RendererCommand_WinLogFont::clear_has_escapement() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RendererCommand_WinLogFont::clear_escapement() {
  escapement_ = 0;
  clear_has_escapement();
}
inline ::google::protobuf::int32 RendererCommand_WinLogFont::escapement() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.WinLogFont.escapement)
  return escapement_;
}
inline void RendererCommand_WinLogFont::set_escapement(::google::protobuf::int32 value) {
  set_has_escapement();
  escapement_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.WinLogFont.escapement)
}

// optional int32 orientation = 4 [default = 0];
inline bool RendererCommand_WinLogFont::has_orientation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RendererCommand_WinLogFont::set_has_orientation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RendererCommand_WinLogFont::clear_has_orientation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RendererCommand_WinLogFont::clear_orientation() {
  orientation_ = 0;
  clear_has_orientation();
}
inline ::google::protobuf::int32 RendererCommand_WinLogFont::orientation() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.WinLogFont.orientation)
  return orientation_;
}
inline void RendererCommand_WinLogFont::set_orientation(::google::protobuf::int32 value) {
  set_has_orientation();
  orientation_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.WinLogFont.orientation)
}

// optional int32 weight = 5 [default = 0];
inline bool RendererCommand_WinLogFont::has_weight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RendererCommand_WinLogFont::set_has_weight() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RendererCommand_WinLogFont::clear_has_weight() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RendererCommand_WinLogFont::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline ::google::protobuf::int32 RendererCommand_WinLogFont::weight() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.WinLogFont.weight)
  return weight_;
}
inline void RendererCommand_WinLogFont::set_weight(::google::protobuf::int32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.WinLogFont.weight)
}

// optional bool italic = 6 [default = false];
inline bool RendererCommand_WinLogFont::has_italic() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RendererCommand_WinLogFont::set_has_italic() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RendererCommand_WinLogFont::clear_has_italic() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RendererCommand_WinLogFont::clear_italic() {
  italic_ = false;
  clear_has_italic();
}
inline bool RendererCommand_WinLogFont::italic() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.WinLogFont.italic)
  return italic_;
}
inline void RendererCommand_WinLogFont::set_italic(bool value) {
  set_has_italic();
  italic_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.WinLogFont.italic)
}

// optional bool underline = 7 [default = false];
inline bool RendererCommand_WinLogFont::has_underline() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RendererCommand_WinLogFont::set_has_underline() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RendererCommand_WinLogFont::clear_has_underline() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RendererCommand_WinLogFont::clear_underline() {
  underline_ = false;
  clear_has_underline();
}
inline bool RendererCommand_WinLogFont::underline() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.WinLogFont.underline)
  return underline_;
}
inline void RendererCommand_WinLogFont::set_underline(bool value) {
  set_has_underline();
  underline_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.WinLogFont.underline)
}

// optional bool strike_out = 8 [default = false];
inline bool RendererCommand_WinLogFont::has_strike_out() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RendererCommand_WinLogFont::set_has_strike_out() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RendererCommand_WinLogFont::clear_has_strike_out() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RendererCommand_WinLogFont::clear_strike_out() {
  strike_out_ = false;
  clear_has_strike_out();
}
inline bool RendererCommand_WinLogFont::strike_out() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.WinLogFont.strike_out)
  return strike_out_;
}
inline void RendererCommand_WinLogFont::set_strike_out(bool value) {
  set_has_strike_out();
  strike_out_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.WinLogFont.strike_out)
}

// optional int32 char_set = 9 [default = 1];
inline bool RendererCommand_WinLogFont::has_char_set() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RendererCommand_WinLogFont::set_has_char_set() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RendererCommand_WinLogFont::clear_has_char_set() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RendererCommand_WinLogFont::clear_char_set() {
  char_set_ = 1;
  clear_has_char_set();
}
inline ::google::protobuf::int32 RendererCommand_WinLogFont::char_set() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.WinLogFont.char_set)
  return char_set_;
}
inline void RendererCommand_WinLogFont::set_char_set(::google::protobuf::int32 value) {
  set_has_char_set();
  char_set_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.WinLogFont.char_set)
}

// optional int32 out_precision = 10 [default = 0];
inline bool RendererCommand_WinLogFont::has_out_precision() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RendererCommand_WinLogFont::set_has_out_precision() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RendererCommand_WinLogFont::clear_has_out_precision() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RendererCommand_WinLogFont::clear_out_precision() {
  out_precision_ = 0;
  clear_has_out_precision();
}
inline ::google::protobuf::int32 RendererCommand_WinLogFont::out_precision() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.WinLogFont.out_precision)
  return out_precision_;
}
inline void RendererCommand_WinLogFont::set_out_precision(::google::protobuf::int32 value) {
  set_has_out_precision();
  out_precision_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.WinLogFont.out_precision)
}

// optional int32 clip_precision = 11 [default = 0];
inline bool RendererCommand_WinLogFont::has_clip_precision() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RendererCommand_WinLogFont::set_has_clip_precision() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RendererCommand_WinLogFont::clear_has_clip_precision() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RendererCommand_WinLogFont::clear_clip_precision() {
  clip_precision_ = 0;
  clear_has_clip_precision();
}
inline ::google::protobuf::int32 RendererCommand_WinLogFont::clip_precision() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.WinLogFont.clip_precision)
  return clip_precision_;
}
inline void RendererCommand_WinLogFont::set_clip_precision(::google::protobuf::int32 value) {
  set_has_clip_precision();
  clip_precision_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.WinLogFont.clip_precision)
}

// optional int32 quality = 12 [default = 0];
inline bool RendererCommand_WinLogFont::has_quality() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RendererCommand_WinLogFont::set_has_quality() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RendererCommand_WinLogFont::clear_has_quality() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RendererCommand_WinLogFont::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 RendererCommand_WinLogFont::quality() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.WinLogFont.quality)
  return quality_;
}
inline void RendererCommand_WinLogFont::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.WinLogFont.quality)
}

// optional int32 pitch_and_family = 13 [default = 0];
inline bool RendererCommand_WinLogFont::has_pitch_and_family() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RendererCommand_WinLogFont::set_has_pitch_and_family() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RendererCommand_WinLogFont::clear_has_pitch_and_family() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RendererCommand_WinLogFont::clear_pitch_and_family() {
  pitch_and_family_ = 0;
  clear_has_pitch_and_family();
}
inline ::google::protobuf::int32 RendererCommand_WinLogFont::pitch_and_family() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.WinLogFont.pitch_and_family)
  return pitch_and_family_;
}
inline void RendererCommand_WinLogFont::set_pitch_and_family(::google::protobuf::int32 value) {
  set_has_pitch_and_family();
  pitch_and_family_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.WinLogFont.pitch_and_family)
}

// optional string face_name = 14;
inline bool RendererCommand_WinLogFont::has_face_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RendererCommand_WinLogFont::set_has_face_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RendererCommand_WinLogFont::clear_has_face_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RendererCommand_WinLogFont::clear_face_name() {
  face_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_face_name();
}
inline const ::std::string& RendererCommand_WinLogFont::face_name() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.WinLogFont.face_name)
  return face_name_.GetNoArena();
}
inline void RendererCommand_WinLogFont::set_face_name(const ::std::string& value) {
  set_has_face_name();
  face_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.WinLogFont.face_name)
}
#if LANG_CXX11
inline void RendererCommand_WinLogFont::set_face_name(::std::string&& value) {
  set_has_face_name();
  face_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mozc.commands.RendererCommand.WinLogFont.face_name)
}
#endif
inline void RendererCommand_WinLogFont::set_face_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_face_name();
  face_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mozc.commands.RendererCommand.WinLogFont.face_name)
}
inline void RendererCommand_WinLogFont::set_face_name(const char* value, size_t size) {
  set_has_face_name();
  face_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mozc.commands.RendererCommand.WinLogFont.face_name)
}
inline ::std::string* RendererCommand_WinLogFont::mutable_face_name() {
  set_has_face_name();
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.WinLogFont.face_name)
  return face_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RendererCommand_WinLogFont::release_face_name() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.WinLogFont.face_name)
  if (!has_face_name()) {
    return NULL;
  }
  clear_has_face_name();
  return face_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RendererCommand_WinLogFont::set_allocated_face_name(::std::string* face_name) {
  if (face_name != NULL) {
    set_has_face_name();
  } else {
    clear_has_face_name();
  }
  face_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), face_name);
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.WinLogFont.face_name)
}

// -------------------------------------------------------------------

// RendererCommand_CompositionForm

// optional .mozc.commands.RendererCommand.Point current_position = 2;
inline bool RendererCommand_CompositionForm::has_current_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RendererCommand_CompositionForm::set_has_current_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RendererCommand_CompositionForm::clear_has_current_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RendererCommand_CompositionForm::clear_current_position() {
  if (current_position_ != NULL) current_position_->Clear();
  clear_has_current_position();
}
inline const ::mozc::commands::RendererCommand_Point& RendererCommand_CompositionForm::_internal_current_position() const {
  return *current_position_;
}
inline const ::mozc::commands::RendererCommand_Point& RendererCommand_CompositionForm::current_position() const {
  const ::mozc::commands::RendererCommand_Point* p = current_position_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.CompositionForm.current_position)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_Point*>(
      &::mozc::commands::_RendererCommand_Point_default_instance_);
}
inline ::mozc::commands::RendererCommand_Point* RendererCommand_CompositionForm::release_current_position() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.CompositionForm.current_position)
  clear_has_current_position();
  ::mozc::commands::RendererCommand_Point* temp = current_position_;
  current_position_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_Point* RendererCommand_CompositionForm::mutable_current_position() {
  set_has_current_position();
  if (current_position_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_Point>(GetArenaNoVirtual());
    current_position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.CompositionForm.current_position)
  return current_position_;
}
inline void RendererCommand_CompositionForm::set_allocated_current_position(::mozc::commands::RendererCommand_Point* current_position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete current_position_;
  }
  if (current_position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      current_position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, current_position, submessage_arena);
    }
    set_has_current_position();
  } else {
    clear_has_current_position();
  }
  current_position_ = current_position;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.CompositionForm.current_position)
}

// optional .mozc.commands.RendererCommand.Rectangle area = 3;
inline bool RendererCommand_CompositionForm::has_area() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RendererCommand_CompositionForm::set_has_area() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RendererCommand_CompositionForm::clear_has_area() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RendererCommand_CompositionForm::clear_area() {
  if (area_ != NULL) area_->Clear();
  clear_has_area();
}
inline const ::mozc::commands::RendererCommand_Rectangle& RendererCommand_CompositionForm::_internal_area() const {
  return *area_;
}
inline const ::mozc::commands::RendererCommand_Rectangle& RendererCommand_CompositionForm::area() const {
  const ::mozc::commands::RendererCommand_Rectangle* p = area_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.CompositionForm.area)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_Rectangle*>(
      &::mozc::commands::_RendererCommand_Rectangle_default_instance_);
}
inline ::mozc::commands::RendererCommand_Rectangle* RendererCommand_CompositionForm::release_area() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.CompositionForm.area)
  clear_has_area();
  ::mozc::commands::RendererCommand_Rectangle* temp = area_;
  area_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_Rectangle* RendererCommand_CompositionForm::mutable_area() {
  set_has_area();
  if (area_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_Rectangle>(GetArenaNoVirtual());
    area_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.CompositionForm.area)
  return area_;
}
inline void RendererCommand_CompositionForm::set_allocated_area(::mozc::commands::RendererCommand_Rectangle* area) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete area_;
  }
  if (area) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      area = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, area, submessage_arena);
    }
    set_has_area();
  } else {
    clear_has_area();
  }
  area_ = area;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.CompositionForm.area)
}

// optional uint32 style_bits = 4 [default = 0];
inline bool RendererCommand_CompositionForm::has_style_bits() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RendererCommand_CompositionForm::set_has_style_bits() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RendererCommand_CompositionForm::clear_has_style_bits() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RendererCommand_CompositionForm::clear_style_bits() {
  style_bits_ = 0u;
  clear_has_style_bits();
}
inline ::google::protobuf::uint32 RendererCommand_CompositionForm::style_bits() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.CompositionForm.style_bits)
  return style_bits_;
}
inline void RendererCommand_CompositionForm::set_style_bits(::google::protobuf::uint32 value) {
  set_has_style_bits();
  style_bits_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.CompositionForm.style_bits)
}

// -------------------------------------------------------------------

// RendererCommand_CandidateForm

// optional .mozc.commands.RendererCommand.Point current_position = 2;
inline bool RendererCommand_CandidateForm::has_current_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RendererCommand_CandidateForm::set_has_current_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RendererCommand_CandidateForm::clear_has_current_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RendererCommand_CandidateForm::clear_current_position() {
  if (current_position_ != NULL) current_position_->Clear();
  clear_has_current_position();
}
inline const ::mozc::commands::RendererCommand_Point& RendererCommand_CandidateForm::_internal_current_position() const {
  return *current_position_;
}
inline const ::mozc::commands::RendererCommand_Point& RendererCommand_CandidateForm::current_position() const {
  const ::mozc::commands::RendererCommand_Point* p = current_position_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.CandidateForm.current_position)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_Point*>(
      &::mozc::commands::_RendererCommand_Point_default_instance_);
}
inline ::mozc::commands::RendererCommand_Point* RendererCommand_CandidateForm::release_current_position() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.CandidateForm.current_position)
  clear_has_current_position();
  ::mozc::commands::RendererCommand_Point* temp = current_position_;
  current_position_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_Point* RendererCommand_CandidateForm::mutable_current_position() {
  set_has_current_position();
  if (current_position_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_Point>(GetArenaNoVirtual());
    current_position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.CandidateForm.current_position)
  return current_position_;
}
inline void RendererCommand_CandidateForm::set_allocated_current_position(::mozc::commands::RendererCommand_Point* current_position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete current_position_;
  }
  if (current_position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      current_position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, current_position, submessage_arena);
    }
    set_has_current_position();
  } else {
    clear_has_current_position();
  }
  current_position_ = current_position;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.CandidateForm.current_position)
}

// optional .mozc.commands.RendererCommand.Rectangle area = 3;
inline bool RendererCommand_CandidateForm::has_area() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RendererCommand_CandidateForm::set_has_area() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RendererCommand_CandidateForm::clear_has_area() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RendererCommand_CandidateForm::clear_area() {
  if (area_ != NULL) area_->Clear();
  clear_has_area();
}
inline const ::mozc::commands::RendererCommand_Rectangle& RendererCommand_CandidateForm::_internal_area() const {
  return *area_;
}
inline const ::mozc::commands::RendererCommand_Rectangle& RendererCommand_CandidateForm::area() const {
  const ::mozc::commands::RendererCommand_Rectangle* p = area_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.CandidateForm.area)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_Rectangle*>(
      &::mozc::commands::_RendererCommand_Rectangle_default_instance_);
}
inline ::mozc::commands::RendererCommand_Rectangle* RendererCommand_CandidateForm::release_area() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.CandidateForm.area)
  clear_has_area();
  ::mozc::commands::RendererCommand_Rectangle* temp = area_;
  area_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_Rectangle* RendererCommand_CandidateForm::mutable_area() {
  set_has_area();
  if (area_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_Rectangle>(GetArenaNoVirtual());
    area_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.CandidateForm.area)
  return area_;
}
inline void RendererCommand_CandidateForm::set_allocated_area(::mozc::commands::RendererCommand_Rectangle* area) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete area_;
  }
  if (area) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      area = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, area, submessage_arena);
    }
    set_has_area();
  } else {
    clear_has_area();
  }
  area_ = area;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.CandidateForm.area)
}

// optional uint32 style_bits = 4 [default = 0];
inline bool RendererCommand_CandidateForm::has_style_bits() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RendererCommand_CandidateForm::set_has_style_bits() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RendererCommand_CandidateForm::clear_has_style_bits() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RendererCommand_CandidateForm::clear_style_bits() {
  style_bits_ = 0u;
  clear_has_style_bits();
}
inline ::google::protobuf::uint32 RendererCommand_CandidateForm::style_bits() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.CandidateForm.style_bits)
  return style_bits_;
}
inline void RendererCommand_CandidateForm::set_style_bits(::google::protobuf::uint32 value) {
  set_has_style_bits();
  style_bits_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.CandidateForm.style_bits)
}

// -------------------------------------------------------------------

// RendererCommand_CharacterPosition

// optional uint32 position = 1;
inline bool RendererCommand_CharacterPosition::has_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RendererCommand_CharacterPosition::set_has_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RendererCommand_CharacterPosition::clear_has_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RendererCommand_CharacterPosition::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 RendererCommand_CharacterPosition::position() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.CharacterPosition.position)
  return position_;
}
inline void RendererCommand_CharacterPosition::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.CharacterPosition.position)
}

// optional .mozc.commands.RendererCommand.Point top_left = 2;
inline bool RendererCommand_CharacterPosition::has_top_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RendererCommand_CharacterPosition::set_has_top_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RendererCommand_CharacterPosition::clear_has_top_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RendererCommand_CharacterPosition::clear_top_left() {
  if (top_left_ != NULL) top_left_->Clear();
  clear_has_top_left();
}
inline const ::mozc::commands::RendererCommand_Point& RendererCommand_CharacterPosition::_internal_top_left() const {
  return *top_left_;
}
inline const ::mozc::commands::RendererCommand_Point& RendererCommand_CharacterPosition::top_left() const {
  const ::mozc::commands::RendererCommand_Point* p = top_left_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.CharacterPosition.top_left)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_Point*>(
      &::mozc::commands::_RendererCommand_Point_default_instance_);
}
inline ::mozc::commands::RendererCommand_Point* RendererCommand_CharacterPosition::release_top_left() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.CharacterPosition.top_left)
  clear_has_top_left();
  ::mozc::commands::RendererCommand_Point* temp = top_left_;
  top_left_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_Point* RendererCommand_CharacterPosition::mutable_top_left() {
  set_has_top_left();
  if (top_left_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_Point>(GetArenaNoVirtual());
    top_left_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.CharacterPosition.top_left)
  return top_left_;
}
inline void RendererCommand_CharacterPosition::set_allocated_top_left(::mozc::commands::RendererCommand_Point* top_left) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete top_left_;
  }
  if (top_left) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      top_left = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, top_left, submessage_arena);
    }
    set_has_top_left();
  } else {
    clear_has_top_left();
  }
  top_left_ = top_left;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.CharacterPosition.top_left)
}

// optional uint32 line_height = 3;
inline bool RendererCommand_CharacterPosition::has_line_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RendererCommand_CharacterPosition::set_has_line_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RendererCommand_CharacterPosition::clear_has_line_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RendererCommand_CharacterPosition::clear_line_height() {
  line_height_ = 0u;
  clear_has_line_height();
}
inline ::google::protobuf::uint32 RendererCommand_CharacterPosition::line_height() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.CharacterPosition.line_height)
  return line_height_;
}
inline void RendererCommand_CharacterPosition::set_line_height(::google::protobuf::uint32 value) {
  set_has_line_height();
  line_height_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.CharacterPosition.line_height)
}

// optional .mozc.commands.RendererCommand.Rectangle document_area = 4;
inline bool RendererCommand_CharacterPosition::has_document_area() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RendererCommand_CharacterPosition::set_has_document_area() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RendererCommand_CharacterPosition::clear_has_document_area() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RendererCommand_CharacterPosition::clear_document_area() {
  if (document_area_ != NULL) document_area_->Clear();
  clear_has_document_area();
}
inline const ::mozc::commands::RendererCommand_Rectangle& RendererCommand_CharacterPosition::_internal_document_area() const {
  return *document_area_;
}
inline const ::mozc::commands::RendererCommand_Rectangle& RendererCommand_CharacterPosition::document_area() const {
  const ::mozc::commands::RendererCommand_Rectangle* p = document_area_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.CharacterPosition.document_area)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_Rectangle*>(
      &::mozc::commands::_RendererCommand_Rectangle_default_instance_);
}
inline ::mozc::commands::RendererCommand_Rectangle* RendererCommand_CharacterPosition::release_document_area() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.CharacterPosition.document_area)
  clear_has_document_area();
  ::mozc::commands::RendererCommand_Rectangle* temp = document_area_;
  document_area_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_Rectangle* RendererCommand_CharacterPosition::mutable_document_area() {
  set_has_document_area();
  if (document_area_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_Rectangle>(GetArenaNoVirtual());
    document_area_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.CharacterPosition.document_area)
  return document_area_;
}
inline void RendererCommand_CharacterPosition::set_allocated_document_area(::mozc::commands::RendererCommand_Rectangle* document_area) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete document_area_;
  }
  if (document_area) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      document_area = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, document_area, submessage_arena);
    }
    set_has_document_area();
  } else {
    clear_has_document_area();
  }
  document_area_ = document_area;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.CharacterPosition.document_area)
}

// -------------------------------------------------------------------

// RendererCommand_CaretInfo

// optional bool blinking = 1 [default = false];
inline bool RendererCommand_CaretInfo::has_blinking() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RendererCommand_CaretInfo::set_has_blinking() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RendererCommand_CaretInfo::clear_has_blinking() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RendererCommand_CaretInfo::clear_blinking() {
  blinking_ = false;
  clear_has_blinking();
}
inline bool RendererCommand_CaretInfo::blinking() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.CaretInfo.blinking)
  return blinking_;
}
inline void RendererCommand_CaretInfo::set_blinking(bool value) {
  set_has_blinking();
  blinking_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.CaretInfo.blinking)
}

// optional .mozc.commands.RendererCommand.Rectangle caret_rect = 2;
inline bool RendererCommand_CaretInfo::has_caret_rect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RendererCommand_CaretInfo::set_has_caret_rect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RendererCommand_CaretInfo::clear_has_caret_rect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RendererCommand_CaretInfo::clear_caret_rect() {
  if (caret_rect_ != NULL) caret_rect_->Clear();
  clear_has_caret_rect();
}
inline const ::mozc::commands::RendererCommand_Rectangle& RendererCommand_CaretInfo::_internal_caret_rect() const {
  return *caret_rect_;
}
inline const ::mozc::commands::RendererCommand_Rectangle& RendererCommand_CaretInfo::caret_rect() const {
  const ::mozc::commands::RendererCommand_Rectangle* p = caret_rect_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.CaretInfo.caret_rect)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_Rectangle*>(
      &::mozc::commands::_RendererCommand_Rectangle_default_instance_);
}
inline ::mozc::commands::RendererCommand_Rectangle* RendererCommand_CaretInfo::release_caret_rect() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.CaretInfo.caret_rect)
  clear_has_caret_rect();
  ::mozc::commands::RendererCommand_Rectangle* temp = caret_rect_;
  caret_rect_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_Rectangle* RendererCommand_CaretInfo::mutable_caret_rect() {
  set_has_caret_rect();
  if (caret_rect_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_Rectangle>(GetArenaNoVirtual());
    caret_rect_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.CaretInfo.caret_rect)
  return caret_rect_;
}
inline void RendererCommand_CaretInfo::set_allocated_caret_rect(::mozc::commands::RendererCommand_Rectangle* caret_rect) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete caret_rect_;
  }
  if (caret_rect) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      caret_rect = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, caret_rect, submessage_arena);
    }
    set_has_caret_rect();
  } else {
    clear_has_caret_rect();
  }
  caret_rect_ = caret_rect;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.CaretInfo.caret_rect)
}

// optional uint32 target_window_handle = 3;
inline bool RendererCommand_CaretInfo::has_target_window_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RendererCommand_CaretInfo::set_has_target_window_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RendererCommand_CaretInfo::clear_has_target_window_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RendererCommand_CaretInfo::clear_target_window_handle() {
  target_window_handle_ = 0u;
  clear_has_target_window_handle();
}
inline ::google::protobuf::uint32 RendererCommand_CaretInfo::target_window_handle() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.CaretInfo.target_window_handle)
  return target_window_handle_;
}
inline void RendererCommand_CaretInfo::set_target_window_handle(::google::protobuf::uint32 value) {
  set_has_target_window_handle();
  target_window_handle_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.CaretInfo.target_window_handle)
}

// -------------------------------------------------------------------

// RendererCommand_IndicatorInfo

// optional .mozc.commands.Status status = 1;
inline bool RendererCommand_IndicatorInfo::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RendererCommand_IndicatorInfo::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RendererCommand_IndicatorInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::mozc::commands::Status& RendererCommand_IndicatorInfo::_internal_status() const {
  return *status_;
}
inline const ::mozc::commands::Status& RendererCommand_IndicatorInfo::status() const {
  const ::mozc::commands::Status* p = status_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.IndicatorInfo.status)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::Status*>(
      &::mozc::commands::_Status_default_instance_);
}
inline ::mozc::commands::Status* RendererCommand_IndicatorInfo::release_status() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.IndicatorInfo.status)
  clear_has_status();
  ::mozc::commands::Status* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::mozc::commands::Status* RendererCommand_IndicatorInfo::mutable_status() {
  set_has_status();
  if (status_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::Status>(GetArenaNoVirtual());
    status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.IndicatorInfo.status)
  return status_;
}
inline void RendererCommand_IndicatorInfo::set_allocated_status(::mozc::commands::Status* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    set_has_status();
  } else {
    clear_has_status();
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.IndicatorInfo.status)
}

// -------------------------------------------------------------------

// RendererCommand_ApplicationInfo

// optional uint32 process_id = 1;
inline bool RendererCommand_ApplicationInfo::has_process_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RendererCommand_ApplicationInfo::set_has_process_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RendererCommand_ApplicationInfo::clear_has_process_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RendererCommand_ApplicationInfo::clear_process_id() {
  process_id_ = 0u;
  clear_has_process_id();
}
inline ::google::protobuf::uint32 RendererCommand_ApplicationInfo::process_id() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.ApplicationInfo.process_id)
  return process_id_;
}
inline void RendererCommand_ApplicationInfo::set_process_id(::google::protobuf::uint32 value) {
  set_has_process_id();
  process_id_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.ApplicationInfo.process_id)
}

// optional uint32 thread_id = 2;
inline bool RendererCommand_ApplicationInfo::has_thread_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RendererCommand_ApplicationInfo::set_has_thread_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RendererCommand_ApplicationInfo::clear_has_thread_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RendererCommand_ApplicationInfo::clear_thread_id() {
  thread_id_ = 0u;
  clear_has_thread_id();
}
inline ::google::protobuf::uint32 RendererCommand_ApplicationInfo::thread_id() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.ApplicationInfo.thread_id)
  return thread_id_;
}
inline void RendererCommand_ApplicationInfo::set_thread_id(::google::protobuf::uint32 value) {
  set_has_thread_id();
  thread_id_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.ApplicationInfo.thread_id)
}

// optional uint32 receiver_handle = 3;
inline bool RendererCommand_ApplicationInfo::has_receiver_handle() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RendererCommand_ApplicationInfo::set_has_receiver_handle() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RendererCommand_ApplicationInfo::clear_has_receiver_handle() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RendererCommand_ApplicationInfo::clear_receiver_handle() {
  receiver_handle_ = 0u;
  clear_has_receiver_handle();
}
inline ::google::protobuf::uint32 RendererCommand_ApplicationInfo::receiver_handle() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.ApplicationInfo.receiver_handle)
  return receiver_handle_;
}
inline void RendererCommand_ApplicationInfo::set_receiver_handle(::google::protobuf::uint32 value) {
  set_has_receiver_handle();
  receiver_handle_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.ApplicationInfo.receiver_handle)
}

// optional uint32 target_window_handle = 4;
inline bool RendererCommand_ApplicationInfo::has_target_window_handle() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RendererCommand_ApplicationInfo::set_has_target_window_handle() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RendererCommand_ApplicationInfo::clear_has_target_window_handle() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RendererCommand_ApplicationInfo::clear_target_window_handle() {
  target_window_handle_ = 0u;
  clear_has_target_window_handle();
}
inline ::google::protobuf::uint32 RendererCommand_ApplicationInfo::target_window_handle() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.ApplicationInfo.target_window_handle)
  return target_window_handle_;
}
inline void RendererCommand_ApplicationInfo::set_target_window_handle(::google::protobuf::uint32 value) {
  set_has_target_window_handle();
  target_window_handle_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.ApplicationInfo.target_window_handle)
}

// optional .mozc.commands.RendererCommand.WinLogFont composition_font = 5;
inline bool RendererCommand_ApplicationInfo::has_composition_font() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RendererCommand_ApplicationInfo::set_has_composition_font() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RendererCommand_ApplicationInfo::clear_has_composition_font() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RendererCommand_ApplicationInfo::clear_composition_font() {
  if (composition_font_ != NULL) composition_font_->Clear();
  clear_has_composition_font();
}
inline const ::mozc::commands::RendererCommand_WinLogFont& RendererCommand_ApplicationInfo::_internal_composition_font() const {
  return *composition_font_;
}
inline const ::mozc::commands::RendererCommand_WinLogFont& RendererCommand_ApplicationInfo::composition_font() const {
  const ::mozc::commands::RendererCommand_WinLogFont* p = composition_font_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.ApplicationInfo.composition_font)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_WinLogFont*>(
      &::mozc::commands::_RendererCommand_WinLogFont_default_instance_);
}
inline ::mozc::commands::RendererCommand_WinLogFont* RendererCommand_ApplicationInfo::release_composition_font() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.ApplicationInfo.composition_font)
  clear_has_composition_font();
  ::mozc::commands::RendererCommand_WinLogFont* temp = composition_font_;
  composition_font_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_WinLogFont* RendererCommand_ApplicationInfo::mutable_composition_font() {
  set_has_composition_font();
  if (composition_font_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_WinLogFont>(GetArenaNoVirtual());
    composition_font_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.ApplicationInfo.composition_font)
  return composition_font_;
}
inline void RendererCommand_ApplicationInfo::set_allocated_composition_font(::mozc::commands::RendererCommand_WinLogFont* composition_font) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete composition_font_;
  }
  if (composition_font) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      composition_font = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, composition_font, submessage_arena);
    }
    set_has_composition_font();
  } else {
    clear_has_composition_font();
  }
  composition_font_ = composition_font;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.ApplicationInfo.composition_font)
}

// optional .mozc.commands.RendererCommand.ApplicationInfo.InputFrameworkType input_framework = 6 [default = UNKNOWN_FRAMEWORK];
inline bool RendererCommand_ApplicationInfo::has_input_framework() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RendererCommand_ApplicationInfo::set_has_input_framework() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RendererCommand_ApplicationInfo::clear_has_input_framework() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RendererCommand_ApplicationInfo::clear_input_framework() {
  input_framework_ = 0;
  clear_has_input_framework();
}
inline ::mozc::commands::RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::input_framework() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.ApplicationInfo.input_framework)
  return static_cast< ::mozc::commands::RendererCommand_ApplicationInfo_InputFrameworkType >(input_framework_);
}
inline void RendererCommand_ApplicationInfo::set_input_framework(::mozc::commands::RendererCommand_ApplicationInfo_InputFrameworkType value) {
  assert(::mozc::commands::RendererCommand_ApplicationInfo_InputFrameworkType_IsValid(value));
  set_has_input_framework();
  input_framework_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.ApplicationInfo.input_framework)
}

// optional .mozc.commands.RendererCommand.CompositionForm composition_form = 7;
inline bool RendererCommand_ApplicationInfo::has_composition_form() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RendererCommand_ApplicationInfo::set_has_composition_form() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RendererCommand_ApplicationInfo::clear_has_composition_form() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RendererCommand_ApplicationInfo::clear_composition_form() {
  if (composition_form_ != NULL) composition_form_->Clear();
  clear_has_composition_form();
}
inline const ::mozc::commands::RendererCommand_CompositionForm& RendererCommand_ApplicationInfo::_internal_composition_form() const {
  return *composition_form_;
}
inline const ::mozc::commands::RendererCommand_CompositionForm& RendererCommand_ApplicationInfo::composition_form() const {
  const ::mozc::commands::RendererCommand_CompositionForm* p = composition_form_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.ApplicationInfo.composition_form)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_CompositionForm*>(
      &::mozc::commands::_RendererCommand_CompositionForm_default_instance_);
}
inline ::mozc::commands::RendererCommand_CompositionForm* RendererCommand_ApplicationInfo::release_composition_form() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.ApplicationInfo.composition_form)
  clear_has_composition_form();
  ::mozc::commands::RendererCommand_CompositionForm* temp = composition_form_;
  composition_form_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_CompositionForm* RendererCommand_ApplicationInfo::mutable_composition_form() {
  set_has_composition_form();
  if (composition_form_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_CompositionForm>(GetArenaNoVirtual());
    composition_form_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.ApplicationInfo.composition_form)
  return composition_form_;
}
inline void RendererCommand_ApplicationInfo::set_allocated_composition_form(::mozc::commands::RendererCommand_CompositionForm* composition_form) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete composition_form_;
  }
  if (composition_form) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      composition_form = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, composition_form, submessage_arena);
    }
    set_has_composition_form();
  } else {
    clear_has_composition_form();
  }
  composition_form_ = composition_form;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.ApplicationInfo.composition_form)
}

// optional .mozc.commands.RendererCommand.CandidateForm candidate_form = 8;
inline bool RendererCommand_ApplicationInfo::has_candidate_form() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RendererCommand_ApplicationInfo::set_has_candidate_form() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RendererCommand_ApplicationInfo::clear_has_candidate_form() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RendererCommand_ApplicationInfo::clear_candidate_form() {
  if (candidate_form_ != NULL) candidate_form_->Clear();
  clear_has_candidate_form();
}
inline const ::mozc::commands::RendererCommand_CandidateForm& RendererCommand_ApplicationInfo::_internal_candidate_form() const {
  return *candidate_form_;
}
inline const ::mozc::commands::RendererCommand_CandidateForm& RendererCommand_ApplicationInfo::candidate_form() const {
  const ::mozc::commands::RendererCommand_CandidateForm* p = candidate_form_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.ApplicationInfo.candidate_form)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_CandidateForm*>(
      &::mozc::commands::_RendererCommand_CandidateForm_default_instance_);
}
inline ::mozc::commands::RendererCommand_CandidateForm* RendererCommand_ApplicationInfo::release_candidate_form() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.ApplicationInfo.candidate_form)
  clear_has_candidate_form();
  ::mozc::commands::RendererCommand_CandidateForm* temp = candidate_form_;
  candidate_form_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_CandidateForm* RendererCommand_ApplicationInfo::mutable_candidate_form() {
  set_has_candidate_form();
  if (candidate_form_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_CandidateForm>(GetArenaNoVirtual());
    candidate_form_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.ApplicationInfo.candidate_form)
  return candidate_form_;
}
inline void RendererCommand_ApplicationInfo::set_allocated_candidate_form(::mozc::commands::RendererCommand_CandidateForm* candidate_form) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete candidate_form_;
  }
  if (candidate_form) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      candidate_form = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, candidate_form, submessage_arena);
    }
    set_has_candidate_form();
  } else {
    clear_has_candidate_form();
  }
  candidate_form_ = candidate_form;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.ApplicationInfo.candidate_form)
}

// optional int32 ui_visibilities = 9 [default = 0];
inline bool RendererCommand_ApplicationInfo::has_ui_visibilities() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RendererCommand_ApplicationInfo::set_has_ui_visibilities() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RendererCommand_ApplicationInfo::clear_has_ui_visibilities() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RendererCommand_ApplicationInfo::clear_ui_visibilities() {
  ui_visibilities_ = 0;
  clear_has_ui_visibilities();
}
inline ::google::protobuf::int32 RendererCommand_ApplicationInfo::ui_visibilities() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.ApplicationInfo.ui_visibilities)
  return ui_visibilities_;
}
inline void RendererCommand_ApplicationInfo::set_ui_visibilities(::google::protobuf::int32 value) {
  set_has_ui_visibilities();
  ui_visibilities_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.ApplicationInfo.ui_visibilities)
}

// optional .mozc.commands.RendererCommand.CharacterPosition composition_target = 10;
inline bool RendererCommand_ApplicationInfo::has_composition_target() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RendererCommand_ApplicationInfo::set_has_composition_target() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RendererCommand_ApplicationInfo::clear_has_composition_target() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RendererCommand_ApplicationInfo::clear_composition_target() {
  if (composition_target_ != NULL) composition_target_->Clear();
  clear_has_composition_target();
}
inline const ::mozc::commands::RendererCommand_CharacterPosition& RendererCommand_ApplicationInfo::_internal_composition_target() const {
  return *composition_target_;
}
inline const ::mozc::commands::RendererCommand_CharacterPosition& RendererCommand_ApplicationInfo::composition_target() const {
  const ::mozc::commands::RendererCommand_CharacterPosition* p = composition_target_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.ApplicationInfo.composition_target)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_CharacterPosition*>(
      &::mozc::commands::_RendererCommand_CharacterPosition_default_instance_);
}
inline ::mozc::commands::RendererCommand_CharacterPosition* RendererCommand_ApplicationInfo::release_composition_target() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.ApplicationInfo.composition_target)
  clear_has_composition_target();
  ::mozc::commands::RendererCommand_CharacterPosition* temp = composition_target_;
  composition_target_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_CharacterPosition* RendererCommand_ApplicationInfo::mutable_composition_target() {
  set_has_composition_target();
  if (composition_target_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_CharacterPosition>(GetArenaNoVirtual());
    composition_target_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.ApplicationInfo.composition_target)
  return composition_target_;
}
inline void RendererCommand_ApplicationInfo::set_allocated_composition_target(::mozc::commands::RendererCommand_CharacterPosition* composition_target) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete composition_target_;
  }
  if (composition_target) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      composition_target = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, composition_target, submessage_arena);
    }
    set_has_composition_target();
  } else {
    clear_has_composition_target();
  }
  composition_target_ = composition_target;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.ApplicationInfo.composition_target)
}

// optional .mozc.commands.RendererCommand.CaretInfo caret_info = 11;
inline bool RendererCommand_ApplicationInfo::has_caret_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RendererCommand_ApplicationInfo::set_has_caret_info() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RendererCommand_ApplicationInfo::clear_has_caret_info() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RendererCommand_ApplicationInfo::clear_caret_info() {
  if (caret_info_ != NULL) caret_info_->Clear();
  clear_has_caret_info();
}
inline const ::mozc::commands::RendererCommand_CaretInfo& RendererCommand_ApplicationInfo::_internal_caret_info() const {
  return *caret_info_;
}
inline const ::mozc::commands::RendererCommand_CaretInfo& RendererCommand_ApplicationInfo::caret_info() const {
  const ::mozc::commands::RendererCommand_CaretInfo* p = caret_info_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.ApplicationInfo.caret_info)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_CaretInfo*>(
      &::mozc::commands::_RendererCommand_CaretInfo_default_instance_);
}
inline ::mozc::commands::RendererCommand_CaretInfo* RendererCommand_ApplicationInfo::release_caret_info() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.ApplicationInfo.caret_info)
  clear_has_caret_info();
  ::mozc::commands::RendererCommand_CaretInfo* temp = caret_info_;
  caret_info_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_CaretInfo* RendererCommand_ApplicationInfo::mutable_caret_info() {
  set_has_caret_info();
  if (caret_info_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_CaretInfo>(GetArenaNoVirtual());
    caret_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.ApplicationInfo.caret_info)
  return caret_info_;
}
inline void RendererCommand_ApplicationInfo::set_allocated_caret_info(::mozc::commands::RendererCommand_CaretInfo* caret_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete caret_info_;
  }
  if (caret_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      caret_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, caret_info, submessage_arena);
    }
    set_has_caret_info();
  } else {
    clear_has_caret_info();
  }
  caret_info_ = caret_info;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.ApplicationInfo.caret_info)
}

// optional string pango_font_description = 13;
inline bool RendererCommand_ApplicationInfo::has_pango_font_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RendererCommand_ApplicationInfo::set_has_pango_font_description() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RendererCommand_ApplicationInfo::clear_has_pango_font_description() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RendererCommand_ApplicationInfo::clear_pango_font_description() {
  pango_font_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pango_font_description();
}
inline const ::std::string& RendererCommand_ApplicationInfo::pango_font_description() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.ApplicationInfo.pango_font_description)
  return pango_font_description_.GetNoArena();
}
inline void RendererCommand_ApplicationInfo::set_pango_font_description(const ::std::string& value) {
  set_has_pango_font_description();
  pango_font_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.ApplicationInfo.pango_font_description)
}
#if LANG_CXX11
inline void RendererCommand_ApplicationInfo::set_pango_font_description(::std::string&& value) {
  set_has_pango_font_description();
  pango_font_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mozc.commands.RendererCommand.ApplicationInfo.pango_font_description)
}
#endif
inline void RendererCommand_ApplicationInfo::set_pango_font_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pango_font_description();
  pango_font_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mozc.commands.RendererCommand.ApplicationInfo.pango_font_description)
}
inline void RendererCommand_ApplicationInfo::set_pango_font_description(const char* value, size_t size) {
  set_has_pango_font_description();
  pango_font_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mozc.commands.RendererCommand.ApplicationInfo.pango_font_description)
}
inline ::std::string* RendererCommand_ApplicationInfo::mutable_pango_font_description() {
  set_has_pango_font_description();
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.ApplicationInfo.pango_font_description)
  return pango_font_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RendererCommand_ApplicationInfo::release_pango_font_description() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.ApplicationInfo.pango_font_description)
  if (!has_pango_font_description()) {
    return NULL;
  }
  clear_has_pango_font_description();
  return pango_font_description_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RendererCommand_ApplicationInfo::set_allocated_pango_font_description(::std::string* pango_font_description) {
  if (pango_font_description != NULL) {
    set_has_pango_font_description();
  } else {
    clear_has_pango_font_description();
  }
  pango_font_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pango_font_description);
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.ApplicationInfo.pango_font_description)
}

// optional .mozc.commands.RendererCommand.IndicatorInfo indicator_info = 14;
inline bool RendererCommand_ApplicationInfo::has_indicator_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RendererCommand_ApplicationInfo::set_has_indicator_info() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RendererCommand_ApplicationInfo::clear_has_indicator_info() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RendererCommand_ApplicationInfo::clear_indicator_info() {
  if (indicator_info_ != NULL) indicator_info_->Clear();
  clear_has_indicator_info();
}
inline const ::mozc::commands::RendererCommand_IndicatorInfo& RendererCommand_ApplicationInfo::_internal_indicator_info() const {
  return *indicator_info_;
}
inline const ::mozc::commands::RendererCommand_IndicatorInfo& RendererCommand_ApplicationInfo::indicator_info() const {
  const ::mozc::commands::RendererCommand_IndicatorInfo* p = indicator_info_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.ApplicationInfo.indicator_info)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_IndicatorInfo*>(
      &::mozc::commands::_RendererCommand_IndicatorInfo_default_instance_);
}
inline ::mozc::commands::RendererCommand_IndicatorInfo* RendererCommand_ApplicationInfo::release_indicator_info() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.ApplicationInfo.indicator_info)
  clear_has_indicator_info();
  ::mozc::commands::RendererCommand_IndicatorInfo* temp = indicator_info_;
  indicator_info_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_IndicatorInfo* RendererCommand_ApplicationInfo::mutable_indicator_info() {
  set_has_indicator_info();
  if (indicator_info_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_IndicatorInfo>(GetArenaNoVirtual());
    indicator_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.ApplicationInfo.indicator_info)
  return indicator_info_;
}
inline void RendererCommand_ApplicationInfo::set_allocated_indicator_info(::mozc::commands::RendererCommand_IndicatorInfo* indicator_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete indicator_info_;
  }
  if (indicator_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      indicator_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, indicator_info, submessage_arena);
    }
    set_has_indicator_info();
  } else {
    clear_has_indicator_info();
  }
  indicator_info_ = indicator_info;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.ApplicationInfo.indicator_info)
}

// -------------------------------------------------------------------

// RendererCommand

// optional .mozc.commands.RendererCommand.CommandType type = 1 [default = NOOP];
inline bool RendererCommand::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RendererCommand::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RendererCommand::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RendererCommand::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::mozc::commands::RendererCommand_CommandType RendererCommand::type() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.type)
  return static_cast< ::mozc::commands::RendererCommand_CommandType >(type_);
}
inline void RendererCommand::set_type(::mozc::commands::RendererCommand_CommandType value) {
  assert(::mozc::commands::RendererCommand_CommandType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.type)
}

// optional bool visible = 2 [default = false];
inline bool RendererCommand::has_visible() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RendererCommand::set_has_visible() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RendererCommand::clear_has_visible() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RendererCommand::clear_visible() {
  visible_ = false;
  clear_has_visible();
}
inline bool RendererCommand::visible() const {
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.visible)
  return visible_;
}
inline void RendererCommand::set_visible(bool value) {
  set_has_visible();
  visible_ = value;
  // @@protoc_insertion_point(field_set:mozc.commands.RendererCommand.visible)
}

// optional .mozc.commands.Output output = 3;
inline bool RendererCommand::has_output() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RendererCommand::set_has_output() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RendererCommand::clear_has_output() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::mozc::commands::Output& RendererCommand::_internal_output() const {
  return *output_;
}
inline const ::mozc::commands::Output& RendererCommand::output() const {
  const ::mozc::commands::Output* p = output_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.output)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::Output*>(
      &::mozc::commands::_Output_default_instance_);
}
inline ::mozc::commands::Output* RendererCommand::release_output() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.output)
  clear_has_output();
  ::mozc::commands::Output* temp = output_;
  output_ = NULL;
  return temp;
}
inline ::mozc::commands::Output* RendererCommand::mutable_output() {
  set_has_output();
  if (output_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::Output>(GetArenaNoVirtual());
    output_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.output)
  return output_;
}
inline void RendererCommand::set_allocated_output(::mozc::commands::Output* output) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(output_);
  }
  if (output) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output, submessage_arena);
    }
    set_has_output();
  } else {
    clear_has_output();
  }
  output_ = output;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.output)
}

// optional .mozc.commands.RendererCommand.Rectangle preedit_rectangle = 4;
inline bool RendererCommand::has_preedit_rectangle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RendererCommand::set_has_preedit_rectangle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RendererCommand::clear_has_preedit_rectangle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RendererCommand::clear_preedit_rectangle() {
  if (preedit_rectangle_ != NULL) preedit_rectangle_->Clear();
  clear_has_preedit_rectangle();
}
inline const ::mozc::commands::RendererCommand_Rectangle& RendererCommand::_internal_preedit_rectangle() const {
  return *preedit_rectangle_;
}
inline const ::mozc::commands::RendererCommand_Rectangle& RendererCommand::preedit_rectangle() const {
  const ::mozc::commands::RendererCommand_Rectangle* p = preedit_rectangle_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.preedit_rectangle)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_Rectangle*>(
      &::mozc::commands::_RendererCommand_Rectangle_default_instance_);
}
inline ::mozc::commands::RendererCommand_Rectangle* RendererCommand::release_preedit_rectangle() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.preedit_rectangle)
  clear_has_preedit_rectangle();
  ::mozc::commands::RendererCommand_Rectangle* temp = preedit_rectangle_;
  preedit_rectangle_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_Rectangle* RendererCommand::mutable_preedit_rectangle() {
  set_has_preedit_rectangle();
  if (preedit_rectangle_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_Rectangle>(GetArenaNoVirtual());
    preedit_rectangle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.preedit_rectangle)
  return preedit_rectangle_;
}
inline void RendererCommand::set_allocated_preedit_rectangle(::mozc::commands::RendererCommand_Rectangle* preedit_rectangle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete preedit_rectangle_;
  }
  if (preedit_rectangle) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      preedit_rectangle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, preedit_rectangle, submessage_arena);
    }
    set_has_preedit_rectangle();
  } else {
    clear_has_preedit_rectangle();
  }
  preedit_rectangle_ = preedit_rectangle;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.preedit_rectangle)
}

// optional .mozc.commands.RendererCommand.ApplicationInfo application_info = 5;
inline bool RendererCommand::has_application_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RendererCommand::set_has_application_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RendererCommand::clear_has_application_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RendererCommand::clear_application_info() {
  if (application_info_ != NULL) application_info_->Clear();
  clear_has_application_info();
}
inline const ::mozc::commands::RendererCommand_ApplicationInfo& RendererCommand::_internal_application_info() const {
  return *application_info_;
}
inline const ::mozc::commands::RendererCommand_ApplicationInfo& RendererCommand::application_info() const {
  const ::mozc::commands::RendererCommand_ApplicationInfo* p = application_info_;
  // @@protoc_insertion_point(field_get:mozc.commands.RendererCommand.application_info)
  return p != NULL ? *p : *reinterpret_cast<const ::mozc::commands::RendererCommand_ApplicationInfo*>(
      &::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_);
}
inline ::mozc::commands::RendererCommand_ApplicationInfo* RendererCommand::release_application_info() {
  // @@protoc_insertion_point(field_release:mozc.commands.RendererCommand.application_info)
  clear_has_application_info();
  ::mozc::commands::RendererCommand_ApplicationInfo* temp = application_info_;
  application_info_ = NULL;
  return temp;
}
inline ::mozc::commands::RendererCommand_ApplicationInfo* RendererCommand::mutable_application_info() {
  set_has_application_info();
  if (application_info_ == NULL) {
    auto* p = CreateMaybeMessage<::mozc::commands::RendererCommand_ApplicationInfo>(GetArenaNoVirtual());
    application_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mozc.commands.RendererCommand.application_info)
  return application_info_;
}
inline void RendererCommand::set_allocated_application_info(::mozc::commands::RendererCommand_ApplicationInfo* application_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete application_info_;
  }
  if (application_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      application_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, application_info, submessage_arena);
    }
    set_has_application_info();
  } else {
    clear_has_application_info();
  }
  application_info_ = application_info;
  // @@protoc_insertion_point(field_set_allocated:mozc.commands.RendererCommand.application_info)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace commands
}  // namespace mozc

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::mozc::commands::RendererCommand_CompositionForm_Style> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mozc::commands::RendererCommand_CompositionForm_Style>() {
  return ::mozc::commands::RendererCommand_CompositionForm_Style_descriptor();
}
template <> struct is_proto_enum< ::mozc::commands::RendererCommand_CandidateForm_Style> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mozc::commands::RendererCommand_CandidateForm_Style>() {
  return ::mozc::commands::RendererCommand_CandidateForm_Style_descriptor();
}
template <> struct is_proto_enum< ::mozc::commands::RendererCommand_ApplicationInfo_InputFrameworkType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mozc::commands::RendererCommand_ApplicationInfo_InputFrameworkType>() {
  return ::mozc::commands::RendererCommand_ApplicationInfo_InputFrameworkType_descriptor();
}
template <> struct is_proto_enum< ::mozc::commands::RendererCommand_ApplicationInfo_UIVisibility> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mozc::commands::RendererCommand_ApplicationInfo_UIVisibility>() {
  return ::mozc::commands::RendererCommand_ApplicationInfo_UIVisibility_descriptor();
}
template <> struct is_proto_enum< ::mozc::commands::RendererCommand_CommandType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mozc::commands::RendererCommand_CommandType>() {
  return ::mozc::commands::RendererCommand_CommandType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protocol_2frenderer_5fcommand_2eproto
