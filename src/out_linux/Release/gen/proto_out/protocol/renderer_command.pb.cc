// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/renderer_command.proto

#include "protocol/renderer_command.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_protocol_2fcommands_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2fcommands_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Status;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2fcommands_2eproto ::google::protobuf::internal::SCCInfo<12> scc_info_Output;
}  // namespace protobuf_protocol_2fcommands_2eproto
namespace protobuf_protocol_2frenderer_5fcommand_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2frenderer_5fcommand_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RendererCommand_Point;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2frenderer_5fcommand_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RendererCommand_Rectangle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2frenderer_5fcommand_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RendererCommand_WinLogFont;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2frenderer_5fcommand_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RendererCommand_CaretInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2frenderer_5fcommand_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RendererCommand_IndicatorInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2frenderer_5fcommand_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RendererCommand_CandidateForm;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2frenderer_5fcommand_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RendererCommand_CharacterPosition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2frenderer_5fcommand_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RendererCommand_CompositionForm;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protocol_2frenderer_5fcommand_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_RendererCommand_ApplicationInfo;
}  // namespace protobuf_protocol_2frenderer_5fcommand_2eproto
namespace mozc {
namespace commands {
class RendererCommand_RectangleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RendererCommand_Rectangle>
      _instance;
} _RendererCommand_Rectangle_default_instance_;
class RendererCommand_PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RendererCommand_Point>
      _instance;
} _RendererCommand_Point_default_instance_;
class RendererCommand_WinLogFontDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RendererCommand_WinLogFont>
      _instance;
} _RendererCommand_WinLogFont_default_instance_;
class RendererCommand_CompositionFormDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RendererCommand_CompositionForm>
      _instance;
} _RendererCommand_CompositionForm_default_instance_;
class RendererCommand_CandidateFormDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RendererCommand_CandidateForm>
      _instance;
} _RendererCommand_CandidateForm_default_instance_;
class RendererCommand_CharacterPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RendererCommand_CharacterPosition>
      _instance;
} _RendererCommand_CharacterPosition_default_instance_;
class RendererCommand_CaretInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RendererCommand_CaretInfo>
      _instance;
} _RendererCommand_CaretInfo_default_instance_;
class RendererCommand_IndicatorInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RendererCommand_IndicatorInfo>
      _instance;
} _RendererCommand_IndicatorInfo_default_instance_;
class RendererCommand_ApplicationInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RendererCommand_ApplicationInfo>
      _instance;
} _RendererCommand_ApplicationInfo_default_instance_;
class RendererCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RendererCommand>
      _instance;
} _RendererCommand_default_instance_;
}  // namespace commands
}  // namespace mozc
namespace protobuf_protocol_2frenderer_5fcommand_2eproto {
static void InitDefaultsRendererCommand_Rectangle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_Rectangle_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_Rectangle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_Rectangle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RendererCommand_Rectangle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRendererCommand_Rectangle}, {}};

static void InitDefaultsRendererCommand_Point() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_Point_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_Point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RendererCommand_Point =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRendererCommand_Point}, {}};

static void InitDefaultsRendererCommand_WinLogFont() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_WinLogFont_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_WinLogFont();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_WinLogFont::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RendererCommand_WinLogFont =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRendererCommand_WinLogFont}, {}};

static void InitDefaultsRendererCommand_CompositionForm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_CompositionForm_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_CompositionForm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_CompositionForm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RendererCommand_CompositionForm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRendererCommand_CompositionForm}, {
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_Point.base,
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_Rectangle.base,}};

static void InitDefaultsRendererCommand_CandidateForm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_CandidateForm_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_CandidateForm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_CandidateForm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RendererCommand_CandidateForm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRendererCommand_CandidateForm}, {
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_Point.base,
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_Rectangle.base,}};

static void InitDefaultsRendererCommand_CharacterPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_CharacterPosition_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_CharacterPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_CharacterPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RendererCommand_CharacterPosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRendererCommand_CharacterPosition}, {
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_Point.base,
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_Rectangle.base,}};

static void InitDefaultsRendererCommand_CaretInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_CaretInfo_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_CaretInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_CaretInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RendererCommand_CaretInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRendererCommand_CaretInfo}, {
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_Rectangle.base,}};

static void InitDefaultsRendererCommand_IndicatorInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_IndicatorInfo_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_IndicatorInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_IndicatorInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RendererCommand_IndicatorInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRendererCommand_IndicatorInfo}, {
      &protobuf_protocol_2fcommands_2eproto::scc_info_Status.base,}};

static void InitDefaultsRendererCommand_ApplicationInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_ApplicationInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_ApplicationInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_RendererCommand_ApplicationInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsRendererCommand_ApplicationInfo}, {
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_WinLogFont.base,
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_CompositionForm.base,
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_CandidateForm.base,
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_CharacterPosition.base,
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_CaretInfo.base,
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_IndicatorInfo.base,}};

static void InitDefaultsRendererCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_RendererCommand =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRendererCommand}, {
      &protobuf_protocol_2fcommands_2eproto::scc_info_Output.base,
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_Rectangle.base,
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_ApplicationInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RendererCommand_Rectangle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RendererCommand_Point.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RendererCommand_WinLogFont.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RendererCommand_CompositionForm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RendererCommand_CandidateForm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RendererCommand_CharacterPosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RendererCommand_CaretInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RendererCommand_IndicatorInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RendererCommand_ApplicationInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RendererCommand.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_Rectangle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_Rectangle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_Rectangle, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_Rectangle, top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_Rectangle, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_Rectangle, bottom_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_Point, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_Point, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, escapement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, orientation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, weight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, italic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, underline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, strike_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, char_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, out_precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, clip_precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, quality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, pitch_and_family_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, face_name_),
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  13,
  9,
  10,
  11,
  12,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CompositionForm, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CompositionForm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CompositionForm, current_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CompositionForm, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CompositionForm, style_bits_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CandidateForm, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CandidateForm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CandidateForm, current_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CandidateForm, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CandidateForm, style_bits_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CharacterPosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CharacterPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CharacterPosition, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CharacterPosition, top_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CharacterPosition, line_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CharacterPosition, document_area_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CaretInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CaretInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CaretInfo, blinking_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CaretInfo, caret_rect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_CaretInfo, target_window_handle_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_IndicatorInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_IndicatorInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_IndicatorInfo, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, process_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, thread_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, receiver_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, target_window_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, composition_font_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, input_framework_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, composition_form_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, candidate_form_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, ui_visibilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, composition_target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, caret_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, pango_font_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, indicator_info_),
  7,
  8,
  9,
  10,
  1,
  11,
  2,
  3,
  12,
  4,
  5,
  0,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand, visible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand, output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand, preedit_rectangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mozc::commands::RendererCommand, application_info_),
  3,
  4,
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::mozc::commands::RendererCommand_Rectangle)},
  { 13, 20, sizeof(::mozc::commands::RendererCommand_Point)},
  { 22, 41, sizeof(::mozc::commands::RendererCommand_WinLogFont)},
  { 55, 63, sizeof(::mozc::commands::RendererCommand_CompositionForm)},
  { 66, 74, sizeof(::mozc::commands::RendererCommand_CandidateForm)},
  { 77, 86, sizeof(::mozc::commands::RendererCommand_CharacterPosition)},
  { 90, 98, sizeof(::mozc::commands::RendererCommand_CaretInfo)},
  { 101, 107, sizeof(::mozc::commands::RendererCommand_IndicatorInfo)},
  { 108, 126, sizeof(::mozc::commands::RendererCommand_ApplicationInfo)},
  { 139, 149, sizeof(::mozc::commands::RendererCommand)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozc::commands::_RendererCommand_Rectangle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozc::commands::_RendererCommand_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozc::commands::_RendererCommand_WinLogFont_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozc::commands::_RendererCommand_CompositionForm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozc::commands::_RendererCommand_CandidateForm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozc::commands::_RendererCommand_CharacterPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozc::commands::_RendererCommand_CaretInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozc::commands::_RendererCommand_IndicatorInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mozc::commands::_RendererCommand_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protocol/renderer_command.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\037protocol/renderer_command.proto\022\rmozc."
      "commands\032\027protocol/commands.proto\"\314\023\n\017Re"
      "ndererCommand\022>\n\004type\030\001 \001(\0162*.mozc.comma"
      "nds.RendererCommand.CommandType:\004NOOP\022\026\n"
      "\007visible\030\002 \001(\010:\005false\022%\n\006output\030\003 \001(\0132\025."
      "mozc.commands.Output\022C\n\021preedit_rectangl"
      "e\030\004 \001(\0132(.mozc.commands.RendererCommand."
      "Rectangle\022H\n\020application_info\030\005 \001(\0132..mo"
      "zc.commands.RendererCommand.ApplicationI"
      "nfo\032E\n\tRectangle\022\014\n\004left\030\001 \001(\005\022\013\n\003top\030\002 "
      "\001(\005\022\r\n\005right\030\003 \001(\005\022\016\n\006bottom\030\004 \001(\005\032\035\n\005Po"
      "int\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\032\315\002\n\nWinLogFont"
      "\022\021\n\006height\030\001 \001(\005:\0010\022\020\n\005width\030\002 \001(\005:\0010\022\025\n"
      "\nescapement\030\003 \001(\005:\0010\022\026\n\013orientation\030\004 \001("
      "\005:\0010\022\021\n\006weight\030\005 \001(\005:\0010\022\025\n\006italic\030\006 \001(\010:"
      "\005false\022\030\n\tunderline\030\007 \001(\010:\005false\022\031\n\nstri"
      "ke_out\030\010 \001(\010:\005false\022\023\n\010char_set\030\t \001(\005:\0011"
      "\022\030\n\rout_precision\030\n \001(\005:\0010\022\031\n\016clip_preci"
      "sion\030\013 \001(\005:\0010\022\022\n\007quality\030\014 \001(\005:\0010\022\033\n\020pit"
      "ch_and_family\030\r \001(\005:\0010\022\021\n\tface_name\030\016 \001("
      "\t\032\345\001\n\017CompositionForm\022>\n\020current_positio"
      "n\030\002 \001(\0132$.mozc.commands.RendererCommand."
      "Point\0226\n\004area\030\003 \001(\0132(.mozc.commands.Rend"
      "ererCommand.Rectangle\022\025\n\nstyle_bits\030\004 \001("
      "\r:\0010\"=\n\005Style\022\013\n\007DEFAULT\020\000\022\010\n\004RECT\020\001\022\t\n\005"
      "POINT\020\002\022\022\n\016FORCE_POSITION\020 J\004\010\001\020\002\032\332\001\n\rCa"
      "ndidateForm\022>\n\020current_position\030\002 \001(\0132$."
      "mozc.commands.RendererCommand.Point\0226\n\004a"
      "rea\030\003 \001(\0132(.mozc.commands.RendererComman"
      "d.Rectangle\022\025\n\nstyle_bits\030\004 \001(\r:\0010\"4\n\005St"
      "yle\022\013\n\007DEFAULT\020\000\022\020\n\014CANDIDATEPOS\020@\022\014\n\007EX"
      "CLUDE\020\200\001J\004\010\001\020\002\032\263\001\n\021CharacterPosition\022\020\n\010"
      "position\030\001 \001(\r\0226\n\010top_left\030\002 \001(\0132$.mozc."
      "commands.RendererCommand.Point\022\023\n\013line_h"
      "eight\030\003 \001(\r\022\?\n\rdocument_area\030\004 \001(\0132(.moz"
      "c.commands.RendererCommand.Rectangle\032\200\001\n"
      "\tCaretInfo\022\027\n\010blinking\030\001 \001(\010:\005false\022<\n\nc"
      "aret_rect\030\002 \001(\0132(.mozc.commands.Renderer"
      "Command.Rectangle\022\034\n\024target_window_handl"
      "e\030\003 \001(\r\0326\n\rIndicatorInfo\022%\n\006status\030\001 \001(\013"
      "2\025.mozc.commands.Status\032\213\007\n\017ApplicationI"
      "nfo\022\022\n\nprocess_id\030\001 \001(\r\022\021\n\tthread_id\030\002 \001"
      "(\r\022\027\n\017receiver_handle\030\003 \001(\r\022\034\n\024target_wi"
      "ndow_handle\030\004 \001(\r\022C\n\020composition_font\030\005 "
      "\001(\0132).mozc.commands.RendererCommand.WinL"
      "ogFont\022m\n\017input_framework\030\006 \001(\0162A.mozc.c"
      "ommands.RendererCommand.ApplicationInfo."
      "InputFrameworkType:\021UNKNOWN_FRAMEWORK\022H\n"
      "\020composition_form\030\007 \001(\0132..mozc.commands."
      "RendererCommand.CompositionForm\022D\n\016candi"
      "date_form\030\010 \001(\0132,.mozc.commands.Renderer"
      "Command.CandidateForm\022\032\n\017ui_visibilities"
      "\030\t \001(\005:\0010\022L\n\022composition_target\030\n \001(\01320."
      "mozc.commands.RendererCommand.CharacterP"
      "osition\022<\n\ncaret_info\030\013 \001(\0132(.mozc.comma"
      "nds.RendererCommand.CaretInfo\022\036\n\026pango_f"
      "ont_description\030\r \001(\t\022D\n\016indicator_info\030"
      "\016 \001(\0132,.mozc.commands.RendererCommand.In"
      "dicatorInfo\"T\n\022InputFrameworkType\022\025\n\021UNK"
      "NOWN_FRAMEWORK\020\000\022\007\n\003TSF\020\001\022\t\n\005IMM32\020\002\022\t\n\005"
      "IMKit\020\003\022\010\n\004IBus\020\004\"l\n\014UIVisibility\022\021\n\rSho"
      "wUIDefault\020\000\022\031\n\025ShowCompositionWindow\020\001\022"
      "\027\n\023ShowCandidateWindow\020\002\022\025\n\021ShowSuggestW"
      "indow\020\004J\004\010\014\020\r\"1\n\013CommandType\022\010\n\004NOOP\020\000\022\n"
      "\n\006UPDATE\020\001\022\014\n\010SHUTDOWN\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2584);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protocol/renderer_command.proto", &protobuf_RegisterTypes);
  ::protobuf_protocol_2fcommands_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protocol_2frenderer_5fcommand_2eproto
namespace mozc {
namespace commands {
const ::google::protobuf::EnumDescriptor* RendererCommand_CompositionForm_Style_descriptor() {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_enum_descriptors[0];
}
bool RendererCommand_CompositionForm_Style_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 32:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RendererCommand_CompositionForm_Style RendererCommand_CompositionForm::DEFAULT;
const RendererCommand_CompositionForm_Style RendererCommand_CompositionForm::RECT;
const RendererCommand_CompositionForm_Style RendererCommand_CompositionForm::POINT;
const RendererCommand_CompositionForm_Style RendererCommand_CompositionForm::FORCE_POSITION;
const RendererCommand_CompositionForm_Style RendererCommand_CompositionForm::Style_MIN;
const RendererCommand_CompositionForm_Style RendererCommand_CompositionForm::Style_MAX;
const int RendererCommand_CompositionForm::Style_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RendererCommand_CandidateForm_Style_descriptor() {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_enum_descriptors[1];
}
bool RendererCommand_CandidateForm_Style_IsValid(int value) {
  switch (value) {
    case 0:
    case 64:
    case 128:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RendererCommand_CandidateForm_Style RendererCommand_CandidateForm::DEFAULT;
const RendererCommand_CandidateForm_Style RendererCommand_CandidateForm::CANDIDATEPOS;
const RendererCommand_CandidateForm_Style RendererCommand_CandidateForm::EXCLUDE;
const RendererCommand_CandidateForm_Style RendererCommand_CandidateForm::Style_MIN;
const RendererCommand_CandidateForm_Style RendererCommand_CandidateForm::Style_MAX;
const int RendererCommand_CandidateForm::Style_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RendererCommand_ApplicationInfo_InputFrameworkType_descriptor() {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_enum_descriptors[2];
}
bool RendererCommand_ApplicationInfo_InputFrameworkType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::UNKNOWN_FRAMEWORK;
const RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::TSF;
const RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::IMM32;
const RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::IMKit;
const RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::IBus;
const RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::InputFrameworkType_MIN;
const RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::InputFrameworkType_MAX;
const int RendererCommand_ApplicationInfo::InputFrameworkType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RendererCommand_ApplicationInfo_UIVisibility_descriptor() {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_enum_descriptors[3];
}
bool RendererCommand_ApplicationInfo_UIVisibility_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RendererCommand_ApplicationInfo_UIVisibility RendererCommand_ApplicationInfo::ShowUIDefault;
const RendererCommand_ApplicationInfo_UIVisibility RendererCommand_ApplicationInfo::ShowCompositionWindow;
const RendererCommand_ApplicationInfo_UIVisibility RendererCommand_ApplicationInfo::ShowCandidateWindow;
const RendererCommand_ApplicationInfo_UIVisibility RendererCommand_ApplicationInfo::ShowSuggestWindow;
const RendererCommand_ApplicationInfo_UIVisibility RendererCommand_ApplicationInfo::UIVisibility_MIN;
const RendererCommand_ApplicationInfo_UIVisibility RendererCommand_ApplicationInfo::UIVisibility_MAX;
const int RendererCommand_ApplicationInfo::UIVisibility_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RendererCommand_CommandType_descriptor() {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_enum_descriptors[4];
}
bool RendererCommand_CommandType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RendererCommand_CommandType RendererCommand::NOOP;
const RendererCommand_CommandType RendererCommand::UPDATE;
const RendererCommand_CommandType RendererCommand::SHUTDOWN;
const RendererCommand_CommandType RendererCommand::CommandType_MIN;
const RendererCommand_CommandType RendererCommand::CommandType_MAX;
const int RendererCommand::CommandType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void RendererCommand_Rectangle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RendererCommand_Rectangle::kLeftFieldNumber;
const int RendererCommand_Rectangle::kTopFieldNumber;
const int RendererCommand_Rectangle::kRightFieldNumber;
const int RendererCommand_Rectangle::kBottomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RendererCommand_Rectangle::RendererCommand_Rectangle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_Rectangle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.commands.RendererCommand.Rectangle)
}
RendererCommand_Rectangle::RendererCommand_Rectangle(const RendererCommand_Rectangle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&left_, &from.left_,
    static_cast<size_t>(reinterpret_cast<char*>(&bottom_) -
    reinterpret_cast<char*>(&left_)) + sizeof(bottom_));
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.Rectangle)
}

void RendererCommand_Rectangle::SharedCtor() {
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bottom_) -
      reinterpret_cast<char*>(&left_)) + sizeof(bottom_));
}

RendererCommand_Rectangle::~RendererCommand_Rectangle() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.Rectangle)
  SharedDtor();
}

void RendererCommand_Rectangle::SharedDtor() {
}

void RendererCommand_Rectangle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RendererCommand_Rectangle::descriptor() {
  ::protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RendererCommand_Rectangle& RendererCommand_Rectangle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_Rectangle.base);
  return *internal_default_instance();
}


void RendererCommand_Rectangle::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.Rectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&left_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bottom_) -
        reinterpret_cast<char*>(&left_)) + sizeof(bottom_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RendererCommand_Rectangle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.commands.RendererCommand.Rectangle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_left();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 top = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_top();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 right = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_right();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bottom = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bottom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.commands.RendererCommand.Rectangle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.commands.RendererCommand.Rectangle)
  return false;
#undef DO_
}

void RendererCommand_Rectangle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.commands.RendererCommand.Rectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 left = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left(), output);
  }

  // optional int32 top = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->top(), output);
  }

  // optional int32 right = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->right(), output);
  }

  // optional int32 bottom = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bottom(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.commands.RendererCommand.Rectangle)
}

::google::protobuf::uint8* RendererCommand_Rectangle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.Rectangle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 left = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left(), target);
  }

  // optional int32 top = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->top(), target);
  }

  // optional int32 right = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->right(), target);
  }

  // optional int32 bottom = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bottom(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.Rectangle)
  return target;
}

size_t RendererCommand_Rectangle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.Rectangle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 left = 1;
    if (has_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left());
    }

    // optional int32 top = 2;
    if (has_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top());
    }

    // optional int32 right = 3;
    if (has_right()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->right());
    }

    // optional int32 bottom = 4;
    if (has_bottom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bottom());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_Rectangle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.Rectangle)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_Rectangle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RendererCommand_Rectangle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.Rectangle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.Rectangle)
    MergeFrom(*source);
  }
}

void RendererCommand_Rectangle::MergeFrom(const RendererCommand_Rectangle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.Rectangle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      left_ = from.left_;
    }
    if (cached_has_bits & 0x00000002u) {
      top_ = from.top_;
    }
    if (cached_has_bits & 0x00000004u) {
      right_ = from.right_;
    }
    if (cached_has_bits & 0x00000008u) {
      bottom_ = from.bottom_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_Rectangle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.Rectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_Rectangle::CopyFrom(const RendererCommand_Rectangle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.Rectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_Rectangle::IsInitialized() const {
  return true;
}

void RendererCommand_Rectangle::Swap(RendererCommand_Rectangle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RendererCommand_Rectangle::InternalSwap(RendererCommand_Rectangle* other) {
  using std::swap;
  swap(left_, other->left_);
  swap(top_, other->top_);
  swap(right_, other->right_);
  swap(bottom_, other->bottom_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RendererCommand_Rectangle::GetMetadata() const {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RendererCommand_Point::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RendererCommand_Point::kXFieldNumber;
const int RendererCommand_Point::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RendererCommand_Point::RendererCommand_Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_Point.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.commands.RendererCommand.Point)
}
RendererCommand_Point::RendererCommand_Point(const RendererCommand_Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.Point)
}

void RendererCommand_Point::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

RendererCommand_Point::~RendererCommand_Point() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.Point)
  SharedDtor();
}

void RendererCommand_Point::SharedDtor() {
}

void RendererCommand_Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RendererCommand_Point::descriptor() {
  ::protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RendererCommand_Point& RendererCommand_Point::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_Point.base);
  return *internal_default_instance();
}


void RendererCommand_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RendererCommand_Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.commands.RendererCommand.Point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.commands.RendererCommand.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.commands.RendererCommand.Point)
  return false;
#undef DO_
}

void RendererCommand_Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.commands.RendererCommand.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.commands.RendererCommand.Point)
}

::google::protobuf::uint8* RendererCommand_Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.Point)
  return target;
}

size_t RendererCommand_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.Point)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RendererCommand_Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.Point)
    MergeFrom(*source);
  }
}

void RendererCommand_Point::MergeFrom(const RendererCommand_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_Point::CopyFrom(const RendererCommand_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_Point::IsInitialized() const {
  return true;
}

void RendererCommand_Point::Swap(RendererCommand_Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RendererCommand_Point::InternalSwap(RendererCommand_Point* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RendererCommand_Point::GetMetadata() const {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RendererCommand_WinLogFont::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RendererCommand_WinLogFont::kHeightFieldNumber;
const int RendererCommand_WinLogFont::kWidthFieldNumber;
const int RendererCommand_WinLogFont::kEscapementFieldNumber;
const int RendererCommand_WinLogFont::kOrientationFieldNumber;
const int RendererCommand_WinLogFont::kWeightFieldNumber;
const int RendererCommand_WinLogFont::kItalicFieldNumber;
const int RendererCommand_WinLogFont::kUnderlineFieldNumber;
const int RendererCommand_WinLogFont::kStrikeOutFieldNumber;
const int RendererCommand_WinLogFont::kCharSetFieldNumber;
const int RendererCommand_WinLogFont::kOutPrecisionFieldNumber;
const int RendererCommand_WinLogFont::kClipPrecisionFieldNumber;
const int RendererCommand_WinLogFont::kQualityFieldNumber;
const int RendererCommand_WinLogFont::kPitchAndFamilyFieldNumber;
const int RendererCommand_WinLogFont::kFaceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RendererCommand_WinLogFont::RendererCommand_WinLogFont()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_WinLogFont.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.commands.RendererCommand.WinLogFont)
}
RendererCommand_WinLogFont::RendererCommand_WinLogFont(const RendererCommand_WinLogFont& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  face_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_name()) {
    face_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_name_);
  }
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&char_set_) -
    reinterpret_cast<char*>(&height_)) + sizeof(char_set_));
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.WinLogFont)
}

void RendererCommand_WinLogFont::SharedCtor() {
  face_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pitch_and_family_) -
      reinterpret_cast<char*>(&height_)) + sizeof(pitch_and_family_));
  char_set_ = 1;
}

RendererCommand_WinLogFont::~RendererCommand_WinLogFont() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.WinLogFont)
  SharedDtor();
}

void RendererCommand_WinLogFont::SharedDtor() {
  face_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RendererCommand_WinLogFont::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RendererCommand_WinLogFont::descriptor() {
  ::protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RendererCommand_WinLogFont& RendererCommand_WinLogFont::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_WinLogFont.base);
  return *internal_default_instance();
}


void RendererCommand_WinLogFont::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.WinLogFont)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    face_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 254u) {
    ::memset(&height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&underline_) -
        reinterpret_cast<char*>(&height_)) + sizeof(underline_));
  }
  if (cached_has_bits & 16128u) {
    ::memset(&strike_out_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pitch_and_family_) -
        reinterpret_cast<char*>(&strike_out_)) + sizeof(pitch_and_family_));
    char_set_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RendererCommand_WinLogFont::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.commands.RendererCommand.WinLogFont)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 height = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 width = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 escapement = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_escapement();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &escapement_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 orientation = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_orientation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &orientation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 weight = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool italic = 6 [default = false];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_italic();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &italic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool underline = 7 [default = false];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_underline();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &underline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool strike_out = 8 [default = false];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_strike_out();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &strike_out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 char_set = 9 [default = 1];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_char_set();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &char_set_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 out_precision = 10 [default = 0];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_out_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &out_precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 clip_precision = 11 [default = 0];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_clip_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clip_precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 quality = 12 [default = 0];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_quality();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pitch_and_family = 13 [default = 0];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_pitch_and_family();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pitch_and_family_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string face_name = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_face_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->face_name().data(), static_cast<int>(this->face_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mozc.commands.RendererCommand.WinLogFont.face_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.commands.RendererCommand.WinLogFont)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.commands.RendererCommand.WinLogFont)
  return false;
#undef DO_
}

void RendererCommand_WinLogFont::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.commands.RendererCommand.WinLogFont)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 height = 1 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->height(), output);
  }

  // optional int32 width = 2 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // optional int32 escapement = 3 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->escapement(), output);
  }

  // optional int32 orientation = 4 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->orientation(), output);
  }

  // optional int32 weight = 5 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->weight(), output);
  }

  // optional bool italic = 6 [default = false];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->italic(), output);
  }

  // optional bool underline = 7 [default = false];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->underline(), output);
  }

  // optional bool strike_out = 8 [default = false];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->strike_out(), output);
  }

  // optional int32 char_set = 9 [default = 1];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->char_set(), output);
  }

  // optional int32 out_precision = 10 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->out_precision(), output);
  }

  // optional int32 clip_precision = 11 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->clip_precision(), output);
  }

  // optional int32 quality = 12 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->quality(), output);
  }

  // optional int32 pitch_and_family = 13 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->pitch_and_family(), output);
  }

  // optional string face_name = 14;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_name().data(), static_cast<int>(this->face_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.commands.RendererCommand.WinLogFont.face_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->face_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.commands.RendererCommand.WinLogFont)
}

::google::protobuf::uint8* RendererCommand_WinLogFont::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.WinLogFont)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 height = 1 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->height(), target);
  }

  // optional int32 width = 2 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // optional int32 escapement = 3 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->escapement(), target);
  }

  // optional int32 orientation = 4 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->orientation(), target);
  }

  // optional int32 weight = 5 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->weight(), target);
  }

  // optional bool italic = 6 [default = false];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->italic(), target);
  }

  // optional bool underline = 7 [default = false];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->underline(), target);
  }

  // optional bool strike_out = 8 [default = false];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->strike_out(), target);
  }

  // optional int32 char_set = 9 [default = 1];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->char_set(), target);
  }

  // optional int32 out_precision = 10 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->out_precision(), target);
  }

  // optional int32 clip_precision = 11 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->clip_precision(), target);
  }

  // optional int32 quality = 12 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->quality(), target);
  }

  // optional int32 pitch_and_family = 13 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->pitch_and_family(), target);
  }

  // optional string face_name = 14;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->face_name().data(), static_cast<int>(this->face_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.commands.RendererCommand.WinLogFont.face_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->face_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.WinLogFont)
  return target;
}

size_t RendererCommand_WinLogFont::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.WinLogFont)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string face_name = 14;
    if (has_face_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->face_name());
    }

    // optional int32 height = 1 [default = 0];
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height());
    }

    // optional int32 width = 2 [default = 0];
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }

    // optional int32 escapement = 3 [default = 0];
    if (has_escapement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->escapement());
    }

    // optional int32 orientation = 4 [default = 0];
    if (has_orientation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->orientation());
    }

    // optional int32 weight = 5 [default = 0];
    if (has_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weight());
    }

    // optional bool italic = 6 [default = false];
    if (has_italic()) {
      total_size += 1 + 1;
    }

    // optional bool underline = 7 [default = false];
    if (has_underline()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional bool strike_out = 8 [default = false];
    if (has_strike_out()) {
      total_size += 1 + 1;
    }

    // optional int32 out_precision = 10 [default = 0];
    if (has_out_precision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->out_precision());
    }

    // optional int32 clip_precision = 11 [default = 0];
    if (has_clip_precision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clip_precision());
    }

    // optional int32 quality = 12 [default = 0];
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }

    // optional int32 pitch_and_family = 13 [default = 0];
    if (has_pitch_and_family()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pitch_and_family());
    }

    // optional int32 char_set = 9 [default = 1];
    if (has_char_set()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->char_set());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_WinLogFont::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.WinLogFont)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_WinLogFont* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RendererCommand_WinLogFont>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.WinLogFont)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.WinLogFont)
    MergeFrom(*source);
  }
}

void RendererCommand_WinLogFont::MergeFrom(const RendererCommand_WinLogFont& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.WinLogFont)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_face_name();
      face_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000004u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000008u) {
      escapement_ = from.escapement_;
    }
    if (cached_has_bits & 0x00000010u) {
      orientation_ = from.orientation_;
    }
    if (cached_has_bits & 0x00000020u) {
      weight_ = from.weight_;
    }
    if (cached_has_bits & 0x00000040u) {
      italic_ = from.italic_;
    }
    if (cached_has_bits & 0x00000080u) {
      underline_ = from.underline_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      strike_out_ = from.strike_out_;
    }
    if (cached_has_bits & 0x00000200u) {
      out_precision_ = from.out_precision_;
    }
    if (cached_has_bits & 0x00000400u) {
      clip_precision_ = from.clip_precision_;
    }
    if (cached_has_bits & 0x00000800u) {
      quality_ = from.quality_;
    }
    if (cached_has_bits & 0x00001000u) {
      pitch_and_family_ = from.pitch_and_family_;
    }
    if (cached_has_bits & 0x00002000u) {
      char_set_ = from.char_set_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_WinLogFont::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.WinLogFont)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_WinLogFont::CopyFrom(const RendererCommand_WinLogFont& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.WinLogFont)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_WinLogFont::IsInitialized() const {
  return true;
}

void RendererCommand_WinLogFont::Swap(RendererCommand_WinLogFont* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RendererCommand_WinLogFont::InternalSwap(RendererCommand_WinLogFont* other) {
  using std::swap;
  face_name_.Swap(&other->face_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(height_, other->height_);
  swap(width_, other->width_);
  swap(escapement_, other->escapement_);
  swap(orientation_, other->orientation_);
  swap(weight_, other->weight_);
  swap(italic_, other->italic_);
  swap(underline_, other->underline_);
  swap(strike_out_, other->strike_out_);
  swap(out_precision_, other->out_precision_);
  swap(clip_precision_, other->clip_precision_);
  swap(quality_, other->quality_);
  swap(pitch_and_family_, other->pitch_and_family_);
  swap(char_set_, other->char_set_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RendererCommand_WinLogFont::GetMetadata() const {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RendererCommand_CompositionForm::InitAsDefaultInstance() {
  ::mozc::commands::_RendererCommand_CompositionForm_default_instance_._instance.get_mutable()->current_position_ = const_cast< ::mozc::commands::RendererCommand_Point*>(
      ::mozc::commands::RendererCommand_Point::internal_default_instance());
  ::mozc::commands::_RendererCommand_CompositionForm_default_instance_._instance.get_mutable()->area_ = const_cast< ::mozc::commands::RendererCommand_Rectangle*>(
      ::mozc::commands::RendererCommand_Rectangle::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RendererCommand_CompositionForm::kCurrentPositionFieldNumber;
const int RendererCommand_CompositionForm::kAreaFieldNumber;
const int RendererCommand_CompositionForm::kStyleBitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RendererCommand_CompositionForm::RendererCommand_CompositionForm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_CompositionForm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.commands.RendererCommand.CompositionForm)
}
RendererCommand_CompositionForm::RendererCommand_CompositionForm(const RendererCommand_CompositionForm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_current_position()) {
    current_position_ = new ::mozc::commands::RendererCommand_Point(*from.current_position_);
  } else {
    current_position_ = NULL;
  }
  if (from.has_area()) {
    area_ = new ::mozc::commands::RendererCommand_Rectangle(*from.area_);
  } else {
    area_ = NULL;
  }
  style_bits_ = from.style_bits_;
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.CompositionForm)
}

void RendererCommand_CompositionForm::SharedCtor() {
  ::memset(&current_position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&style_bits_) -
      reinterpret_cast<char*>(&current_position_)) + sizeof(style_bits_));
}

RendererCommand_CompositionForm::~RendererCommand_CompositionForm() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.CompositionForm)
  SharedDtor();
}

void RendererCommand_CompositionForm::SharedDtor() {
  if (this != internal_default_instance()) delete current_position_;
  if (this != internal_default_instance()) delete area_;
}

void RendererCommand_CompositionForm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RendererCommand_CompositionForm::descriptor() {
  ::protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RendererCommand_CompositionForm& RendererCommand_CompositionForm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_CompositionForm.base);
  return *internal_default_instance();
}


void RendererCommand_CompositionForm::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.CompositionForm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(current_position_ != NULL);
      current_position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(area_ != NULL);
      area_->Clear();
    }
  }
  style_bits_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RendererCommand_CompositionForm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.commands.RendererCommand.CompositionForm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mozc.commands.RendererCommand.Point current_position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_current_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.RendererCommand.Rectangle area = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_area()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 style_bits = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_style_bits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.commands.RendererCommand.CompositionForm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.commands.RendererCommand.CompositionForm)
  return false;
#undef DO_
}

void RendererCommand_CompositionForm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.commands.RendererCommand.CompositionForm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mozc.commands.RendererCommand.Point current_position = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_current_position(), output);
  }

  // optional .mozc.commands.RendererCommand.Rectangle area = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_area(), output);
  }

  // optional uint32 style_bits = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->style_bits(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.commands.RendererCommand.CompositionForm)
}

::google::protobuf::uint8* RendererCommand_CompositionForm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.CompositionForm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mozc.commands.RendererCommand.Point current_position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_current_position(), deterministic, target);
  }

  // optional .mozc.commands.RendererCommand.Rectangle area = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_area(), deterministic, target);
  }

  // optional uint32 style_bits = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->style_bits(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.CompositionForm)
  return target;
}

size_t RendererCommand_CompositionForm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.CompositionForm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .mozc.commands.RendererCommand.Point current_position = 2;
    if (has_current_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *current_position_);
    }

    // optional .mozc.commands.RendererCommand.Rectangle area = 3;
    if (has_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *area_);
    }

    // optional uint32 style_bits = 4 [default = 0];
    if (has_style_bits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_bits());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_CompositionForm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.CompositionForm)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_CompositionForm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RendererCommand_CompositionForm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.CompositionForm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.CompositionForm)
    MergeFrom(*source);
  }
}

void RendererCommand_CompositionForm::MergeFrom(const RendererCommand_CompositionForm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.CompositionForm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_current_position()->::mozc::commands::RendererCommand_Point::MergeFrom(from.current_position());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_area()->::mozc::commands::RendererCommand_Rectangle::MergeFrom(from.area());
    }
    if (cached_has_bits & 0x00000004u) {
      style_bits_ = from.style_bits_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_CompositionForm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.CompositionForm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_CompositionForm::CopyFrom(const RendererCommand_CompositionForm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.CompositionForm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_CompositionForm::IsInitialized() const {
  return true;
}

void RendererCommand_CompositionForm::Swap(RendererCommand_CompositionForm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RendererCommand_CompositionForm::InternalSwap(RendererCommand_CompositionForm* other) {
  using std::swap;
  swap(current_position_, other->current_position_);
  swap(area_, other->area_);
  swap(style_bits_, other->style_bits_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RendererCommand_CompositionForm::GetMetadata() const {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RendererCommand_CandidateForm::InitAsDefaultInstance() {
  ::mozc::commands::_RendererCommand_CandidateForm_default_instance_._instance.get_mutable()->current_position_ = const_cast< ::mozc::commands::RendererCommand_Point*>(
      ::mozc::commands::RendererCommand_Point::internal_default_instance());
  ::mozc::commands::_RendererCommand_CandidateForm_default_instance_._instance.get_mutable()->area_ = const_cast< ::mozc::commands::RendererCommand_Rectangle*>(
      ::mozc::commands::RendererCommand_Rectangle::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RendererCommand_CandidateForm::kCurrentPositionFieldNumber;
const int RendererCommand_CandidateForm::kAreaFieldNumber;
const int RendererCommand_CandidateForm::kStyleBitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RendererCommand_CandidateForm::RendererCommand_CandidateForm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_CandidateForm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.commands.RendererCommand.CandidateForm)
}
RendererCommand_CandidateForm::RendererCommand_CandidateForm(const RendererCommand_CandidateForm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_current_position()) {
    current_position_ = new ::mozc::commands::RendererCommand_Point(*from.current_position_);
  } else {
    current_position_ = NULL;
  }
  if (from.has_area()) {
    area_ = new ::mozc::commands::RendererCommand_Rectangle(*from.area_);
  } else {
    area_ = NULL;
  }
  style_bits_ = from.style_bits_;
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.CandidateForm)
}

void RendererCommand_CandidateForm::SharedCtor() {
  ::memset(&current_position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&style_bits_) -
      reinterpret_cast<char*>(&current_position_)) + sizeof(style_bits_));
}

RendererCommand_CandidateForm::~RendererCommand_CandidateForm() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.CandidateForm)
  SharedDtor();
}

void RendererCommand_CandidateForm::SharedDtor() {
  if (this != internal_default_instance()) delete current_position_;
  if (this != internal_default_instance()) delete area_;
}

void RendererCommand_CandidateForm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RendererCommand_CandidateForm::descriptor() {
  ::protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RendererCommand_CandidateForm& RendererCommand_CandidateForm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_CandidateForm.base);
  return *internal_default_instance();
}


void RendererCommand_CandidateForm::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.CandidateForm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(current_position_ != NULL);
      current_position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(area_ != NULL);
      area_->Clear();
    }
  }
  style_bits_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RendererCommand_CandidateForm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.commands.RendererCommand.CandidateForm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mozc.commands.RendererCommand.Point current_position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_current_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.RendererCommand.Rectangle area = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_area()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 style_bits = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_style_bits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.commands.RendererCommand.CandidateForm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.commands.RendererCommand.CandidateForm)
  return false;
#undef DO_
}

void RendererCommand_CandidateForm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.commands.RendererCommand.CandidateForm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mozc.commands.RendererCommand.Point current_position = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_current_position(), output);
  }

  // optional .mozc.commands.RendererCommand.Rectangle area = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_area(), output);
  }

  // optional uint32 style_bits = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->style_bits(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.commands.RendererCommand.CandidateForm)
}

::google::protobuf::uint8* RendererCommand_CandidateForm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.CandidateForm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mozc.commands.RendererCommand.Point current_position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_current_position(), deterministic, target);
  }

  // optional .mozc.commands.RendererCommand.Rectangle area = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_area(), deterministic, target);
  }

  // optional uint32 style_bits = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->style_bits(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.CandidateForm)
  return target;
}

size_t RendererCommand_CandidateForm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.CandidateForm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .mozc.commands.RendererCommand.Point current_position = 2;
    if (has_current_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *current_position_);
    }

    // optional .mozc.commands.RendererCommand.Rectangle area = 3;
    if (has_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *area_);
    }

    // optional uint32 style_bits = 4 [default = 0];
    if (has_style_bits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_bits());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_CandidateForm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.CandidateForm)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_CandidateForm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RendererCommand_CandidateForm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.CandidateForm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.CandidateForm)
    MergeFrom(*source);
  }
}

void RendererCommand_CandidateForm::MergeFrom(const RendererCommand_CandidateForm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.CandidateForm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_current_position()->::mozc::commands::RendererCommand_Point::MergeFrom(from.current_position());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_area()->::mozc::commands::RendererCommand_Rectangle::MergeFrom(from.area());
    }
    if (cached_has_bits & 0x00000004u) {
      style_bits_ = from.style_bits_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_CandidateForm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.CandidateForm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_CandidateForm::CopyFrom(const RendererCommand_CandidateForm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.CandidateForm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_CandidateForm::IsInitialized() const {
  return true;
}

void RendererCommand_CandidateForm::Swap(RendererCommand_CandidateForm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RendererCommand_CandidateForm::InternalSwap(RendererCommand_CandidateForm* other) {
  using std::swap;
  swap(current_position_, other->current_position_);
  swap(area_, other->area_);
  swap(style_bits_, other->style_bits_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RendererCommand_CandidateForm::GetMetadata() const {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RendererCommand_CharacterPosition::InitAsDefaultInstance() {
  ::mozc::commands::_RendererCommand_CharacterPosition_default_instance_._instance.get_mutable()->top_left_ = const_cast< ::mozc::commands::RendererCommand_Point*>(
      ::mozc::commands::RendererCommand_Point::internal_default_instance());
  ::mozc::commands::_RendererCommand_CharacterPosition_default_instance_._instance.get_mutable()->document_area_ = const_cast< ::mozc::commands::RendererCommand_Rectangle*>(
      ::mozc::commands::RendererCommand_Rectangle::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RendererCommand_CharacterPosition::kPositionFieldNumber;
const int RendererCommand_CharacterPosition::kTopLeftFieldNumber;
const int RendererCommand_CharacterPosition::kLineHeightFieldNumber;
const int RendererCommand_CharacterPosition::kDocumentAreaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RendererCommand_CharacterPosition::RendererCommand_CharacterPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_CharacterPosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.commands.RendererCommand.CharacterPosition)
}
RendererCommand_CharacterPosition::RendererCommand_CharacterPosition(const RendererCommand_CharacterPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_top_left()) {
    top_left_ = new ::mozc::commands::RendererCommand_Point(*from.top_left_);
  } else {
    top_left_ = NULL;
  }
  if (from.has_document_area()) {
    document_area_ = new ::mozc::commands::RendererCommand_Rectangle(*from.document_area_);
  } else {
    document_area_ = NULL;
  }
  ::memcpy(&position_, &from.position_,
    static_cast<size_t>(reinterpret_cast<char*>(&line_height_) -
    reinterpret_cast<char*>(&position_)) + sizeof(line_height_));
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.CharacterPosition)
}

void RendererCommand_CharacterPosition::SharedCtor() {
  ::memset(&top_left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&line_height_) -
      reinterpret_cast<char*>(&top_left_)) + sizeof(line_height_));
}

RendererCommand_CharacterPosition::~RendererCommand_CharacterPosition() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.CharacterPosition)
  SharedDtor();
}

void RendererCommand_CharacterPosition::SharedDtor() {
  if (this != internal_default_instance()) delete top_left_;
  if (this != internal_default_instance()) delete document_area_;
}

void RendererCommand_CharacterPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RendererCommand_CharacterPosition::descriptor() {
  ::protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RendererCommand_CharacterPosition& RendererCommand_CharacterPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_CharacterPosition.base);
  return *internal_default_instance();
}


void RendererCommand_CharacterPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.CharacterPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(top_left_ != NULL);
      top_left_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(document_area_ != NULL);
      document_area_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&position_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&line_height_) -
        reinterpret_cast<char*>(&position_)) + sizeof(line_height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RendererCommand_CharacterPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.commands.RendererCommand.CharacterPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.RendererCommand.Point top_left = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 line_height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_line_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &line_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.RendererCommand.Rectangle document_area = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_document_area()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.commands.RendererCommand.CharacterPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.commands.RendererCommand.CharacterPosition)
  return false;
#undef DO_
}

void RendererCommand_CharacterPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.commands.RendererCommand.CharacterPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 position = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->position(), output);
  }

  // optional .mozc.commands.RendererCommand.Point top_left = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_top_left(), output);
  }

  // optional uint32 line_height = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->line_height(), output);
  }

  // optional .mozc.commands.RendererCommand.Rectangle document_area = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_document_area(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.commands.RendererCommand.CharacterPosition)
}

::google::protobuf::uint8* RendererCommand_CharacterPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.CharacterPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 position = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->position(), target);
  }

  // optional .mozc.commands.RendererCommand.Point top_left = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_top_left(), deterministic, target);
  }

  // optional uint32 line_height = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->line_height(), target);
  }

  // optional .mozc.commands.RendererCommand.Rectangle document_area = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_document_area(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.CharacterPosition)
  return target;
}

size_t RendererCommand_CharacterPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.CharacterPosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .mozc.commands.RendererCommand.Point top_left = 2;
    if (has_top_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *top_left_);
    }

    // optional .mozc.commands.RendererCommand.Rectangle document_area = 4;
    if (has_document_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *document_area_);
    }

    // optional uint32 position = 1;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->position());
    }

    // optional uint32 line_height = 3;
    if (has_line_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->line_height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_CharacterPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.CharacterPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_CharacterPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RendererCommand_CharacterPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.CharacterPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.CharacterPosition)
    MergeFrom(*source);
  }
}

void RendererCommand_CharacterPosition::MergeFrom(const RendererCommand_CharacterPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.CharacterPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_top_left()->::mozc::commands::RendererCommand_Point::MergeFrom(from.top_left());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_document_area()->::mozc::commands::RendererCommand_Rectangle::MergeFrom(from.document_area());
    }
    if (cached_has_bits & 0x00000004u) {
      position_ = from.position_;
    }
    if (cached_has_bits & 0x00000008u) {
      line_height_ = from.line_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_CharacterPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.CharacterPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_CharacterPosition::CopyFrom(const RendererCommand_CharacterPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.CharacterPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_CharacterPosition::IsInitialized() const {
  return true;
}

void RendererCommand_CharacterPosition::Swap(RendererCommand_CharacterPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RendererCommand_CharacterPosition::InternalSwap(RendererCommand_CharacterPosition* other) {
  using std::swap;
  swap(top_left_, other->top_left_);
  swap(document_area_, other->document_area_);
  swap(position_, other->position_);
  swap(line_height_, other->line_height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RendererCommand_CharacterPosition::GetMetadata() const {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RendererCommand_CaretInfo::InitAsDefaultInstance() {
  ::mozc::commands::_RendererCommand_CaretInfo_default_instance_._instance.get_mutable()->caret_rect_ = const_cast< ::mozc::commands::RendererCommand_Rectangle*>(
      ::mozc::commands::RendererCommand_Rectangle::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RendererCommand_CaretInfo::kBlinkingFieldNumber;
const int RendererCommand_CaretInfo::kCaretRectFieldNumber;
const int RendererCommand_CaretInfo::kTargetWindowHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RendererCommand_CaretInfo::RendererCommand_CaretInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_CaretInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.commands.RendererCommand.CaretInfo)
}
RendererCommand_CaretInfo::RendererCommand_CaretInfo(const RendererCommand_CaretInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_caret_rect()) {
    caret_rect_ = new ::mozc::commands::RendererCommand_Rectangle(*from.caret_rect_);
  } else {
    caret_rect_ = NULL;
  }
  ::memcpy(&blinking_, &from.blinking_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_window_handle_) -
    reinterpret_cast<char*>(&blinking_)) + sizeof(target_window_handle_));
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.CaretInfo)
}

void RendererCommand_CaretInfo::SharedCtor() {
  ::memset(&caret_rect_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_window_handle_) -
      reinterpret_cast<char*>(&caret_rect_)) + sizeof(target_window_handle_));
}

RendererCommand_CaretInfo::~RendererCommand_CaretInfo() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.CaretInfo)
  SharedDtor();
}

void RendererCommand_CaretInfo::SharedDtor() {
  if (this != internal_default_instance()) delete caret_rect_;
}

void RendererCommand_CaretInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RendererCommand_CaretInfo::descriptor() {
  ::protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RendererCommand_CaretInfo& RendererCommand_CaretInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_CaretInfo.base);
  return *internal_default_instance();
}


void RendererCommand_CaretInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.CaretInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(caret_rect_ != NULL);
    caret_rect_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&blinking_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_window_handle_) -
        reinterpret_cast<char*>(&blinking_)) + sizeof(target_window_handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RendererCommand_CaretInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.commands.RendererCommand.CaretInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool blinking = 1 [default = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_blinking();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &blinking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.RendererCommand.Rectangle caret_rect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_caret_rect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_window_handle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_target_window_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_window_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.commands.RendererCommand.CaretInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.commands.RendererCommand.CaretInfo)
  return false;
#undef DO_
}

void RendererCommand_CaretInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.commands.RendererCommand.CaretInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool blinking = 1 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->blinking(), output);
  }

  // optional .mozc.commands.RendererCommand.Rectangle caret_rect = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_caret_rect(), output);
  }

  // optional uint32 target_window_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_window_handle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.commands.RendererCommand.CaretInfo)
}

::google::protobuf::uint8* RendererCommand_CaretInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.CaretInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool blinking = 1 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->blinking(), target);
  }

  // optional .mozc.commands.RendererCommand.Rectangle caret_rect = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_caret_rect(), deterministic, target);
  }

  // optional uint32 target_window_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_window_handle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.CaretInfo)
  return target;
}

size_t RendererCommand_CaretInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.CaretInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .mozc.commands.RendererCommand.Rectangle caret_rect = 2;
    if (has_caret_rect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *caret_rect_);
    }

    // optional bool blinking = 1 [default = false];
    if (has_blinking()) {
      total_size += 1 + 1;
    }

    // optional uint32 target_window_handle = 3;
    if (has_target_window_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_window_handle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_CaretInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.CaretInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_CaretInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RendererCommand_CaretInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.CaretInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.CaretInfo)
    MergeFrom(*source);
  }
}

void RendererCommand_CaretInfo::MergeFrom(const RendererCommand_CaretInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.CaretInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_caret_rect()->::mozc::commands::RendererCommand_Rectangle::MergeFrom(from.caret_rect());
    }
    if (cached_has_bits & 0x00000002u) {
      blinking_ = from.blinking_;
    }
    if (cached_has_bits & 0x00000004u) {
      target_window_handle_ = from.target_window_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_CaretInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.CaretInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_CaretInfo::CopyFrom(const RendererCommand_CaretInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.CaretInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_CaretInfo::IsInitialized() const {
  return true;
}

void RendererCommand_CaretInfo::Swap(RendererCommand_CaretInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RendererCommand_CaretInfo::InternalSwap(RendererCommand_CaretInfo* other) {
  using std::swap;
  swap(caret_rect_, other->caret_rect_);
  swap(blinking_, other->blinking_);
  swap(target_window_handle_, other->target_window_handle_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RendererCommand_CaretInfo::GetMetadata() const {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RendererCommand_IndicatorInfo::InitAsDefaultInstance() {
  ::mozc::commands::_RendererCommand_IndicatorInfo_default_instance_._instance.get_mutable()->status_ = const_cast< ::mozc::commands::Status*>(
      ::mozc::commands::Status::internal_default_instance());
}
void RendererCommand_IndicatorInfo::clear_status() {
  if (status_ != NULL) status_->Clear();
  clear_has_status();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RendererCommand_IndicatorInfo::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RendererCommand_IndicatorInfo::RendererCommand_IndicatorInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_IndicatorInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.commands.RendererCommand.IndicatorInfo)
}
RendererCommand_IndicatorInfo::RendererCommand_IndicatorInfo(const RendererCommand_IndicatorInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::mozc::commands::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.IndicatorInfo)
}

void RendererCommand_IndicatorInfo::SharedCtor() {
  status_ = NULL;
}

RendererCommand_IndicatorInfo::~RendererCommand_IndicatorInfo() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.IndicatorInfo)
  SharedDtor();
}

void RendererCommand_IndicatorInfo::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void RendererCommand_IndicatorInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RendererCommand_IndicatorInfo::descriptor() {
  ::protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RendererCommand_IndicatorInfo& RendererCommand_IndicatorInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_IndicatorInfo.base);
  return *internal_default_instance();
}


void RendererCommand_IndicatorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.IndicatorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(status_ != NULL);
    status_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RendererCommand_IndicatorInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.commands.RendererCommand.IndicatorInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mozc.commands.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.commands.RendererCommand.IndicatorInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.commands.RendererCommand.IndicatorInfo)
  return false;
#undef DO_
}

void RendererCommand_IndicatorInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.commands.RendererCommand.IndicatorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mozc.commands.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.commands.RendererCommand.IndicatorInfo)
}

::google::protobuf::uint8* RendererCommand_IndicatorInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.IndicatorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mozc.commands.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.IndicatorInfo)
  return target;
}

size_t RendererCommand_IndicatorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.IndicatorInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .mozc.commands.Status status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_IndicatorInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.IndicatorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_IndicatorInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RendererCommand_IndicatorInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.IndicatorInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.IndicatorInfo)
    MergeFrom(*source);
  }
}

void RendererCommand_IndicatorInfo::MergeFrom(const RendererCommand_IndicatorInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.IndicatorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::mozc::commands::Status::MergeFrom(from.status());
  }
}

void RendererCommand_IndicatorInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.IndicatorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_IndicatorInfo::CopyFrom(const RendererCommand_IndicatorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.IndicatorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_IndicatorInfo::IsInitialized() const {
  return true;
}

void RendererCommand_IndicatorInfo::Swap(RendererCommand_IndicatorInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RendererCommand_IndicatorInfo::InternalSwap(RendererCommand_IndicatorInfo* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RendererCommand_IndicatorInfo::GetMetadata() const {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RendererCommand_ApplicationInfo::InitAsDefaultInstance() {
  ::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_._instance.get_mutable()->composition_font_ = const_cast< ::mozc::commands::RendererCommand_WinLogFont*>(
      ::mozc::commands::RendererCommand_WinLogFont::internal_default_instance());
  ::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_._instance.get_mutable()->composition_form_ = const_cast< ::mozc::commands::RendererCommand_CompositionForm*>(
      ::mozc::commands::RendererCommand_CompositionForm::internal_default_instance());
  ::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_._instance.get_mutable()->candidate_form_ = const_cast< ::mozc::commands::RendererCommand_CandidateForm*>(
      ::mozc::commands::RendererCommand_CandidateForm::internal_default_instance());
  ::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_._instance.get_mutable()->composition_target_ = const_cast< ::mozc::commands::RendererCommand_CharacterPosition*>(
      ::mozc::commands::RendererCommand_CharacterPosition::internal_default_instance());
  ::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_._instance.get_mutable()->caret_info_ = const_cast< ::mozc::commands::RendererCommand_CaretInfo*>(
      ::mozc::commands::RendererCommand_CaretInfo::internal_default_instance());
  ::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_._instance.get_mutable()->indicator_info_ = const_cast< ::mozc::commands::RendererCommand_IndicatorInfo*>(
      ::mozc::commands::RendererCommand_IndicatorInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RendererCommand_ApplicationInfo::kProcessIdFieldNumber;
const int RendererCommand_ApplicationInfo::kThreadIdFieldNumber;
const int RendererCommand_ApplicationInfo::kReceiverHandleFieldNumber;
const int RendererCommand_ApplicationInfo::kTargetWindowHandleFieldNumber;
const int RendererCommand_ApplicationInfo::kCompositionFontFieldNumber;
const int RendererCommand_ApplicationInfo::kInputFrameworkFieldNumber;
const int RendererCommand_ApplicationInfo::kCompositionFormFieldNumber;
const int RendererCommand_ApplicationInfo::kCandidateFormFieldNumber;
const int RendererCommand_ApplicationInfo::kUiVisibilitiesFieldNumber;
const int RendererCommand_ApplicationInfo::kCompositionTargetFieldNumber;
const int RendererCommand_ApplicationInfo::kCaretInfoFieldNumber;
const int RendererCommand_ApplicationInfo::kPangoFontDescriptionFieldNumber;
const int RendererCommand_ApplicationInfo::kIndicatorInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RendererCommand_ApplicationInfo::RendererCommand_ApplicationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_ApplicationInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.commands.RendererCommand.ApplicationInfo)
}
RendererCommand_ApplicationInfo::RendererCommand_ApplicationInfo(const RendererCommand_ApplicationInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pango_font_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pango_font_description()) {
    pango_font_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pango_font_description_);
  }
  if (from.has_composition_font()) {
    composition_font_ = new ::mozc::commands::RendererCommand_WinLogFont(*from.composition_font_);
  } else {
    composition_font_ = NULL;
  }
  if (from.has_composition_form()) {
    composition_form_ = new ::mozc::commands::RendererCommand_CompositionForm(*from.composition_form_);
  } else {
    composition_form_ = NULL;
  }
  if (from.has_candidate_form()) {
    candidate_form_ = new ::mozc::commands::RendererCommand_CandidateForm(*from.candidate_form_);
  } else {
    candidate_form_ = NULL;
  }
  if (from.has_composition_target()) {
    composition_target_ = new ::mozc::commands::RendererCommand_CharacterPosition(*from.composition_target_);
  } else {
    composition_target_ = NULL;
  }
  if (from.has_caret_info()) {
    caret_info_ = new ::mozc::commands::RendererCommand_CaretInfo(*from.caret_info_);
  } else {
    caret_info_ = NULL;
  }
  if (from.has_indicator_info()) {
    indicator_info_ = new ::mozc::commands::RendererCommand_IndicatorInfo(*from.indicator_info_);
  } else {
    indicator_info_ = NULL;
  }
  ::memcpy(&process_id_, &from.process_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ui_visibilities_) -
    reinterpret_cast<char*>(&process_id_)) + sizeof(ui_visibilities_));
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.ApplicationInfo)
}

void RendererCommand_ApplicationInfo::SharedCtor() {
  pango_font_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&composition_font_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ui_visibilities_) -
      reinterpret_cast<char*>(&composition_font_)) + sizeof(ui_visibilities_));
}

RendererCommand_ApplicationInfo::~RendererCommand_ApplicationInfo() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.ApplicationInfo)
  SharedDtor();
}

void RendererCommand_ApplicationInfo::SharedDtor() {
  pango_font_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete composition_font_;
  if (this != internal_default_instance()) delete composition_form_;
  if (this != internal_default_instance()) delete candidate_form_;
  if (this != internal_default_instance()) delete composition_target_;
  if (this != internal_default_instance()) delete caret_info_;
  if (this != internal_default_instance()) delete indicator_info_;
}

void RendererCommand_ApplicationInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RendererCommand_ApplicationInfo::descriptor() {
  ::protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RendererCommand_ApplicationInfo& RendererCommand_ApplicationInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand_ApplicationInfo.base);
  return *internal_default_instance();
}


void RendererCommand_ApplicationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.ApplicationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      pango_font_description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(composition_font_ != NULL);
      composition_font_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(composition_form_ != NULL);
      composition_form_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(candidate_form_ != NULL);
      candidate_form_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(composition_target_ != NULL);
      composition_target_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(caret_info_ != NULL);
      caret_info_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(indicator_info_ != NULL);
      indicator_info_->Clear();
    }
  }
  process_id_ = 0u;
  if (cached_has_bits & 7936u) {
    ::memset(&thread_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ui_visibilities_) -
        reinterpret_cast<char*>(&thread_id_)) + sizeof(ui_visibilities_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RendererCommand_ApplicationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.commands.RendererCommand.ApplicationInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 process_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_process_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &process_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 thread_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_thread_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &thread_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 receiver_handle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_receiver_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receiver_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 target_window_handle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_target_window_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_window_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.RendererCommand.WinLogFont composition_font = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_composition_font()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.RendererCommand.ApplicationInfo.InputFrameworkType input_framework = 6 [default = UNKNOWN_FRAMEWORK];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mozc::commands::RendererCommand_ApplicationInfo_InputFrameworkType_IsValid(value)) {
            set_input_framework(static_cast< ::mozc::commands::RendererCommand_ApplicationInfo_InputFrameworkType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.RendererCommand.CompositionForm composition_form = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_composition_form()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.RendererCommand.CandidateForm candidate_form = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_candidate_form()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ui_visibilities = 9 [default = 0];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_ui_visibilities();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ui_visibilities_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.RendererCommand.CharacterPosition composition_target = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_composition_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.RendererCommand.CaretInfo caret_info = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_caret_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pango_font_description = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pango_font_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pango_font_description().data(), static_cast<int>(this->pango_font_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mozc.commands.RendererCommand.ApplicationInfo.pango_font_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.RendererCommand.IndicatorInfo indicator_info = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_indicator_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.commands.RendererCommand.ApplicationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.commands.RendererCommand.ApplicationInfo)
  return false;
#undef DO_
}

void RendererCommand_ApplicationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.commands.RendererCommand.ApplicationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 process_id = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->process_id(), output);
  }

  // optional uint32 thread_id = 2;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->thread_id(), output);
  }

  // optional uint32 receiver_handle = 3;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->receiver_handle(), output);
  }

  // optional uint32 target_window_handle = 4;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->target_window_handle(), output);
  }

  // optional .mozc.commands.RendererCommand.WinLogFont composition_font = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_composition_font(), output);
  }

  // optional .mozc.commands.RendererCommand.ApplicationInfo.InputFrameworkType input_framework = 6 [default = UNKNOWN_FRAMEWORK];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->input_framework(), output);
  }

  // optional .mozc.commands.RendererCommand.CompositionForm composition_form = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_composition_form(), output);
  }

  // optional .mozc.commands.RendererCommand.CandidateForm candidate_form = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_candidate_form(), output);
  }

  // optional int32 ui_visibilities = 9 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->ui_visibilities(), output);
  }

  // optional .mozc.commands.RendererCommand.CharacterPosition composition_target = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_composition_target(), output);
  }

  // optional .mozc.commands.RendererCommand.CaretInfo caret_info = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_caret_info(), output);
  }

  // optional string pango_font_description = 13;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pango_font_description().data(), static_cast<int>(this->pango_font_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.commands.RendererCommand.ApplicationInfo.pango_font_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->pango_font_description(), output);
  }

  // optional .mozc.commands.RendererCommand.IndicatorInfo indicator_info = 14;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_indicator_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.commands.RendererCommand.ApplicationInfo)
}

::google::protobuf::uint8* RendererCommand_ApplicationInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.ApplicationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 process_id = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->process_id(), target);
  }

  // optional uint32 thread_id = 2;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->thread_id(), target);
  }

  // optional uint32 receiver_handle = 3;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->receiver_handle(), target);
  }

  // optional uint32 target_window_handle = 4;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->target_window_handle(), target);
  }

  // optional .mozc.commands.RendererCommand.WinLogFont composition_font = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_composition_font(), deterministic, target);
  }

  // optional .mozc.commands.RendererCommand.ApplicationInfo.InputFrameworkType input_framework = 6 [default = UNKNOWN_FRAMEWORK];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->input_framework(), target);
  }

  // optional .mozc.commands.RendererCommand.CompositionForm composition_form = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_composition_form(), deterministic, target);
  }

  // optional .mozc.commands.RendererCommand.CandidateForm candidate_form = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_candidate_form(), deterministic, target);
  }

  // optional int32 ui_visibilities = 9 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->ui_visibilities(), target);
  }

  // optional .mozc.commands.RendererCommand.CharacterPosition composition_target = 10;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_composition_target(), deterministic, target);
  }

  // optional .mozc.commands.RendererCommand.CaretInfo caret_info = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_caret_info(), deterministic, target);
  }

  // optional string pango_font_description = 13;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pango_font_description().data(), static_cast<int>(this->pango_font_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mozc.commands.RendererCommand.ApplicationInfo.pango_font_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->pango_font_description(), target);
  }

  // optional .mozc.commands.RendererCommand.IndicatorInfo indicator_info = 14;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_indicator_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.ApplicationInfo)
  return target;
}

size_t RendererCommand_ApplicationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.ApplicationInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string pango_font_description = 13;
    if (has_pango_font_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pango_font_description());
    }

    // optional .mozc.commands.RendererCommand.WinLogFont composition_font = 5;
    if (has_composition_font()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *composition_font_);
    }

    // optional .mozc.commands.RendererCommand.CompositionForm composition_form = 7;
    if (has_composition_form()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *composition_form_);
    }

    // optional .mozc.commands.RendererCommand.CandidateForm candidate_form = 8;
    if (has_candidate_form()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *candidate_form_);
    }

    // optional .mozc.commands.RendererCommand.CharacterPosition composition_target = 10;
    if (has_composition_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *composition_target_);
    }

    // optional .mozc.commands.RendererCommand.CaretInfo caret_info = 11;
    if (has_caret_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *caret_info_);
    }

    // optional .mozc.commands.RendererCommand.IndicatorInfo indicator_info = 14;
    if (has_indicator_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *indicator_info_);
    }

    // optional uint32 process_id = 1;
    if (has_process_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->process_id());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional uint32 thread_id = 2;
    if (has_thread_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->thread_id());
    }

    // optional uint32 receiver_handle = 3;
    if (has_receiver_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receiver_handle());
    }

    // optional uint32 target_window_handle = 4;
    if (has_target_window_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->target_window_handle());
    }

    // optional .mozc.commands.RendererCommand.ApplicationInfo.InputFrameworkType input_framework = 6 [default = UNKNOWN_FRAMEWORK];
    if (has_input_framework()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->input_framework());
    }

    // optional int32 ui_visibilities = 9 [default = 0];
    if (has_ui_visibilities()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ui_visibilities());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_ApplicationInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.ApplicationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_ApplicationInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RendererCommand_ApplicationInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.ApplicationInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.ApplicationInfo)
    MergeFrom(*source);
  }
}

void RendererCommand_ApplicationInfo::MergeFrom(const RendererCommand_ApplicationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.ApplicationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pango_font_description();
      pango_font_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pango_font_description_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_composition_font()->::mozc::commands::RendererCommand_WinLogFont::MergeFrom(from.composition_font());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_composition_form()->::mozc::commands::RendererCommand_CompositionForm::MergeFrom(from.composition_form());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_candidate_form()->::mozc::commands::RendererCommand_CandidateForm::MergeFrom(from.candidate_form());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_composition_target()->::mozc::commands::RendererCommand_CharacterPosition::MergeFrom(from.composition_target());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_caret_info()->::mozc::commands::RendererCommand_CaretInfo::MergeFrom(from.caret_info());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_indicator_info()->::mozc::commands::RendererCommand_IndicatorInfo::MergeFrom(from.indicator_info());
    }
    if (cached_has_bits & 0x00000080u) {
      process_id_ = from.process_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      thread_id_ = from.thread_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      receiver_handle_ = from.receiver_handle_;
    }
    if (cached_has_bits & 0x00000400u) {
      target_window_handle_ = from.target_window_handle_;
    }
    if (cached_has_bits & 0x00000800u) {
      input_framework_ = from.input_framework_;
    }
    if (cached_has_bits & 0x00001000u) {
      ui_visibilities_ = from.ui_visibilities_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_ApplicationInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.ApplicationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_ApplicationInfo::CopyFrom(const RendererCommand_ApplicationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.ApplicationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_ApplicationInfo::IsInitialized() const {
  return true;
}

void RendererCommand_ApplicationInfo::Swap(RendererCommand_ApplicationInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RendererCommand_ApplicationInfo::InternalSwap(RendererCommand_ApplicationInfo* other) {
  using std::swap;
  pango_font_description_.Swap(&other->pango_font_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(composition_font_, other->composition_font_);
  swap(composition_form_, other->composition_form_);
  swap(candidate_form_, other->candidate_form_);
  swap(composition_target_, other->composition_target_);
  swap(caret_info_, other->caret_info_);
  swap(indicator_info_, other->indicator_info_);
  swap(process_id_, other->process_id_);
  swap(thread_id_, other->thread_id_);
  swap(receiver_handle_, other->receiver_handle_);
  swap(target_window_handle_, other->target_window_handle_);
  swap(input_framework_, other->input_framework_);
  swap(ui_visibilities_, other->ui_visibilities_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RendererCommand_ApplicationInfo::GetMetadata() const {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RendererCommand::InitAsDefaultInstance() {
  ::mozc::commands::_RendererCommand_default_instance_._instance.get_mutable()->output_ = const_cast< ::mozc::commands::Output*>(
      ::mozc::commands::Output::internal_default_instance());
  ::mozc::commands::_RendererCommand_default_instance_._instance.get_mutable()->preedit_rectangle_ = const_cast< ::mozc::commands::RendererCommand_Rectangle*>(
      ::mozc::commands::RendererCommand_Rectangle::internal_default_instance());
  ::mozc::commands::_RendererCommand_default_instance_._instance.get_mutable()->application_info_ = const_cast< ::mozc::commands::RendererCommand_ApplicationInfo*>(
      ::mozc::commands::RendererCommand_ApplicationInfo::internal_default_instance());
}
void RendererCommand::clear_output() {
  if (output_ != NULL) output_->Clear();
  clear_has_output();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RendererCommand::kTypeFieldNumber;
const int RendererCommand::kVisibleFieldNumber;
const int RendererCommand::kOutputFieldNumber;
const int RendererCommand::kPreeditRectangleFieldNumber;
const int RendererCommand::kApplicationInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RendererCommand::RendererCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mozc.commands.RendererCommand)
}
RendererCommand::RendererCommand(const RendererCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_output()) {
    output_ = new ::mozc::commands::Output(*from.output_);
  } else {
    output_ = NULL;
  }
  if (from.has_preedit_rectangle()) {
    preedit_rectangle_ = new ::mozc::commands::RendererCommand_Rectangle(*from.preedit_rectangle_);
  } else {
    preedit_rectangle_ = NULL;
  }
  if (from.has_application_info()) {
    application_info_ = new ::mozc::commands::RendererCommand_ApplicationInfo(*from.application_info_);
  } else {
    application_info_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&visible_) -
    reinterpret_cast<char*>(&type_)) + sizeof(visible_));
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand)
}

void RendererCommand::SharedCtor() {
  ::memset(&output_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visible_) -
      reinterpret_cast<char*>(&output_)) + sizeof(visible_));
}

RendererCommand::~RendererCommand() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand)
  SharedDtor();
}

void RendererCommand::SharedDtor() {
  if (this != internal_default_instance()) delete output_;
  if (this != internal_default_instance()) delete preedit_rectangle_;
  if (this != internal_default_instance()) delete application_info_;
}

void RendererCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RendererCommand::descriptor() {
  ::protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RendererCommand& RendererCommand::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protocol_2frenderer_5fcommand_2eproto::scc_info_RendererCommand.base);
  return *internal_default_instance();
}


void RendererCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(output_ != NULL);
      output_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(preedit_rectangle_ != NULL);
      preedit_rectangle_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(application_info_ != NULL);
      application_info_->Clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&visible_) -
        reinterpret_cast<char*>(&type_)) + sizeof(visible_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RendererCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mozc.commands.RendererCommand)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mozc.commands.RendererCommand.CommandType type = 1 [default = NOOP];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mozc::commands::RendererCommand_CommandType_IsValid(value)) {
            set_type(static_cast< ::mozc::commands::RendererCommand_CommandType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool visible = 2 [default = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_visible();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.Output output = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.RendererCommand.Rectangle preedit_rectangle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_preedit_rectangle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mozc.commands.RendererCommand.ApplicationInfo application_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_application_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mozc.commands.RendererCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mozc.commands.RendererCommand)
  return false;
#undef DO_
}

void RendererCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mozc.commands.RendererCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mozc.commands.RendererCommand.CommandType type = 1 [default = NOOP];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional bool visible = 2 [default = false];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->visible(), output);
  }

  // optional .mozc.commands.Output output = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_output(), output);
  }

  // optional .mozc.commands.RendererCommand.Rectangle preedit_rectangle = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_preedit_rectangle(), output);
  }

  // optional .mozc.commands.RendererCommand.ApplicationInfo application_info = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_application_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mozc.commands.RendererCommand)
}

::google::protobuf::uint8* RendererCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mozc.commands.RendererCommand.CommandType type = 1 [default = NOOP];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional bool visible = 2 [default = false];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->visible(), target);
  }

  // optional .mozc.commands.Output output = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_output(), deterministic, target);
  }

  // optional .mozc.commands.RendererCommand.Rectangle preedit_rectangle = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_preedit_rectangle(), deterministic, target);
  }

  // optional .mozc.commands.RendererCommand.ApplicationInfo application_info = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_application_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand)
  return target;
}

size_t RendererCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .mozc.commands.Output output = 3;
    if (has_output()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *output_);
    }

    // optional .mozc.commands.RendererCommand.Rectangle preedit_rectangle = 4;
    if (has_preedit_rectangle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *preedit_rectangle_);
    }

    // optional .mozc.commands.RendererCommand.ApplicationInfo application_info = 5;
    if (has_application_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *application_info_);
    }

    // optional .mozc.commands.RendererCommand.CommandType type = 1 [default = NOOP];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional bool visible = 2 [default = false];
    if (has_visible()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RendererCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand)
    MergeFrom(*source);
  }
}

void RendererCommand::MergeFrom(const RendererCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_output()->::mozc::commands::Output::MergeFrom(from.output());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_preedit_rectangle()->::mozc::commands::RendererCommand_Rectangle::MergeFrom(from.preedit_rectangle());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_application_info()->::mozc::commands::RendererCommand_ApplicationInfo::MergeFrom(from.application_info());
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      visible_ = from.visible_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand::CopyFrom(const RendererCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand::IsInitialized() const {
  if (has_output()) {
    if (!this->output_->IsInitialized()) return false;
  }
  return true;
}

void RendererCommand::Swap(RendererCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RendererCommand::InternalSwap(RendererCommand* other) {
  using std::swap;
  swap(output_, other->output_);
  swap(preedit_rectangle_, other->preedit_rectangle_);
  swap(application_info_, other->application_info_);
  swap(type_, other->type_);
  swap(visible_, other->visible_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RendererCommand::GetMetadata() const {
  protobuf_protocol_2frenderer_5fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protocol_2frenderer_5fcommand_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace commands
}  // namespace mozc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozc::commands::RendererCommand_Rectangle* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_Rectangle >(Arena* arena) {
  return Arena::CreateInternal< ::mozc::commands::RendererCommand_Rectangle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozc::commands::RendererCommand_Point* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_Point >(Arena* arena) {
  return Arena::CreateInternal< ::mozc::commands::RendererCommand_Point >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozc::commands::RendererCommand_WinLogFont* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_WinLogFont >(Arena* arena) {
  return Arena::CreateInternal< ::mozc::commands::RendererCommand_WinLogFont >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozc::commands::RendererCommand_CompositionForm* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_CompositionForm >(Arena* arena) {
  return Arena::CreateInternal< ::mozc::commands::RendererCommand_CompositionForm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozc::commands::RendererCommand_CandidateForm* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_CandidateForm >(Arena* arena) {
  return Arena::CreateInternal< ::mozc::commands::RendererCommand_CandidateForm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozc::commands::RendererCommand_CharacterPosition* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_CharacterPosition >(Arena* arena) {
  return Arena::CreateInternal< ::mozc::commands::RendererCommand_CharacterPosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozc::commands::RendererCommand_CaretInfo* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_CaretInfo >(Arena* arena) {
  return Arena::CreateInternal< ::mozc::commands::RendererCommand_CaretInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozc::commands::RendererCommand_IndicatorInfo* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_IndicatorInfo >(Arena* arena) {
  return Arena::CreateInternal< ::mozc::commands::RendererCommand_IndicatorInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozc::commands::RendererCommand_ApplicationInfo* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_ApplicationInfo >(Arena* arena) {
  return Arena::CreateInternal< ::mozc::commands::RendererCommand_ApplicationInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mozc::commands::RendererCommand* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand >(Arena* arena) {
  return Arena::CreateInternal< ::mozc::commands::RendererCommand >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
